{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thato\\\\Downloads\\\\car-app\\\\src\\\\components\\\\trades\\\\TradesView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { ArrowLeftRight, Car, Clock, CheckCircle, XCircle, User, Filter, Search } from 'lucide-react';\nimport { useApp } from '../../context/AppContext.tsx';\nimport { TradeDetailModal } from './TradeDetailModal.tsx';\nimport { TradeOfferModal } from './TradeOfferModal.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TradesView() {\n  _s();\n  var _state$currentUser4, _state$currentUser8, _state$currentUser1, _state$currentUser12;\n  const {\n    state,\n    loadAllListings,\n    reloadTrades\n  } = useApp();\n  const [activeTab, setActiveTab] = useState('outbound');\n  const [selectedTrade, setSelectedTrade] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('all');\n  const [showFilters, setShowFilters] = useState(false);\n  const [showCounterOffer, setShowCounterOffer] = useState(false);\n  const [counterOfferTrade, setCounterOfferTrade] = useState(null);\n\n  // Force reload trades when component mounts to trigger cleanup\n  useEffect(() => {\n    const loadTradesAndListings = async () => {\n      console.log('🔄 TradesView mounted, reloading trades to trigger cleanup...');\n      await reloadTrades();\n\n      // Also ensure we have listing data\n      if (state.allListings.length === 0) {\n        await loadAllListings();\n      }\n    };\n    loadTradesAndListings();\n  }, []); // Only run once on mount\n\n  // Separate outbound, inbound, and completed trades\n  const outboundTrades = useMemo(() => {\n    const filtered = state.trades.filter(trade => {\n      var _trade$offererUserId, _trade$offererUserId2, _trade$receiverUserId, _trade$receiverUserId2, _state$currentUser3;\n      const offererId = typeof trade.offererUserId === 'string' ? trade.offererUserId : ((_trade$offererUserId = trade.offererUserId) === null || _trade$offererUserId === void 0 ? void 0 : _trade$offererUserId._id) || ((_trade$offererUserId2 = trade.offererUserId) === null || _trade$offererUserId2 === void 0 ? void 0 : _trade$offererUserId2.id);\n      const receiverId = typeof trade.receiverUserId === 'string' ? trade.receiverUserId : ((_trade$receiverUserId = trade.receiverUserId) === null || _trade$receiverUserId === void 0 ? void 0 : _trade$receiverUserId._id) || ((_trade$receiverUserId2 = trade.receiverUserId) === null || _trade$receiverUserId2 === void 0 ? void 0 : _trade$receiverUserId2.id);\n\n      // For countered trades, determine who made the most recent action\n      if (trade.status === 'countered') {\n        var _trade$tradeHistory, _state$currentUser2;\n        // Check the most recent history entry to see who made the counter\n        const lastAction = (_trade$tradeHistory = trade.tradeHistory) === null || _trade$tradeHistory === void 0 ? void 0 : _trade$tradeHistory[trade.tradeHistory.length - 1];\n        if (lastAction && lastAction.action === 'countered') {\n          var _state$currentUser;\n          // The person who made the counter is the one with the \"outbound\" action\n          return lastAction.userId === ((_state$currentUser = state.currentUser) === null || _state$currentUser === void 0 ? void 0 : _state$currentUser.id);\n        }\n\n        // Fallback: if no history, check if user is offerer (original trade direction)\n        return offererId === ((_state$currentUser2 = state.currentUser) === null || _state$currentUser2 === void 0 ? void 0 : _state$currentUser2.id);\n      }\n\n      // For all other trades, standard logic - user is offerer\n      return offererId === ((_state$currentUser3 = state.currentUser) === null || _state$currentUser3 === void 0 ? void 0 : _state$currentUser3.id) && trade.status !== 'cancelled' && trade.status !== 'accepted' && trade.status !== 'pending_acceptance' && trade.status !== 'completed' && trade.status !== 'declined';\n    });\n    return filtered;\n  }, [state.trades, (_state$currentUser4 = state.currentUser) === null || _state$currentUser4 === void 0 ? void 0 : _state$currentUser4.id]);\n  const inboundTrades = useMemo(() => {\n    const filtered = state.trades.filter(trade => {\n      var _trade$offererUserId3, _trade$offererUserId4, _trade$receiverUserId3, _trade$receiverUserId4, _state$currentUser7;\n      const offererId = typeof trade.offererUserId === 'string' ? trade.offererUserId : ((_trade$offererUserId3 = trade.offererUserId) === null || _trade$offererUserId3 === void 0 ? void 0 : _trade$offererUserId3._id) || ((_trade$offererUserId4 = trade.offererUserId) === null || _trade$offererUserId4 === void 0 ? void 0 : _trade$offererUserId4.id);\n      const receiverId = typeof trade.receiverUserId === 'string' ? trade.receiverUserId : ((_trade$receiverUserId3 = trade.receiverUserId) === null || _trade$receiverUserId3 === void 0 ? void 0 : _trade$receiverUserId3._id) || ((_trade$receiverUserId4 = trade.receiverUserId) === null || _trade$receiverUserId4 === void 0 ? void 0 : _trade$receiverUserId4.id);\n\n      // For countered trades, determine who made the most recent action\n      if (trade.status === 'countered') {\n        var _trade$tradeHistory2, _state$currentUser6;\n        // Check the most recent history entry to see who made the counter\n        const lastAction = (_trade$tradeHistory2 = trade.tradeHistory) === null || _trade$tradeHistory2 === void 0 ? void 0 : _trade$tradeHistory2[trade.tradeHistory.length - 1];\n        if (lastAction && lastAction.action === 'countered') {\n          var _state$currentUser5;\n          // The person who made the counter has it as outbound, so the other person has it as inbound\n          return lastAction.userId !== ((_state$currentUser5 = state.currentUser) === null || _state$currentUser5 === void 0 ? void 0 : _state$currentUser5.id);\n        }\n\n        // Fallback: if no history, check if user is receiver (original trade direction)\n        return receiverId === ((_state$currentUser6 = state.currentUser) === null || _state$currentUser6 === void 0 ? void 0 : _state$currentUser6.id);\n      }\n\n      // For all other trades, standard logic - user is receiver\n      return receiverId === ((_state$currentUser7 = state.currentUser) === null || _state$currentUser7 === void 0 ? void 0 : _state$currentUser7.id) && trade.status !== 'cancelled' && trade.status !== 'accepted' && trade.status !== 'pending_acceptance' && trade.status !== 'completed' && trade.status !== 'declined';\n    });\n    return filtered;\n  }, [state.trades, (_state$currentUser8 = state.currentUser) === null || _state$currentUser8 === void 0 ? void 0 : _state$currentUser8.id]);\n  const completedTrades = useMemo(() => {\n    const filtered = state.trades.filter(trade => {\n      var _trade$offererUserId5, _trade$offererUserId6, _trade$receiverUserId5, _trade$receiverUserId6, _state$currentUser9, _state$currentUser0;\n      const offererId = typeof trade.offererUserId === 'string' ? trade.offererUserId : ((_trade$offererUserId5 = trade.offererUserId) === null || _trade$offererUserId5 === void 0 ? void 0 : _trade$offererUserId5._id) || ((_trade$offererUserId6 = trade.offererUserId) === null || _trade$offererUserId6 === void 0 ? void 0 : _trade$offererUserId6.id);\n      const receiverId = typeof trade.receiverUserId === 'string' ? trade.receiverUserId : ((_trade$receiverUserId5 = trade.receiverUserId) === null || _trade$receiverUserId5 === void 0 ? void 0 : _trade$receiverUserId5._id) || ((_trade$receiverUserId6 = trade.receiverUserId) === null || _trade$receiverUserId6 === void 0 ? void 0 : _trade$receiverUserId6.id);\n      return (offererId === ((_state$currentUser9 = state.currentUser) === null || _state$currentUser9 === void 0 ? void 0 : _state$currentUser9.id) || receiverId === ((_state$currentUser0 = state.currentUser) === null || _state$currentUser0 === void 0 ? void 0 : _state$currentUser0.id)) && (trade.status === 'completed' || trade.status === 'declined'); // Include declined trades\n    });\n    return filtered;\n  }, [state.trades, (_state$currentUser1 = state.currentUser) === null || _state$currentUser1 === void 0 ? void 0 : _state$currentUser1.id]);\n  const pendingTrades = useMemo(() => {\n    const filtered = state.trades.filter(trade => {\n      var _trade$offererUserId7, _trade$offererUserId8, _trade$receiverUserId7, _trade$receiverUserId8, _state$currentUser10, _state$currentUser11;\n      const offererId = typeof trade.offererUserId === 'string' ? trade.offererUserId : ((_trade$offererUserId7 = trade.offererUserId) === null || _trade$offererUserId7 === void 0 ? void 0 : _trade$offererUserId7._id) || ((_trade$offererUserId8 = trade.offererUserId) === null || _trade$offererUserId8 === void 0 ? void 0 : _trade$offererUserId8.id);\n      const receiverId = typeof trade.receiverUserId === 'string' ? trade.receiverUserId : ((_trade$receiverUserId7 = trade.receiverUserId) === null || _trade$receiverUserId7 === void 0 ? void 0 : _trade$receiverUserId7._id) || ((_trade$receiverUserId8 = trade.receiverUserId) === null || _trade$receiverUserId8 === void 0 ? void 0 : _trade$receiverUserId8.id);\n      const isInvolved = offererId === ((_state$currentUser10 = state.currentUser) === null || _state$currentUser10 === void 0 ? void 0 : _state$currentUser10.id) || receiverId === ((_state$currentUser11 = state.currentUser) === null || _state$currentUser11 === void 0 ? void 0 : _state$currentUser11.id);\n\n      // Include both new pending_acceptance trades and legacy accepted trades\n      return isInvolved && (trade.status === 'pending_acceptance' || trade.status === 'accepted');\n    });\n    return filtered;\n  }, [state.trades, (_state$currentUser12 = state.currentUser) === null || _state$currentUser12 === void 0 ? void 0 : _state$currentUser12.id]);\n  const currentTrades = activeTab === 'outbound' ? outboundTrades : activeTab === 'inbound' ? inboundTrades : activeTab === 'pending' ? pendingTrades : completedTrades;\n\n  // Filter trades based on search and status\n  const filteredTrades = useMemo(() => {\n    return currentTrades.filter(trade => {\n      var _trade$listingId, _trade$listingId2, _otherUser;\n      // Handle populated listing objects\n      const listingId = typeof trade.listingId === 'string' ? trade.listingId : ((_trade$listingId = trade.listingId) === null || _trade$listingId === void 0 ? void 0 : _trade$listingId._id) || ((_trade$listingId2 = trade.listingId) === null || _trade$listingId2 === void 0 ? void 0 : _trade$listingId2.id);\n      const listing = state.allListings.find(l => l.id === listingId);\n\n      // Handle populated user objects\n      let otherUser;\n      if (activeTab === 'outbound') {\n        // For outbound trades, we want the receiver\n        if (typeof trade.receiverUserId === 'object' && trade.receiverUserId.username) {\n          otherUser = trade.receiverUserId;\n        } else {\n          var _trade$receiverUserId9, _trade$receiverUserId0;\n          const receiverId = typeof trade.receiverUserId === 'string' ? trade.receiverUserId : ((_trade$receiverUserId9 = trade.receiverUserId) === null || _trade$receiverUserId9 === void 0 ? void 0 : _trade$receiverUserId9._id) || ((_trade$receiverUserId0 = trade.receiverUserId) === null || _trade$receiverUserId0 === void 0 ? void 0 : _trade$receiverUserId0.id);\n          otherUser = state.users.find(u => u.id === receiverId) || {\n            id: receiverId,\n            username: 'Unknown User',\n            email: '',\n            password: '',\n            createdAt: '',\n            location: ''\n          };\n        }\n      } else if (activeTab === 'inbound') {\n        // For inbound trades, we want the offerer\n        if (typeof trade.offererUserId === 'object' && trade.offererUserId.username) {\n          otherUser = trade.offererUserId;\n        } else {\n          var _trade$offererUserId9, _trade$offererUserId0;\n          const offererId = typeof trade.offererUserId === 'string' ? trade.offererUserId : ((_trade$offererUserId9 = trade.offererUserId) === null || _trade$offererUserId9 === void 0 ? void 0 : _trade$offererUserId9._id) || ((_trade$offererUserId0 = trade.offererUserId) === null || _trade$offererUserId0 === void 0 ? void 0 : _trade$offererUserId0.id);\n          otherUser = state.users.find(u => u.id === offererId) || {\n            id: offererId,\n            username: 'Unknown User',\n            email: '',\n            password: '',\n            createdAt: '',\n            location: ''\n          };\n        }\n      }\n      const matchesSearch = !searchTerm || (listing === null || listing === void 0 ? void 0 : listing.title.toLowerCase().includes(searchTerm.toLowerCase())) || ((_otherUser = otherUser) === null || _otherUser === void 0 ? void 0 : _otherUser.username.toLowerCase().includes(searchTerm.toLowerCase()));\n      const matchesStatus = statusFilter === 'all' || trade.status === statusFilter;\n      return matchesSearch && matchesStatus;\n    });\n  }, [currentTrades, searchTerm, statusFilter, state.allListings, state.users, activeTab]);\n  const getStatusColor = status => {\n    switch (status) {\n      case 'pending':\n        return 'text-yellow-400';\n      case 'accepted':\n        return 'text-green-400';\n      case 'pending_acceptance':\n        return 'text-blue-400';\n      case 'rejected':\n        return 'text-red-400';\n      case 'completed':\n        return 'text-green-500';\n      case 'declined':\n        return 'text-red-500';\n      case 'cancelled':\n        return 'text-gray-400';\n      case 'countered':\n        return 'text-purple-400';\n      default:\n        return 'text-primary-300';\n    }\n  };\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'pending':\n        return /*#__PURE__*/_jsxDEV(Clock, {\n          className: \"w-4 h-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 30\n        }, this);\n      case 'accepted':\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"w-4 h-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 31\n        }, this);\n      case 'pending_acceptance':\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"w-4 h-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 41\n        }, this);\n      case 'rejected':\n        return /*#__PURE__*/_jsxDEV(XCircle, {\n          className: \"w-4 h-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 31\n        }, this);\n      case 'completed':\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"w-4 h-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 32\n        }, this);\n      case 'declined':\n        return /*#__PURE__*/_jsxDEV(XCircle, {\n          className: \"w-4 h-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 31\n        }, this);\n      case 'cancelled':\n        return /*#__PURE__*/_jsxDEV(XCircle, {\n          className: \"w-4 h-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 32\n        }, this);\n      case 'countered':\n        return /*#__PURE__*/_jsxDEV(ArrowLeftRight, {\n          className: \"w-4 h-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 32\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Clock, {\n          className: \"w-4 h-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 23\n        }, this);\n    }\n  };\n  const formatTimeAgo = dateString => {\n    try {\n      const now = new Date();\n      const date = new Date(dateString);\n      const diffInMinutes = Math.floor((now.getTime() - date.getTime()) / (1000 * 60));\n      if (diffInMinutes < 1) return 'Just now';\n      if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n      const diffInHours = Math.floor(diffInMinutes / 60);\n      if (diffInHours < 24) return `${diffInHours}h ago`;\n      const diffInDays = Math.floor(diffInHours / 24);\n      if (diffInDays < 7) return `${diffInDays}d ago`;\n      if (diffInDays < 30) return `${Math.floor(diffInDays / 7)}w ago`;\n      return date.toLocaleDateString();\n    } catch (error) {\n      return 'Unknown';\n    }\n  };\n  const handleTradeClick = trade => {\n    setSelectedTrade(trade);\n  };\n  const handleCounterOffer = trade => {\n    setCounterOfferTrade(trade);\n    setShowCounterOffer(true);\n    setSelectedTrade(null);\n  };\n  const renderTradeCard = (trade, isOutbound) => {\n    var _otherUser2;\n    // Handle both populated listing objects and string IDs\n    let listing;\n    if (typeof trade.listingId === 'object' && trade.listingId) {\n      // listingId is already a populated listing object\n      listing = trade.listingId;\n    } else {\n      var _trade$listingId3, _trade$listingId4;\n      // listingId is a string, find it in allListings\n      const listingId = typeof trade.listingId === 'string' ? trade.listingId : ((_trade$listingId3 = trade.listingId) === null || _trade$listingId3 === void 0 ? void 0 : _trade$listingId3._id) || ((_trade$listingId4 = trade.listingId) === null || _trade$listingId4 === void 0 ? void 0 : _trade$listingId4.id);\n      listing = state.allListings.find(l => l.id === listingId);\n    }\n    if (!listing) {\n      console.log('🔍 Listing not found for trade:', trade.id, 'listingId:', trade.listingId);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glass-effect rounded-xl p-4 border border-red-500/30\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-400\",\n          children: \"Listing not found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-red-300\",\n          children: [\"Trade ID: \", trade.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-red-300\",\n          children: [\"Listing ID: \", JSON.stringify(trade.listingId)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, trade.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Extract user info properly (handle both populated objects and IDs)\n    let otherUser;\n    if (isOutbound) {\n      // For outbound trades, we want the receiver\n      if (typeof trade.receiverUserId === 'object' && trade.receiverUserId.username) {\n        otherUser = trade.receiverUserId;\n      } else {\n        var _trade$receiverUserId1, _trade$receiverUserId10;\n        const receiverId = typeof trade.receiverUserId === 'string' ? trade.receiverUserId : ((_trade$receiverUserId1 = trade.receiverUserId) === null || _trade$receiverUserId1 === void 0 ? void 0 : _trade$receiverUserId1._id) || ((_trade$receiverUserId10 = trade.receiverUserId) === null || _trade$receiverUserId10 === void 0 ? void 0 : _trade$receiverUserId10.id);\n        otherUser = state.users.find(u => u.id === receiverId) || {\n          id: receiverId,\n          username: 'Unknown User',\n          email: '',\n          password: '',\n          createdAt: '',\n          location: ''\n        };\n      }\n    } else {\n      // For inbound trades, we want the offerer\n      if (typeof trade.offererUserId === 'object' && trade.offererUserId.username) {\n        otherUser = trade.offererUserId;\n      } else {\n        var _trade$offererUserId1, _trade$offererUserId10;\n        const offererId = typeof trade.offererUserId === 'string' ? trade.offererUserId : ((_trade$offererUserId1 = trade.offererUserId) === null || _trade$offererUserId1 === void 0 ? void 0 : _trade$offererUserId1._id) || ((_trade$offererUserId10 = trade.offererUserId) === null || _trade$offererUserId10 === void 0 ? void 0 : _trade$offererUserId10.id);\n        otherUser = state.users.find(u => u.id === offererId) || {\n          id: offererId,\n          username: 'Unknown User',\n          email: '',\n          password: '',\n          createdAt: '',\n          location: ''\n        };\n      }\n    }\n\n    // Get vehicles involved in the trade\n    // Use preserved vehicle objects from AppContext transformation, fallback to state.vehicles\n    const getVehicleFromId = vehicleId => {\n      return state.vehicles.find(v => v.id === vehicleId) || null;\n    };\n\n    // For offerer vehicles, use preserved objects if available, otherwise lookup by ID\n    const offererVehicles = trade.offererVehicleObjects || trade.offererVehicleIds.map(getVehicleFromId).filter(Boolean);\n\n    // For receiver vehicles, use preserved objects if available, otherwise lookup by ID  \n    const receiverVehicles = trade.receiverVehicleObjects || (trade.receiverVehicleIds || []).map(getVehicleFromId).filter(Boolean);\n\n    // Get vehicles to display and calculate values based on trade status and direction\n    let displayVehicles, displayCashAmount, displayTotalValue, vehicleCount;\n    if (trade.status === 'countered') {\n      var _trade$tradeHistory3, _trade$offererUserId11, _trade$offererUserId12;\n      // For countered trades, show the most recent counter offer\n      // Check who made the most recent counter from trade history\n      const lastAction = (_trade$tradeHistory3 = trade.tradeHistory) === null || _trade$tradeHistory3 === void 0 ? void 0 : _trade$tradeHistory3[trade.tradeHistory.length - 1];\n      const lastCounterUserId = lastAction === null || lastAction === void 0 ? void 0 : lastAction.userId;\n\n      // If the original offerer made the most recent counter, show their updated offer\n      const originalOffererId = typeof trade.offererUserId === 'string' ? trade.offererUserId : ((_trade$offererUserId11 = trade.offererUserId) === null || _trade$offererUserId11 === void 0 ? void 0 : _trade$offererUserId11._id) || ((_trade$offererUserId12 = trade.offererUserId) === null || _trade$offererUserId12 === void 0 ? void 0 : _trade$offererUserId12.id);\n      if (lastCounterUserId === originalOffererId) {\n        // Original offerer made the counter-counter, show their updated terms\n        displayVehicles = offererVehicles;\n        displayCashAmount = trade.offererCashAmount;\n        displayTotalValue = displayCashAmount + offererVehicles.reduce((sum, v) => sum + ((v === null || v === void 0 ? void 0 : v.customPrice) || (v === null || v === void 0 ? void 0 : v.estimatedValue) || 0), 0);\n        vehicleCount = trade.offererVehicleIds.length;\n      } else {\n        // Original receiver made the counter, show their counter terms\n        displayVehicles = receiverVehicles;\n        displayCashAmount = trade.receiverCashAmount || 0;\n        displayTotalValue = displayCashAmount + receiverVehicles.reduce((sum, v) => sum + ((v === null || v === void 0 ? void 0 : v.customPrice) || (v === null || v === void 0 ? void 0 : v.estimatedValue) || 0), 0);\n        vehicleCount = (trade.receiverVehicleIds || []).length;\n      }\n    } else if (['accepted', 'pending_acceptance', 'completed'].includes(trade.status)) {\n      // For accepted/pending/completed trades, show all vehicles involved in the trade\n      const allVehicles = [...offererVehicles, ...receiverVehicles];\n      const totalCash = trade.offererCashAmount + (trade.receiverCashAmount || 0);\n      const totalVehicleValue = allVehicles.reduce((sum, v) => sum + ((v === null || v === void 0 ? void 0 : v.customPrice) || (v === null || v === void 0 ? void 0 : v.estimatedValue) || 0), 0);\n      displayVehicles = allVehicles;\n      displayCashAmount = totalCash;\n      displayTotalValue = totalCash + totalVehicleValue;\n      vehicleCount = trade.offererVehicleIds.length + (trade.receiverVehicleIds || []).length;\n    } else {\n      // For all other trades, show the original offer (offerer's terms)\n      displayVehicles = offererVehicles;\n      displayCashAmount = trade.offererCashAmount;\n      displayTotalValue = displayCashAmount + offererVehicles.reduce((sum, v) => sum + ((v === null || v === void 0 ? void 0 : v.customPrice) || (v === null || v === void 0 ? void 0 : v.estimatedValue) || 0), 0);\n      vehicleCount = trade.offererVehicleIds.length;\n    }\n    return /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0,\n        y: 20\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      className: \"glass-effect rounded-xl p-6 hover:bg-primary-800/20 transition-all cursor-pointer\",\n      onClick: () => setSelectedTrade(trade),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-20 h-20 bg-primary-800/30 rounded-lg flex items-center justify-center flex-shrink-0\",\n          children: (_vehicle$images => {\n            // Get vehicle from populated listing or find it in state\n            const populatedVehicle = listing.vehicle;\n            const vehicle = populatedVehicle || state.vehicles.find(v => v.id === listing.vehicleId);\n            const vehicleImage = vehicle === null || vehicle === void 0 ? void 0 : (_vehicle$images = vehicle.images) === null || _vehicle$images === void 0 ? void 0 : _vehicle$images[0];\n            return vehicleImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: vehicleImage,\n              alt: listing.title,\n              className: \"w-full h-full object-cover rounded-lg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Car, {\n              className: \"w-8 h-8 text-primary-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this);\n          })()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-semibold text-primary-100\",\n              children: listing.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `flex items-center space-x-1 ${getStatusColor(trade.status)}`,\n              children: [getStatusIcon(trade.status), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm font-medium capitalize\",\n                children: trade.status === 'pending_acceptance' ? 'Pending' : trade.status === 'countered' ? 'Countered' : trade.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2 mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-primary-300\",\n                children: trade.status === 'countered' ? isOutbound ? 'Your Counter:' : 'Their Counter:' : ['accepted', 'pending_acceptance', 'completed'].includes(trade.status) ? 'Total Trade Value:' : isOutbound ? 'Your Offer:' : 'Their Offer:'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-green-400 font-medium\",\n                children: [\"$\", displayTotalValue.toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 15\n            }, this), vehicleCount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-primary-300\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: ['accepted', 'pending_acceptance', 'completed'].includes(trade.status) ? `${vehicleCount} vehicle${vehicleCount !== 1 ? 's' : ''} in trade` : `${vehicleCount} vehicle${vehicleCount !== 1 ? 's' : ''} included`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 19\n              }, this), displayVehicles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-1 text-xs\",\n                children: [displayVehicles.slice(0, 2).map((vehicle, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-primary-400\",\n                  children: [vehicle === null || vehicle === void 0 ? void 0 : vehicle.year, \" \", vehicle === null || vehicle === void 0 ? void 0 : vehicle.make, \" \", vehicle === null || vehicle === void 0 ? void 0 : vehicle.model, index < Math.min(displayVehicles.length, 2) - 1 && ', ']\n                }, vehicle === null || vehicle === void 0 ? void 0 : vehicle.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 25\n                }, this)), displayVehicles.length > 2 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-primary-400\",\n                  children: [\" +\", displayVehicles.length - 2, \" more\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-6 h-6 bg-primary-800/50 rounded-full flex items-center justify-center\",\n                children: /*#__PURE__*/_jsxDEV(User, {\n                  className: \"w-4 h-4 text-primary-300\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-primary-300\",\n                children: [isOutbound ? 'To:' : 'From:', \" @\", ((_otherUser2 = otherUser) === null || _otherUser2 === void 0 ? void 0 : _otherUser2.username) || 'Unknown User']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs text-primary-400\",\n              children: formatTimeAgo(trade.updatedAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this)\n    }, trade.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold text-primary-100\",\n          children: \"Trade Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-primary-300 mt-1\",\n          children: \"Manage your vehicle trade offers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-1 bg-primary-800/30 rounded-lg p-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab('outbound'),\n        className: `flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors ${activeTab === 'outbound' ? 'bg-primary-100/20 text-primary-100' : 'text-primary-300 hover:text-primary-200'}`,\n        children: [\"Outbound (\", outboundTrades.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab('inbound'),\n        className: `flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors ${activeTab === 'inbound' ? 'bg-primary-100/20 text-primary-100' : 'text-primary-300 hover:text-primary-200'}`,\n        children: [\"Inbound (\", inboundTrades.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab('pending'),\n        className: `flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors ${activeTab === 'pending' ? 'bg-primary-100/20 text-primary-100' : 'text-primary-300 hover:text-primary-200'}`,\n        children: [\"Pending (\", pendingTrades.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab('completed'),\n        className: `flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors ${activeTab === 'completed' ? 'bg-primary-100/20 text-primary-100' : 'text-primary-300 hover:text-primary-200'}`,\n        children: [\"Completed (\", completedTrades.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"glass-effect rounded-xl p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col lg:flex-row gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 relative\",\n          children: [/*#__PURE__*/_jsxDEV(Search, {\n            className: \"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-primary-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search by listing title or username...\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value),\n            className: \"input-field pl-10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n          whileTap: {\n            scale: 0.95\n          },\n          onClick: () => setShowFilters(!showFilters),\n          className: `btn-secondary flex items-center space-x-2 ${showFilters ? 'bg-primary-100/20' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(Filter, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 9\n      }, this), showFilters && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          height: 0\n        },\n        animate: {\n          opacity: 1,\n          height: 'auto'\n        },\n        exit: {\n          opacity: 0,\n          height: 0\n        },\n        className: \"mt-4 pt-4 border-t border-primary-700/30\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-primary-300 mb-2\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: statusFilter,\n              onChange: e => setStatusFilter(e.target.value),\n              className: \"input-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"all\",\n                children: \"All Statuses\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"pending\",\n                children: \"Pending\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 592,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"countered\",\n                children: \"Countered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"accepted\",\n                children: \"Accepted\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"rejected\",\n                children: \"Rejected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"completed\",\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 596,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"cancelled\",\n                children: \"Cancelled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 597,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: filteredTrades.length === 0 ? /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        className: \"text-center py-16\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-24 h-24 bg-primary-800/50 rounded-full flex items-center justify-center mx-auto mb-4\",\n          children: /*#__PURE__*/_jsxDEV(ArrowLeftRight, {\n            className: \"w-12 h-12 text-primary-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold text-primary-200 mb-2\",\n          children: [\"No \", activeTab, \" trades found\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-primary-400 mb-6\",\n          children: activeTab === 'outbound' ? \"You haven't made any trade offers yet. Go to Listings to make trade offers on vehicles you're interested in.\" : activeTab === 'inbound' ? \"You haven't received any trade offers yet\" : \"No completed trades found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n          children: filteredTrades.map(trade => renderTradeCard(trade, activeTab === 'outbound'))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: selectedTrade && /*#__PURE__*/_jsxDEV(TradeDetailModal, {\n        trade: selectedTrade,\n        isOutbound: ((_selectedTrade$offere, _selectedTrade$offere2, _selectedTrade$receiv, _selectedTrade$receiv2, _state$currentUser15) => {\n          const offererId = typeof selectedTrade.offererUserId === 'string' ? selectedTrade.offererUserId : ((_selectedTrade$offere = selectedTrade.offererUserId) === null || _selectedTrade$offere === void 0 ? void 0 : _selectedTrade$offere._id) || ((_selectedTrade$offere2 = selectedTrade.offererUserId) === null || _selectedTrade$offere2 === void 0 ? void 0 : _selectedTrade$offere2.id);\n          const receiverId = typeof selectedTrade.receiverUserId === 'string' ? selectedTrade.receiverUserId : ((_selectedTrade$receiv = selectedTrade.receiverUserId) === null || _selectedTrade$receiv === void 0 ? void 0 : _selectedTrade$receiv._id) || ((_selectedTrade$receiv2 = selectedTrade.receiverUserId) === null || _selectedTrade$receiv2 === void 0 ? void 0 : _selectedTrade$receiv2.id);\n\n          // For countered trades, check who made the most recent counter from trade history\n          if (selectedTrade.status === 'countered') {\n            var _selectedTrade$tradeH, _state$currentUser14;\n            const lastAction = (_selectedTrade$tradeH = selectedTrade.tradeHistory) === null || _selectedTrade$tradeH === void 0 ? void 0 : _selectedTrade$tradeH[selectedTrade.tradeHistory.length - 1];\n            if (lastAction && lastAction.action === 'countered') {\n              var _state$currentUser13;\n              // The person who made the most recent counter has it as outbound\n              return lastAction.userId === ((_state$currentUser13 = state.currentUser) === null || _state$currentUser13 === void 0 ? void 0 : _state$currentUser13.id);\n            }\n\n            // Fallback: if no history, check if user is receiver (original trade direction)\n            return receiverId === ((_state$currentUser14 = state.currentUser) === null || _state$currentUser14 === void 0 ? void 0 : _state$currentUser14.id);\n          }\n\n          // For all other trades, standard logic - outbound if current user is offerer\n          return offererId === ((_state$currentUser15 = state.currentUser) === null || _state$currentUser15 === void 0 ? void 0 : _state$currentUser15.id);\n        })(),\n        onClose: () => setSelectedTrade(null),\n        onCounterOffer: handleCounterOffer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: showCounterOffer && counterOfferTrade && /*#__PURE__*/_jsxDEV(TradeOfferModal, {\n        onClose: () => {\n          setShowCounterOffer(false);\n          setCounterOfferTrade(null);\n        },\n        existingTrade: counterOfferTrade\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 494,\n    columnNumber: 5\n  }, this);\n}\n_s(TradesView, \"QNiLC2XRhw8naLnymTHgtRu3rSA=\", false, function () {\n  return [useApp];\n});\n_c = TradesView;\nvar _c;\n$RefreshReg$(_c, \"TradesView\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","motion","AnimatePresence","ArrowLeftRight","Car","Clock","CheckCircle","XCircle","User","Filter","Search","useApp","TradeDetailModal","TradeOfferModal","jsxDEV","_jsxDEV","TradesView","_s","_state$currentUser4","_state$currentUser8","_state$currentUser1","_state$currentUser12","state","loadAllListings","reloadTrades","activeTab","setActiveTab","selectedTrade","setSelectedTrade","searchTerm","setSearchTerm","statusFilter","setStatusFilter","showFilters","setShowFilters","showCounterOffer","setShowCounterOffer","counterOfferTrade","setCounterOfferTrade","loadTradesAndListings","console","log","allListings","length","outboundTrades","filtered","trades","filter","trade","_trade$offererUserId","_trade$offererUserId2","_trade$receiverUserId","_trade$receiverUserId2","_state$currentUser3","offererId","offererUserId","_id","id","receiverId","receiverUserId","status","_trade$tradeHistory","_state$currentUser2","lastAction","tradeHistory","action","_state$currentUser","userId","currentUser","inboundTrades","_trade$offererUserId3","_trade$offererUserId4","_trade$receiverUserId3","_trade$receiverUserId4","_state$currentUser7","_trade$tradeHistory2","_state$currentUser6","_state$currentUser5","completedTrades","_trade$offererUserId5","_trade$offererUserId6","_trade$receiverUserId5","_trade$receiverUserId6","_state$currentUser9","_state$currentUser0","pendingTrades","_trade$offererUserId7","_trade$offererUserId8","_trade$receiverUserId7","_trade$receiverUserId8","_state$currentUser10","_state$currentUser11","isInvolved","currentTrades","filteredTrades","_trade$listingId","_trade$listingId2","_otherUser","listingId","listing","find","l","otherUser","username","_trade$receiverUserId9","_trade$receiverUserId0","users","u","email","password","createdAt","location","_trade$offererUserId9","_trade$offererUserId0","matchesSearch","title","toLowerCase","includes","matchesStatus","getStatusColor","getStatusIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","formatTimeAgo","dateString","now","Date","date","diffInMinutes","Math","floor","getTime","diffInHours","diffInDays","toLocaleDateString","error","handleTradeClick","handleCounterOffer","renderTradeCard","isOutbound","_otherUser2","_trade$listingId3","_trade$listingId4","children","JSON","stringify","_trade$receiverUserId1","_trade$receiverUserId10","_trade$offererUserId1","_trade$offererUserId10","getVehicleFromId","vehicleId","vehicles","v","offererVehicles","offererVehicleObjects","offererVehicleIds","map","Boolean","receiverVehicles","receiverVehicleObjects","receiverVehicleIds","displayVehicles","displayCashAmount","displayTotalValue","vehicleCount","_trade$tradeHistory3","_trade$offererUserId11","_trade$offererUserId12","lastCounterUserId","originalOffererId","offererCashAmount","reduce","sum","customPrice","estimatedValue","receiverCashAmount","allVehicles","totalCash","totalVehicleValue","div","initial","opacity","y","animate","onClick","_vehicle$images","populatedVehicle","vehicle","vehicleImage","images","src","alt","toLocaleString","slice","index","year","make","model","min","updatedAt","type","placeholder","value","onChange","e","target","button","whileTap","scale","height","exit","_selectedTrade$offere","_selectedTrade$offere2","_selectedTrade$receiv","_selectedTrade$receiv2","_state$currentUser15","_selectedTrade$tradeH","_state$currentUser14","_state$currentUser13","onClose","onCounterOffer","existingTrade","_c","$RefreshReg$"],"sources":["C:/Users/thato/Downloads/car-app/src/components/trades/TradesView.tsx"],"sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  ArrowLeftRight, \n  Car, \n  DollarSign, \n  Clock, \n  CheckCircle, \n  XCircle, \n  MessageCircle,\n  User,\n  Eye,\n  Calendar,\n  Filter,\n  Search,\n  RefreshCw\n} from 'lucide-react';\nimport { useApp } from '../../context/AppContext.tsx';\nimport { Trade, Listing, Vehicle, User as UserType } from '../../types/index.ts';\nimport { TradeDetailModal } from './TradeDetailModal.tsx';\nimport { TradeOfferModal } from './TradeOfferModal.tsx';\n\nexport function TradesView() {\n  const { state, loadAllListings, reloadTrades } = useApp();\n  const [activeTab, setActiveTab] = useState<'outbound' | 'inbound' | 'pending' | 'completed'>('outbound');\n  const [selectedTrade, setSelectedTrade] = useState<Trade | null>(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('all');\n  const [showFilters, setShowFilters] = useState(false);\n  const [showCounterOffer, setShowCounterOffer] = useState(false);\n  const [counterOfferTrade, setCounterOfferTrade] = useState<Trade | null>(null);\n\n  // Force reload trades when component mounts to trigger cleanup\n  useEffect(() => {\n    const loadTradesAndListings = async () => {\n      console.log('🔄 TradesView mounted, reloading trades to trigger cleanup...');\n      await reloadTrades();\n      \n      // Also ensure we have listing data\n      if (state.allListings.length === 0) {\n        await loadAllListings();\n      }\n    };\n\n    loadTradesAndListings();\n  }, []); // Only run once on mount\n\n  // Separate outbound, inbound, and completed trades\n  const outboundTrades = useMemo(() => {\n    const filtered = state.trades.filter(trade => {\n      const offererId = typeof trade.offererUserId === 'string' \n        ? trade.offererUserId \n        : (trade.offererUserId as any)?._id || (trade.offererUserId as any)?.id;\n      const receiverId = typeof trade.receiverUserId === 'string' \n        ? trade.receiverUserId \n        : (trade.receiverUserId as any)?._id || (trade.receiverUserId as any)?.id;\n      \n      // For countered trades, determine who made the most recent action\n      if (trade.status === 'countered') {\n        // Check the most recent history entry to see who made the counter\n        const lastAction = trade.tradeHistory?.[trade.tradeHistory.length - 1];\n        if (lastAction && lastAction.action === 'countered') {\n          // The person who made the counter is the one with the \"outbound\" action\n          return lastAction.userId === state.currentUser?.id;\n        }\n        \n        // Fallback: if no history, check if user is offerer (original trade direction)\n        return offererId === state.currentUser?.id;\n      }\n      \n      // For all other trades, standard logic - user is offerer\n      return offererId === state.currentUser?.id && \n             trade.status !== 'cancelled' && \n             trade.status !== 'accepted' && \n             trade.status !== 'pending_acceptance' && \n             trade.status !== 'completed' && \n             trade.status !== 'declined';\n    });\n    \n    return filtered;\n  }, [state.trades, state.currentUser?.id]);\n\n  const inboundTrades = useMemo(() => {\n    const filtered = state.trades.filter(trade => {\n      const offererId = typeof trade.offererUserId === 'string' \n        ? trade.offererUserId \n        : (trade.offererUserId as any)?._id || (trade.offererUserId as any)?.id;\n      const receiverId = typeof trade.receiverUserId === 'string' \n        ? trade.receiverUserId \n        : (trade.receiverUserId as any)?._id || (trade.receiverUserId as any)?.id;\n      \n      // For countered trades, determine who made the most recent action\n      if (trade.status === 'countered') {\n        // Check the most recent history entry to see who made the counter\n        const lastAction = trade.tradeHistory?.[trade.tradeHistory.length - 1];\n        if (lastAction && lastAction.action === 'countered') {\n          // The person who made the counter has it as outbound, so the other person has it as inbound\n          return lastAction.userId !== state.currentUser?.id;\n        }\n        \n        // Fallback: if no history, check if user is receiver (original trade direction)\n        return receiverId === state.currentUser?.id;\n      }\n      \n      // For all other trades, standard logic - user is receiver\n      return receiverId === state.currentUser?.id && \n             trade.status !== 'cancelled' && \n             trade.status !== 'accepted' && \n             trade.status !== 'pending_acceptance' && \n             trade.status !== 'completed' && \n             trade.status !== 'declined';\n    });\n    \n    return filtered;\n  }, [state.trades, state.currentUser?.id]);\n\n  const completedTrades = useMemo(() => {\n    const filtered = state.trades.filter(trade => {\n      const offererId = typeof trade.offererUserId === 'string' \n        ? trade.offererUserId \n        : (trade.offererUserId as any)?._id || (trade.offererUserId as any)?.id;\n      const receiverId = typeof trade.receiverUserId === 'string' \n        ? trade.receiverUserId \n        : (trade.receiverUserId as any)?._id || (trade.receiverUserId as any)?.id;\n      \n      return (offererId === state.currentUser?.id || receiverId === state.currentUser?.id) && \n             (trade.status === 'completed' || trade.status === 'declined'); // Include declined trades\n    });\n    \n    return filtered;\n  }, [state.trades, state.currentUser?.id]);\n\n  const pendingTrades = useMemo(() => {\n    const filtered = state.trades.filter(trade => {\n      const offererId = typeof trade.offererUserId === 'string' \n        ? trade.offererUserId \n        : (trade.offererUserId as any)?._id || (trade.offererUserId as any)?.id;\n      const receiverId = typeof trade.receiverUserId === 'string' \n        ? trade.receiverUserId \n        : (trade.receiverUserId as any)?._id || (trade.receiverUserId as any)?.id;\n      \n      const isInvolved = offererId === state.currentUser?.id || receiverId === state.currentUser?.id;\n      \n      // Include both new pending_acceptance trades and legacy accepted trades\n      return isInvolved && (trade.status === 'pending_acceptance' || trade.status === 'accepted');\n    });\n    \n    return filtered;\n  }, [state.trades, state.currentUser?.id]);\n\n  const currentTrades = activeTab === 'outbound' ? outboundTrades : \n                       activeTab === 'inbound' ? inboundTrades : \n                       activeTab === 'pending' ? pendingTrades : \n                       completedTrades;\n\n  // Filter trades based on search and status\n  const filteredTrades = useMemo(() => {\n    return currentTrades.filter(trade => {\n      // Handle populated listing objects\n      const listingId = typeof trade.listingId === 'string' \n        ? trade.listingId \n        : (trade.listingId as any)?._id || (trade.listingId as any)?.id;\n      \n      const listing = state.allListings.find(l => l.id === listingId);\n      \n      // Handle populated user objects\n      let otherUser: UserType | undefined;\n      if (activeTab === 'outbound') {\n        // For outbound trades, we want the receiver\n        if (typeof trade.receiverUserId === 'object' && (trade.receiverUserId as any).username) {\n          otherUser = trade.receiverUserId as any;\n        } else {\n          const receiverId = typeof trade.receiverUserId === 'string' ? trade.receiverUserId : (trade.receiverUserId as any)?._id || (trade.receiverUserId as any)?.id;\n          otherUser = state.users.find(u => u.id === receiverId) || {\n            id: receiverId,\n            username: 'Unknown User',\n            email: '',\n            password: '',\n            createdAt: '',\n            location: ''\n          };\n        }\n      } else if (activeTab === 'inbound') {\n        // For inbound trades, we want the offerer\n        if (typeof trade.offererUserId === 'object' && (trade.offererUserId as any).username) {\n          otherUser = trade.offererUserId as any;\n        } else {\n          const offererId = typeof trade.offererUserId === 'string' ? trade.offererUserId : (trade.offererUserId as any)?._id || (trade.offererUserId as any)?.id;\n          otherUser = state.users.find(u => u.id === offererId) || {\n            id: offererId,\n            username: 'Unknown User',\n            email: '',\n            password: '',\n            createdAt: '',\n            location: ''\n          };\n        }\n      }\n      \n      const matchesSearch = !searchTerm || \n        listing?.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        otherUser?.username.toLowerCase().includes(searchTerm.toLowerCase());\n      \n      const matchesStatus = statusFilter === 'all' || trade.status === statusFilter;\n      \n      return matchesSearch && matchesStatus;\n    });\n  }, [currentTrades, searchTerm, statusFilter, state.allListings, state.users, activeTab]);\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'pending': return 'text-yellow-400';\n      case 'accepted': return 'text-green-400';\n      case 'pending_acceptance': return 'text-blue-400';\n      case 'rejected': return 'text-red-400';\n      case 'completed': return 'text-green-500';\n      case 'declined': return 'text-red-500';\n      case 'cancelled': return 'text-gray-400';\n      case 'countered': return 'text-purple-400';\n      default: return 'text-primary-300';\n    }\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'pending': return <Clock className=\"w-4 h-4\" />;\n      case 'accepted': return <CheckCircle className=\"w-4 h-4\" />;\n      case 'pending_acceptance': return <CheckCircle className=\"w-4 h-4\" />;\n      case 'rejected': return <XCircle className=\"w-4 h-4\" />;\n      case 'completed': return <CheckCircle className=\"w-4 h-4\" />;\n      case 'declined': return <XCircle className=\"w-4 h-4\" />;\n      case 'cancelled': return <XCircle className=\"w-4 h-4\" />;\n      case 'countered': return <ArrowLeftRight className=\"w-4 h-4\" />;\n      default: return <Clock className=\"w-4 h-4\" />;\n    }\n  };\n\n  const formatTimeAgo = (dateString: string) => {\n    try {\n      const now = new Date();\n      const date = new Date(dateString);\n      const diffInMinutes = Math.floor((now.getTime() - date.getTime()) / (1000 * 60));\n      \n      if (diffInMinutes < 1) return 'Just now';\n      if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n      \n      const diffInHours = Math.floor(diffInMinutes / 60);\n      if (diffInHours < 24) return `${diffInHours}h ago`;\n      \n      const diffInDays = Math.floor(diffInHours / 24);\n      if (diffInDays < 7) return `${diffInDays}d ago`;\n      if (diffInDays < 30) return `${Math.floor(diffInDays / 7)}w ago`;\n      \n      return date.toLocaleDateString();\n    } catch (error) {\n      return 'Unknown';\n    }\n  };\n\n  const handleTradeClick = (trade: Trade) => {\n    setSelectedTrade(trade);\n  };\n\n  const handleCounterOffer = (trade: Trade) => {\n    setCounterOfferTrade(trade);\n    setShowCounterOffer(true);\n    setSelectedTrade(null);\n  };\n\n  const renderTradeCard = (trade: Trade, isOutbound: boolean) => {\n    // Handle both populated listing objects and string IDs\n    let listing;\n    if (typeof trade.listingId === 'object' && trade.listingId) {\n      // listingId is already a populated listing object\n      listing = trade.listingId;\n    } else {\n      // listingId is a string, find it in allListings\n      const listingId = typeof trade.listingId === 'string' \n        ? trade.listingId \n        : (trade.listingId as any)?._id || (trade.listingId as any)?.id;\n      listing = state.allListings.find(l => l.id === listingId);\n    }\n    \n    if (!listing) {\n      console.log('🔍 Listing not found for trade:', trade.id, 'listingId:', trade.listingId);\n      return (\n        <div key={trade.id} className=\"glass-effect rounded-xl p-4 border border-red-500/30\">\n          <p className=\"text-red-400\">Listing not found</p>\n          <p className=\"text-xs text-red-300\">Trade ID: {trade.id}</p>\n          <p className=\"text-xs text-red-300\">Listing ID: {JSON.stringify(trade.listingId)}</p>\n        </div>\n      );\n    }\n\n    // Extract user info properly (handle both populated objects and IDs)\n    let otherUser: UserType | undefined;\n    if (isOutbound) {\n      // For outbound trades, we want the receiver\n      if (typeof trade.receiverUserId === 'object' && (trade.receiverUserId as any).username) {\n        otherUser = trade.receiverUserId as any;\n      } else {\n        const receiverId = typeof trade.receiverUserId === 'string' ? trade.receiverUserId : (trade.receiverUserId as any)?._id || (trade.receiverUserId as any)?.id;\n        otherUser = state.users.find(u => u.id === receiverId) || {\n          id: receiverId,\n          username: 'Unknown User',\n          email: '',\n          password: '',\n          createdAt: '',\n          location: ''\n        };\n      }\n    } else {\n      // For inbound trades, we want the offerer\n      if (typeof trade.offererUserId === 'object' && (trade.offererUserId as any).username) {\n        otherUser = trade.offererUserId as any;\n      } else {\n        const offererId = typeof trade.offererUserId === 'string' ? trade.offererUserId : (trade.offererUserId as any)?._id || (trade.offererUserId as any)?.id;\n        otherUser = state.users.find(u => u.id === offererId) || {\n          id: offererId,\n          username: 'Unknown User',\n          email: '',\n          password: '',\n          createdAt: '',\n          location: ''\n        };\n      }\n    }\n\n    // Get vehicles involved in the trade\n    // Use preserved vehicle objects from AppContext transformation, fallback to state.vehicles\n    const getVehicleFromId = (vehicleId: string): Vehicle | null => {\n      return state.vehicles.find(v => v.id === vehicleId) || null;\n    };\n\n    // For offerer vehicles, use preserved objects if available, otherwise lookup by ID\n    const offererVehicles = (trade as any).offererVehicleObjects || \n      trade.offererVehicleIds.map(getVehicleFromId).filter(Boolean);\n\n    // For receiver vehicles, use preserved objects if available, otherwise lookup by ID  \n    const receiverVehicles = (trade as any).receiverVehicleObjects || \n      (trade.receiverVehicleIds || []).map(getVehicleFromId).filter(Boolean);\n\n    // Get vehicles to display and calculate values based on trade status and direction\n    let displayVehicles, displayCashAmount, displayTotalValue, vehicleCount;\n    \n    if (trade.status === 'countered') {\n      // For countered trades, show the most recent counter offer\n      // Check who made the most recent counter from trade history\n      const lastAction = trade.tradeHistory?.[trade.tradeHistory.length - 1];\n      const lastCounterUserId = lastAction?.userId;\n      \n      // If the original offerer made the most recent counter, show their updated offer\n      const originalOffererId = typeof trade.offererUserId === 'string' \n        ? trade.offererUserId \n        : (trade.offererUserId as any)?._id || (trade.offererUserId as any)?.id;\n      \n      if (lastCounterUserId === originalOffererId) {\n        // Original offerer made the counter-counter, show their updated terms\n        displayVehicles = offererVehicles;\n        displayCashAmount = trade.offererCashAmount;\n        displayTotalValue = displayCashAmount + offererVehicles.reduce((sum, v) => sum + (v?.customPrice || v?.estimatedValue || 0), 0);\n        vehicleCount = trade.offererVehicleIds.length;\n      } else {\n        // Original receiver made the counter, show their counter terms\n        displayVehicles = receiverVehicles;\n        displayCashAmount = trade.receiverCashAmount || 0;\n        displayTotalValue = displayCashAmount + receiverVehicles.reduce((sum, v) => sum + (v?.customPrice || v?.estimatedValue || 0), 0);\n        vehicleCount = (trade.receiverVehicleIds || []).length;\n      }\n    } else if (['accepted', 'pending_acceptance', 'completed'].includes(trade.status)) {\n      // For accepted/pending/completed trades, show all vehicles involved in the trade\n      const allVehicles = [...offererVehicles, ...receiverVehicles];\n      const totalCash = trade.offererCashAmount + (trade.receiverCashAmount || 0);\n      const totalVehicleValue = allVehicles.reduce((sum, v) => sum + (v?.customPrice || v?.estimatedValue || 0), 0);\n      \n      displayVehicles = allVehicles;\n      displayCashAmount = totalCash;\n      displayTotalValue = totalCash + totalVehicleValue;\n      vehicleCount = trade.offererVehicleIds.length + (trade.receiverVehicleIds || []).length;\n    } else {\n      // For all other trades, show the original offer (offerer's terms)\n      displayVehicles = offererVehicles;\n      displayCashAmount = trade.offererCashAmount;\n      displayTotalValue = displayCashAmount + offererVehicles.reduce((sum, v) => sum + (v?.customPrice || v?.estimatedValue || 0), 0);\n      vehicleCount = trade.offererVehicleIds.length;\n    }\n\n    return (\n      <motion.div\n        key={trade.id}\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"glass-effect rounded-xl p-6 hover:bg-primary-800/20 transition-all cursor-pointer\"\n        onClick={() => setSelectedTrade(trade)}\n      >\n        <div className=\"flex space-x-4\">\n          {/* Listing Image */}\n          <div className=\"w-20 h-20 bg-primary-800/30 rounded-lg flex items-center justify-center flex-shrink-0\">\n            {(() => {\n              // Get vehicle from populated listing or find it in state\n              const populatedVehicle = (listing as any).vehicle;\n              const vehicle = populatedVehicle || state.vehicles.find(v => v.id === listing.vehicleId);\n              const vehicleImage = vehicle?.images?.[0];\n              \n              return vehicleImage ? (\n                <img\n                  src={vehicleImage}\n                  alt={listing.title}\n                  className=\"w-full h-full object-cover rounded-lg\"\n                />\n              ) : (\n                <Car className=\"w-8 h-8 text-primary-400\" />\n              );\n            })()}\n          </div>\n\n          <div className=\"flex-1\">\n            {/* Header */}\n            <div className=\"flex items-center justify-between mb-2\">\n              <h3 className=\"font-semibold text-primary-100\">{listing.title}</h3>\n              <div className={`flex items-center space-x-1 ${getStatusColor(trade.status)}`}>\n                {getStatusIcon(trade.status)}\n                              <span className=\"text-sm font-medium capitalize\">\n                {trade.status === 'pending_acceptance' ? 'Pending' : \n                 trade.status === 'countered' ? 'Countered' : trade.status}\n              </span>\n              </div>\n            </div>\n\n            {/* Trade Summary */}\n            <div className=\"space-y-2 mb-3\">\n              <div className=\"flex items-center justify-between text-sm\">\n                <span className=\"text-primary-300\">\n                  {/* Show appropriate labels based on trade status */}\n                  {trade.status === 'countered' ? \n                    (isOutbound ? 'Your Counter:' : 'Their Counter:') :\n                  ['accepted', 'pending_acceptance', 'completed'].includes(trade.status) ?\n                    'Total Trade Value:' :\n                    (isOutbound ? 'Your Offer:' : 'Their Offer:')\n                  }\n                </span>\n                <span className=\"text-green-400 font-medium\">\n                  ${displayTotalValue.toLocaleString()}\n                </span>\n              </div>\n\n              {/* Show vehicles in the trade */}\n              {vehicleCount > 0 && (\n                <div className=\"text-sm text-primary-300\">\n                  <span>\n                    {['accepted', 'pending_acceptance', 'completed'].includes(trade.status) ?\n                      `${vehicleCount} vehicle${vehicleCount !== 1 ? 's' : ''} in trade` :\n                      `${vehicleCount} vehicle${vehicleCount !== 1 ? 's' : ''} included`\n                    }\n                  </span>\n                  {displayVehicles.length > 0 && (\n                    <div className=\"mt-1 text-xs\">\n                      {displayVehicles.slice(0, 2).map((vehicle, index) => (\n                        <span key={vehicle?.id} className=\"text-primary-400\">\n                          {vehicle?.year} {vehicle?.make} {vehicle?.model}\n                          {index < Math.min(displayVehicles.length, 2) - 1 && ', '}\n                        </span>\n                      ))}\n                      {displayVehicles.length > 2 && (\n                        <span className=\"text-primary-400\"> +{displayVehicles.length - 2} more</span>\n                      )}\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n\n            {/* Other User Info */}\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"w-6 h-6 bg-primary-800/50 rounded-full flex items-center justify-center\">\n                  <User className=\"w-4 h-4 text-primary-300\" />\n                </div>\n                <span className=\"text-sm text-primary-300\">\n                  {isOutbound ? 'To:' : 'From:'} @{otherUser?.username || 'Unknown User'}\n                </span>\n              </div>\n              <span className=\"text-xs text-primary-400\">\n                {formatTimeAgo(trade.updatedAt)}\n              </span>\n            </div>\n          </div>\n        </div>\n      </motion.div>\n    );\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-6\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-primary-100\">Trade Management</h1>\n          <p className=\"text-primary-300 mt-1\">Manage your vehicle trade offers</p>\n        </div>\n      </div>\n\n      {/* Tabs */}\n      <div className=\"flex space-x-1 bg-primary-800/30 rounded-lg p-1\">\n        <button\n          onClick={() => setActiveTab('outbound')}\n          className={`flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors ${\n            activeTab === 'outbound'\n              ? 'bg-primary-100/20 text-primary-100'\n              : 'text-primary-300 hover:text-primary-200'\n          }`}\n        >\n          Outbound ({outboundTrades.length})\n        </button>\n        <button\n          onClick={() => setActiveTab('inbound')}\n          className={`flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors ${\n            activeTab === 'inbound'\n              ? 'bg-primary-100/20 text-primary-100'\n              : 'text-primary-300 hover:text-primary-200'\n          }`}\n        >\n          Inbound ({inboundTrades.length})\n        </button>\n        <button\n          onClick={() => setActiveTab('pending')}\n          className={`flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors ${\n            activeTab === 'pending'\n              ? 'bg-primary-100/20 text-primary-100'\n              : 'text-primary-300 hover:text-primary-200'\n          }`}\n        >\n          Pending ({pendingTrades.length})\n        </button>\n        <button\n          onClick={() => setActiveTab('completed')}\n          className={`flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors ${\n            activeTab === 'completed'\n              ? 'bg-primary-100/20 text-primary-100'\n              : 'text-primary-300 hover:text-primary-200'\n          }`}\n        >\n          Completed ({completedTrades.length})\n        </button>\n      </div>\n\n      {/* Search and Filters */}\n      <div className=\"glass-effect rounded-xl p-6\">\n        <div className=\"flex flex-col lg:flex-row gap-4\">\n          {/* Search Bar */}\n          <div className=\"flex-1 relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-primary-400\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search by listing title or username...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"input-field pl-10\"\n            />\n          </div>\n\n          {/* Filter Toggle */}\n          <motion.button\n            whileTap={{ scale: 0.95 }}\n            onClick={() => setShowFilters(!showFilters)}\n            className={`btn-secondary flex items-center space-x-2 ${showFilters ? 'bg-primary-100/20' : ''}`}\n          >\n            <Filter className=\"w-5 h-5\" />\n            <span>Filters</span>\n          </motion.button>\n        </div>\n\n        {/* Expanded Filters */}\n        {showFilters && (\n          <motion.div\n            initial={{ opacity: 0, height: 0 }}\n            animate={{ opacity: 1, height: 'auto' }}\n            exit={{ opacity: 0, height: 0 }}\n            className=\"mt-4 pt-4 border-t border-primary-700/30\"\n          >\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-primary-300 mb-2\">\n                  Status\n                </label>\n                <select\n                  value={statusFilter}\n                  onChange={(e) => setStatusFilter(e.target.value)}\n                  className=\"input-field\"\n                >\n                  <option value=\"all\">All Statuses</option>\n                  <option value=\"pending\">Pending</option>\n                  <option value=\"countered\">Countered</option>\n                  <option value=\"accepted\">Accepted</option>\n                  <option value=\"rejected\">Rejected</option>\n                  <option value=\"completed\">Completed</option>\n                  <option value=\"cancelled\">Cancelled</option>\n                </select>\n              </div>\n            </div>\n          </motion.div>\n        )}\n      </div>\n\n      {/* Trades List */}\n      <div className=\"space-y-4\">\n        {filteredTrades.length === 0 ? (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"text-center py-16\"\n          >\n            <div className=\"w-24 h-24 bg-primary-800/50 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <ArrowLeftRight className=\"w-12 h-12 text-primary-400\" />\n            </div>\n            <h3 className=\"text-xl font-semibold text-primary-200 mb-2\">\n              No {activeTab} trades found\n            </h3>\n            <p className=\"text-primary-400 mb-6\">\n              {activeTab === 'outbound' \n                ? \"You haven't made any trade offers yet. Go to Listings to make trade offers on vehicles you're interested in.\"\n                : activeTab === 'inbound'\n                  ? \"You haven't received any trade offers yet\"\n                  : \"No completed trades found\"\n              }\n            </p>\n          </motion.div>\n        ) : (\n          <div className=\"space-y-4\">\n            <AnimatePresence>\n              {filteredTrades.map((trade) => renderTradeCard(trade, activeTab === 'outbound'))}\n            </AnimatePresence>\n          </div>\n        )}\n      </div>\n\n      {/* Trade Detail Modal */}\n      <AnimatePresence>\n        {selectedTrade && (\n          <TradeDetailModal\n            trade={selectedTrade}\n            isOutbound={(() => {\n              const offererId = typeof selectedTrade.offererUserId === 'string' \n                ? selectedTrade.offererUserId \n                : (selectedTrade.offererUserId as any)?._id || (selectedTrade.offererUserId as any)?.id;\n              const receiverId = typeof selectedTrade.receiverUserId === 'string' \n                ? selectedTrade.receiverUserId \n                : (selectedTrade.receiverUserId as any)?._id || (selectedTrade.receiverUserId as any)?.id;\n              \n              // For countered trades, check who made the most recent counter from trade history\n              if (selectedTrade.status === 'countered') {\n                const lastAction = selectedTrade.tradeHistory?.[selectedTrade.tradeHistory.length - 1];\n                if (lastAction && lastAction.action === 'countered') {\n                  // The person who made the most recent counter has it as outbound\n                  return lastAction.userId === state.currentUser?.id;\n                }\n                \n                // Fallback: if no history, check if user is receiver (original trade direction)\n                return receiverId === state.currentUser?.id;\n              }\n              \n              // For all other trades, standard logic - outbound if current user is offerer\n              return offererId === state.currentUser?.id;\n            })()}\n            onClose={() => setSelectedTrade(null)}\n            onCounterOffer={handleCounterOffer}\n          />\n        )}\n      </AnimatePresence>\n\n      {/* Counter Offer Modal */}\n      <AnimatePresence>\n        {showCounterOffer && counterOfferTrade && (\n          <TradeOfferModal\n            onClose={() => {\n              setShowCounterOffer(false);\n              setCounterOfferTrade(null);\n            }}\n            existingTrade={counterOfferTrade}\n          />\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}