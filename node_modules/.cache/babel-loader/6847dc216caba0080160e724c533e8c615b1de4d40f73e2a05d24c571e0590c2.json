{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thato\\\\Downloads\\\\car-app\\\\src\\\\components\\\\messages\\\\MessagesView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\nimport { motion } from 'framer-motion';\nimport { MessageCircle, Search, Send, User, ArrowLeft, Check, CheckCheck, Phone, Video, Info, Clock } from 'lucide-react';\nimport { useApp } from '../../context/AppContext.tsx';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function MessagesView() {\n  _s();\n  var _state$currentUser5, _state$currentUser7, _state$currentUser11, _state$currentUser13;\n  const {\n    state,\n    sendMessage,\n    markMessagesAsRead\n  } = useApp();\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [messageText, setMessageText] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [typingUsers, setTypingUsers] = useState([]);\n  const [isTyping, setIsTyping] = useState(false);\n  const [pendingMessages, setPendingMessages] = useState([]);\n  const [initialLoad, setInitialLoad] = useState(true);\n  const messagesEndRef = useRef(null);\n  const typingTimeoutRef = useRef();\n  const textareaRef = useRef(null);\n\n  // Track when messages/conversations are loaded for the first time\n  useEffect(() => {\n    if (state.messages && state.messages.length > 0 || state.conversations && state.conversations.length > 0) {\n      setInitialLoad(false);\n    }\n  }, [state.messages, state.conversations]);\n\n  // Auto-scroll to bottom when new messages arrive\n  useEffect(() => {\n    // Use setTimeout to ensure DOM has been updated before scrolling\n    const timeoutId = setTimeout(() => {\n      scrollToBottom();\n    }, 100);\n    return () => clearTimeout(timeoutId);\n  }, [state.messages, selectedConversation, pendingMessages]);\n\n  // Scroll to bottom when conversation is first selected\n  useEffect(() => {\n    if (selectedConversation) {\n      const timeoutId = setTimeout(() => {\n        scrollToBottom();\n      }, 200); // Slightly longer delay for conversation switch\n\n      return () => clearTimeout(timeoutId);\n    }\n  }, [selectedConversation]);\n\n  // Clean up typing indicators that are too old\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = Date.now();\n      setTypingUsers(prev => prev.filter(typing => now - typing.timestamp < 3000));\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Debug logging for conversations\n  useEffect(() => {\n    var _state$conversations, _state$messages, _state$users, _state$conversations2;\n    console.log('📞 MessagesView Debug:', {\n      conversationsCount: ((_state$conversations = state.conversations) === null || _state$conversations === void 0 ? void 0 : _state$conversations.length) || 0,\n      messagesCount: ((_state$messages = state.messages) === null || _state$messages === void 0 ? void 0 : _state$messages.length) || 0,\n      usersCount: ((_state$users = state.users) === null || _state$users === void 0 ? void 0 : _state$users.length) || 0,\n      conversations: (_state$conversations2 = state.conversations) === null || _state$conversations2 === void 0 ? void 0 : _state$conversations2.slice(0, 3).map(c => {\n        var _c$lastMessage, _c$lastMessage$conten;\n        return {\n          id: c.id,\n          participants: c.participants,\n          otherUser: c.otherUser ? {\n            id: c.otherUser.id,\n            username: c.otherUser.username\n          } : null,\n          lastMessage: (_c$lastMessage = c.lastMessage) === null || _c$lastMessage === void 0 ? void 0 : (_c$lastMessage$conten = _c$lastMessage.content) === null || _c$lastMessage$conten === void 0 ? void 0 : _c$lastMessage$conten.substring(0, 30)\n        };\n      })\n    });\n  }, [state.conversations, state.messages, state.users]);\n  const scrollToBottom = () => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'end',\n        inline: 'nearest'\n      });\n    }\n  };\n\n  // Use conversations from state (loaded from API) with fallback to creating from messages\n  const conversations = useMemo(() => {\n    // If we have conversations from the API, use those\n    if (state.conversations && state.conversations.length > 0) {\n      console.log('📞 Using conversations from API:', state.conversations.length);\n      return state.conversations.sort((a, b) => {\n        var _b$lastMessage, _a$lastMessage;\n        return new Date(b.updatedAt || ((_b$lastMessage = b.lastMessage) === null || _b$lastMessage === void 0 ? void 0 : _b$lastMessage.timestamp) || 0).getTime() - new Date(a.updatedAt || ((_a$lastMessage = a.lastMessage) === null || _a$lastMessage === void 0 ? void 0 : _a$lastMessage.timestamp) || 0).getTime();\n      });\n    }\n\n    // Fallback: Create conversations from messages if API conversations aren't available\n    console.log('📞 Fallback: Creating conversations from messages');\n    const convMap = new Map();\n    state.messages.forEach(message => {\n      var _state$currentUser, _state$currentUser2;\n      const otherUserId = message.senderId === ((_state$currentUser = state.currentUser) === null || _state$currentUser === void 0 ? void 0 : _state$currentUser.id) ? message.receiverId : message.senderId;\n      const conversationId = [(_state$currentUser2 = state.currentUser) === null || _state$currentUser2 === void 0 ? void 0 : _state$currentUser2.id, otherUserId].sort().join('-');\n      if (!convMap.has(conversationId)) {\n        var _state$currentUser3;\n        convMap.set(conversationId, {\n          id: conversationId,\n          participants: [(_state$currentUser3 = state.currentUser) === null || _state$currentUser3 === void 0 ? void 0 : _state$currentUser3.id, otherUserId],\n          lastMessage: message,\n          unreadCount: 0,\n          updatedAt: message.timestamp\n        });\n      } else {\n        const existing = convMap.get(conversationId);\n        if (new Date(message.timestamp) > new Date(existing.lastMessage.timestamp)) {\n          existing.lastMessage = message;\n          existing.updatedAt = message.timestamp;\n        }\n      }\n    });\n\n    // Calculate unread counts\n    convMap.forEach(conversation => {\n      const unreadMessages = state.messages.filter(msg => {\n        var _state$currentUser4;\n        return msg.receiverId === ((_state$currentUser4 = state.currentUser) === null || _state$currentUser4 === void 0 ? void 0 : _state$currentUser4.id) && !msg.read && (msg.senderId === conversation.participants[0] || msg.senderId === conversation.participants[1]);\n      });\n      conversation.unreadCount = unreadMessages.length;\n    });\n    return Array.from(convMap.values()).sort((a, b) => new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime());\n  }, [state.conversations, state.messages, (_state$currentUser5 = state.currentUser) === null || _state$currentUser5 === void 0 ? void 0 : _state$currentUser5.id, state.users]);\n\n  // Filter conversations based on search\n  const filteredConversations = useMemo(() => {\n    if (!searchTerm) return conversations;\n    return conversations.filter(conversation => {\n      var _otherUser$username;\n      // For API conversations, use embedded otherUser data; for fallback conversations, find in state.users\n      const otherUser = conversation.otherUser || (() => {\n        const otherUserId = conversation.participants.find(p => {\n          var _state$currentUser6;\n          return p !== ((_state$currentUser6 = state.currentUser) === null || _state$currentUser6 === void 0 ? void 0 : _state$currentUser6.id);\n        });\n        return state.users.find(u => u.id === otherUserId);\n      })();\n      return otherUser === null || otherUser === void 0 ? void 0 : (_otherUser$username = otherUser.username) === null || _otherUser$username === void 0 ? void 0 : _otherUser$username.toLowerCase().includes(searchTerm.toLowerCase());\n    });\n  }, [conversations, searchTerm, state.users, (_state$currentUser7 = state.currentUser) === null || _state$currentUser7 === void 0 ? void 0 : _state$currentUser7.id]);\n\n  // Get messages for selected conversation (including pending messages)\n  const conversationMessages = useMemo(() => {\n    var _state$currentUser9;\n    if (!selectedConversation) return [];\n    const conversation = conversations.find(c => c.id === selectedConversation);\n    if (!conversation) {\n      console.log('🔍 No conversation found for ID:', selectedConversation);\n      return [];\n    }\n    console.log('🔍 Filtering messages for conversation:', {\n      conversationId: selectedConversation,\n      participants: conversation.participants,\n      otherUser: conversation.otherUser,\n      totalMessages: state.messages.length\n    });\n\n    // For API conversations, we have otherUser data directly\n    let otherUserId;\n    if (conversation.otherUser) {\n      otherUserId = conversation.otherUser.id;\n    } else {\n      // Fallback for generated conversations\n      otherUserId = conversation.participants.find(p => {\n        var _state$currentUser8;\n        return p !== ((_state$currentUser8 = state.currentUser) === null || _state$currentUser8 === void 0 ? void 0 : _state$currentUser8.id);\n      }) || '';\n    }\n    console.log('🔍 Other user ID:', otherUserId, 'Current user ID:', (_state$currentUser9 = state.currentUser) === null || _state$currentUser9 === void 0 ? void 0 : _state$currentUser9.id);\n    const filteredMessages = state.messages.filter(msg => {\n      var _state$currentUser0, _state$currentUser1;\n      // Debug: Log the actual message structure\n      if (state.messages.indexOf(msg) < 3) {\n        console.log('🔍 Sample message structure:', {\n          id: msg.id,\n          senderId: msg.senderId,\n          receiverId: msg.receiverId,\n          senderIdType: typeof msg.senderId,\n          receiverIdType: typeof msg.receiverId,\n          content: msg.content.substring(0, 20)\n        });\n      }\n\n      // Ensure we're comparing strings\n      const messageSenderId = typeof msg.senderId === 'object' ? msg.senderId.id : msg.senderId;\n      const messageReceiverId = typeof msg.receiverId === 'object' ? msg.receiverId.id : msg.receiverId;\n\n      // Direct conversation between current user and other user\n      const matches = messageSenderId === ((_state$currentUser0 = state.currentUser) === null || _state$currentUser0 === void 0 ? void 0 : _state$currentUser0.id) && messageReceiverId === otherUserId || messageSenderId === otherUserId && messageReceiverId === ((_state$currentUser1 = state.currentUser) === null || _state$currentUser1 === void 0 ? void 0 : _state$currentUser1.id);\n      if (matches) {\n        console.log('🔍 Message matches:', {\n          id: msg.id,\n          senderId: messageSenderId,\n          receiverId: messageReceiverId,\n          content: msg.content.substring(0, 30)\n        });\n      }\n      return matches;\n    }).sort((a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime());\n\n    // Add pending messages for this conversation, but exclude ones that have real counterparts\n    const conversationPendingMessages = pendingMessages.filter(msg => {\n      // Only show pending messages for this conversation\n      if (msg.receiverId !== otherUserId) return false;\n\n      // Don't show pending messages if a real message with similar content and timestamp exists\n      const hasRealCounterpart = filteredMessages.some(realMsg => {\n        var _state$currentUser10;\n        const realMsgSenderId = typeof realMsg.senderId === 'object' ? realMsg.senderId.id : realMsg.senderId;\n        return realMsgSenderId === ((_state$currentUser10 = state.currentUser) === null || _state$currentUser10 === void 0 ? void 0 : _state$currentUser10.id) && realMsg.content === msg.content && Math.abs(new Date(realMsg.timestamp).getTime() - new Date(msg.timestamp).getTime()) < 5000; // Within 5 seconds\n      });\n      return !hasRealCounterpart;\n    }).map(msg => ({\n      ...msg,\n      read: false,\n      isPending: true\n    }));\n\n    // Combine and sort all messages\n    const allMessages = [...filteredMessages, ...conversationPendingMessages].sort((a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime());\n    console.log('🔍 Filtered messages count:', filteredMessages.length, 'Pending:', conversationPendingMessages.length);\n    return allMessages;\n  }, [selectedConversation, conversations, state.messages, (_state$currentUser11 = state.currentUser) === null || _state$currentUser11 === void 0 ? void 0 : _state$currentUser11.id, pendingMessages]);\n\n  // Get other user in selected conversation\n  const selectedConversationUser = useMemo(() => {\n    if (!selectedConversation) return null;\n    const conversation = conversations.find(c => c.id === selectedConversation);\n    if (!conversation) return null;\n\n    // For API conversations, use embedded otherUser data; for fallback conversations, find in state.users\n    const otherUser = conversation.otherUser || (() => {\n      const otherUserId = conversation.participants.find(p => {\n        var _state$currentUser12;\n        return p !== ((_state$currentUser12 = state.currentUser) === null || _state$currentUser12 === void 0 ? void 0 : _state$currentUser12.id);\n      });\n      return state.users.find(u => u.id === otherUserId);\n    })();\n    return otherUser || null;\n  }, [selectedConversation, conversations, state.users, (_state$currentUser13 = state.currentUser) === null || _state$currentUser13 === void 0 ? void 0 : _state$currentUser13.id]);\n  const handleSendMessage = async () => {\n    if (!messageText.trim() || !selectedConversationUser || loading) return;\n    const tempMessage = {\n      id: `temp-${Date.now()}`,\n      content: messageText.trim(),\n      timestamp: new Date().toISOString(),\n      senderId: state.currentUser.id,\n      receiverId: selectedConversationUser.id,\n      status: 'sending'\n    };\n\n    // Add to pending messages immediately\n    setPendingMessages(prev => [...prev, tempMessage]);\n    setMessageText('');\n    setIsTyping(false);\n\n    // Auto-resize textarea back to single line\n    if (textareaRef.current) {\n      textareaRef.current.style.height = '48px';\n    }\n    setLoading(true);\n    try {\n      await sendMessage({\n        senderId: state.currentUser.id,\n        receiverId: selectedConversationUser.id,\n        content: tempMessage.content\n      });\n\n      // Remove pending message immediately once sent successfully\n      // The real message will appear through state.messages and our filter will prevent duplicates\n      setPendingMessages(prev => prev.filter(msg => msg.id !== tempMessage.id));\n    } catch (error) {\n      console.error('Error sending message:', error);\n      // Mark as failed\n      setPendingMessages(prev => prev.map(msg => msg.id === tempMessage.id ? {\n        ...msg,\n        status: 'failed'\n      } : msg));\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const handleTyping = value => {\n    setMessageText(value);\n\n    // Auto-resize textarea\n    if (textareaRef.current) {\n      textareaRef.current.style.height = '40px';\n      textareaRef.current.style.height = `${Math.min(textareaRef.current.scrollHeight, 120)}px`;\n    }\n    if (value.trim() && !isTyping) {\n      setIsTyping(true);\n      // In a real app, you'd emit typing indicator to other users via WebSocket\n    }\n\n    // Clear typing indicator after 2 seconds of no typing\n    if (typingTimeoutRef.current) {\n      clearTimeout(typingTimeoutRef.current);\n    }\n    typingTimeoutRef.current = setTimeout(() => {\n      setIsTyping(false);\n    }, 2000);\n  };\n  const handleConversationSelect = async conversationId => {\n    console.log('🔍 Selecting conversation:', conversationId);\n    const conversation = conversations.find(c => c.id === conversationId);\n    console.log('🔍 Found conversation:', conversation ? {\n      id: conversation.id,\n      participants: conversation.participants,\n      otherUser: conversation.otherUser ? {\n        id: conversation.otherUser.id,\n        username: conversation.otherUser.username\n      } : null\n    } : 'NOT FOUND');\n    setSelectedConversation(conversationId);\n\n    // Mark messages as read\n    if (conversation && conversation.unreadCount > 0) {\n      try {\n        await markMessagesAsRead(conversationId);\n      } catch (error) {\n        console.error('Error marking messages as read:', error);\n      }\n    }\n  };\n  const formatTime = timestamp => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffInHours = (now.getTime() - date.getTime()) / (1000 * 60 * 60);\n    if (diffInHours < 24) {\n      return date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    } else if (diffInHours < 168) {\n      // 7 days\n      return date.toLocaleDateString([], {\n        weekday: 'short'\n      });\n    } else {\n      return date.toLocaleDateString([], {\n        month: 'short',\n        day: 'numeric'\n      });\n    }\n  };\n  const formatMessageTime = timestamp => {\n    return new Date(timestamp).toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const formatDateSeparator = timestamp => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n    const messageDate = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n    if (messageDate.getTime() === today.getTime()) {\n      return 'Today';\n    } else if (messageDate.getTime() === yesterday.getTime()) {\n      return 'Yesterday';\n    } else if (now.getTime() - messageDate.getTime() < 7 * 24 * 60 * 60 * 1000) {\n      return date.toLocaleDateString([], {\n        weekday: 'long'\n      });\n    } else {\n      return date.toLocaleDateString([], {\n        month: 'long',\n        day: 'numeric',\n        year: date.getFullYear() !== now.getFullYear() ? 'numeric' : undefined\n      });\n    }\n  };\n  const shouldShowDateSeparator = (currentMessage, previousMessage) => {\n    if (!previousMessage) return true;\n    const currentDate = new Date(currentMessage.timestamp);\n    const previousDate = new Date(previousMessage.timestamp);\n    return currentDate.toDateString() !== previousDate.toDateString();\n  };\n  const shouldShowTimeGroup = (currentMessage, previousMessage) => {\n    if (!previousMessage) return true;\n    const currentSenderId = typeof currentMessage.senderId === 'object' ? currentMessage.senderId.id : currentMessage.senderId;\n    const previousSenderId = typeof previousMessage.senderId === 'object' ? previousMessage.senderId.id : previousMessage.senderId;\n\n    // Different senders\n    if (currentSenderId !== previousSenderId) return true;\n\n    // Check if messages are more than 1 minute apart\n    const currentTime = new Date(currentMessage.timestamp);\n    const previousTime = new Date(previousMessage.timestamp);\n    const timeDiff = (currentTime.getTime() - previousTime.getTime()) / (1000 * 60); // minutes\n\n    return timeDiff > 1;\n  };\n  const shouldShowAvatar = (currentMessage, nextMessage, isOwn) => {\n    if (isOwn) return false; // Don't show avatars for own messages\n    if (!nextMessage) return true; // Always show for last message in conversation\n\n    const currentSenderId = typeof currentMessage.senderId === 'object' ? currentMessage.senderId.id : currentMessage.senderId;\n    const nextSenderId = typeof nextMessage.senderId === 'object' ? nextMessage.senderId.id : nextMessage.senderId;\n\n    // Show avatar if next message is from different sender or if time group changes\n    return currentSenderId !== nextSenderId || shouldShowTimeGroup(nextMessage, currentMessage);\n  };\n  const renderConversationsList = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full lg:w-96 border-r border-primary-700/30 flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 border-b border-primary-700/30\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold text-primary-100 mb-4\",\n        children: \"Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative\",\n        children: [/*#__PURE__*/_jsxDEV(Search, {\n          className: \"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-primary-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search conversations...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          className: \"input-field pl-10 text-sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto\",\n      children: !state.conversations || state.conversations.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(MessageCircle, {\n          className: \"w-12 h-12 mx-auto mb-4 text-primary-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-primary-300\",\n          children: !state.conversations ? 'Loading conversations...' : 'No conversations yet'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-primary-400 mt-1\",\n          children: !state.conversations ? 'Please wait while we load your messages' : 'Start trading to begin messaging with other users'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 11\n      }, this) : filteredConversations.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(MessageCircle, {\n          className: \"w-12 h-12 mx-auto mb-4 text-primary-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-primary-300\",\n          children: \"No conversations match your search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-primary-400 mt-1\",\n          children: \"Try adjusting your search terms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-1 p-2\",\n        children: filteredConversations.map(conversation => {\n          var _state$currentUser15;\n          // For API conversations, use embedded otherUser data; for fallback conversations, find in state.users\n          const otherUser = conversation.otherUser || (() => {\n            const otherUserId = conversation.participants.find(p => {\n              var _state$currentUser14;\n              return p !== ((_state$currentUser14 = state.currentUser) === null || _state$currentUser14 === void 0 ? void 0 : _state$currentUser14.id);\n            });\n            return state.users.find(u => u.id === otherUserId);\n          })();\n          const isSelected = selectedConversation === conversation.id;\n          return /*#__PURE__*/_jsxDEV(motion.div, {\n            whileHover: {\n              scale: 1.02\n            },\n            whileTap: {\n              scale: 0.98\n            },\n            onClick: () => handleConversationSelect(conversation.id),\n            className: `p-3 rounded-lg cursor-pointer transition-all ${isSelected ? 'bg-primary-600/30 border border-primary-500/50' : 'hover:bg-primary-800/30'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"relative\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-12 h-12 bg-primary-800/50 rounded-full flex items-center justify-center\",\n                  children: otherUser !== null && otherUser !== void 0 && otherUser.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: otherUser.avatar,\n                    alt: otherUser.username,\n                    className: \"w-full h-full object-cover rounded-full\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 558,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(User, {\n                    className: \"w-6 h-6 text-primary-300\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 564,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-1 min-w-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center justify-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"font-medium text-primary-100 truncate\",\n                    children: [\"@\", (otherUser === null || otherUser === void 0 ? void 0 : otherUser.username) || 'Unknown']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 573,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-xs text-primary-400\",\n                    children: formatTime(conversation.lastMessage.timestamp)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 576,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center justify-between mt-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-primary-300 truncate\",\n                    children: [conversation.lastMessage.senderId === ((_state$currentUser15 = state.currentUser) === null || _state$currentUser15 === void 0 ? void 0 : _state$currentUser15.id) && 'You: ', conversation.lastMessage.content]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 582,\n                    columnNumber: 25\n                  }, this), conversation.unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"bg-blue-500 text-white text-xs px-2 py-1 rounded-full min-w-[20px] text-center\",\n                    children: conversation.unreadCount > 99 ? '99+' : conversation.unreadCount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 587,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 581,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 19\n            }, this)\n          }, conversation.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 490,\n    columnNumber: 5\n  }, this);\n  const renderChatInterface = () => {\n    if (!selectedConversation || !selectedConversationUser) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(MessageCircle, {\n            className: \"w-16 h-16 mx-auto mb-4 text-primary-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold text-primary-100 mb-2\",\n            children: \"Select a conversation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-primary-300\",\n            children: \"Choose a conversation to start messaging\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 9\n      }, this);\n    }\n    const typingUsersInConversation = typingUsers.filter(t => t.conversationId === selectedConversation);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 relative h-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-0 left-0 right-0 p-4 border-b border-primary-700/30 bg-primary-900/95 backdrop-blur-sm z-30\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSelectedConversation(null),\n              className: \"lg:hidden p-2 hover:bg-primary-800/50 rounded-full transition-colors\",\n              children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n                className: \"w-5 h-5 text-primary-300\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-10 h-10 bg-primary-800/50 rounded-full flex items-center justify-center\",\n              children: selectedConversationUser.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: selectedConversationUser.avatar,\n                alt: selectedConversationUser.username,\n                className: \"w-full h-full object-cover rounded-full\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(User, {\n                className: \"w-5 h-5 text-primary-300\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"font-semibold text-primary-100\",\n                children: [\"@\", selectedConversationUser.username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 644,\n                columnNumber: 17\n              }, this), typingUsersInConversation.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-blue-400\",\n                children: \"typing...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"p-2 hover:bg-primary-800/50 rounded-full transition-colors\",\n              children: /*#__PURE__*/_jsxDEV(Phone, {\n                className: \"w-5 h-5 text-primary-300\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 655,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"p-2 hover:bg-primary-800/50 rounded-full transition-colors\",\n              children: /*#__PURE__*/_jsxDEV(Video, {\n                className: \"w-5 h-5 text-primary-300\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 658,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"p-2 hover:bg-primary-800/50 rounded-full transition-colors\",\n              children: /*#__PURE__*/_jsxDEV(Info, {\n                className: \"w-5 h-5 text-primary-300\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute bottom-0 left-0 right-0 p-4 border-t border-primary-700/30 bg-primary-900/95 backdrop-blur-sm z-30\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-3 max-w-4xl mx-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              ref: textareaRef,\n              value: messageText,\n              onChange: e => handleTyping(e.target.value),\n              onKeyPress: handleKeyPress,\n              placeholder: \"Type a message...\",\n              className: \"w-full px-4 py-3 bg-primary-800/50 border border-primary-600/30 rounded-2xl text-primary-100 placeholder-primary-400 resize-none focus:outline-none focus:ring-2 focus:ring-blue-500/50 focus:border-transparent transition-all scrollbar-none\",\n              style: {\n                minHeight: '48px',\n                maxHeight: '120px',\n                lineHeight: '1.5'\n              },\n              rows: 1,\n              disabled: loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendMessage,\n            disabled: !messageText.trim() || loading,\n            className: `w-12 h-12 rounded-xl flex items-center justify-center flex-shrink-0 transition-all ${messageText.trim() && !loading ? 'bg-blue-600 hover:bg-blue-700 text-white shadow-lg hover:shadow-xl' : 'bg-primary-700/50 text-primary-400 cursor-not-allowed'}`,\n            children: /*#__PURE__*/_jsxDEV(Send, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 696,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-20 bottom-20 left-0 right-0 overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-full overflow-y-auto px-4 py-4 messages-scrollbar flex flex-col\",\n          children: conversationMessages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 flex items-center justify-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-primary-300\",\n                children: \"No messages yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 707,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-primary-400 mt-1\",\n                children: \"Send a message to start the conversation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 708,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1 min-h-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1\",\n              children: [conversationMessages.map((message, index) => {\n                var _state$currentUser16;\n                // Ensure we're comparing the correct sender ID (handle both string and object)\n                const messageSenderId = typeof message.senderId === 'object' ? message.senderId.id : message.senderId;\n                const isOwn = messageSenderId === ((_state$currentUser16 = state.currentUser) === null || _state$currentUser16 === void 0 ? void 0 : _state$currentUser16.id);\n                const isPending = message.isPending;\n                const pendingStatus = isPending ? message.status : null;\n                const previousMessage = index > 0 ? conversationMessages[index - 1] : null;\n                const nextMessage = index < conversationMessages.length - 1 ? conversationMessages[index + 1] : null;\n                const showDateSeparator = shouldShowDateSeparator(message, previousMessage);\n                const showTimeGroup = shouldShowTimeGroup(message, previousMessage);\n                const showAvatar = shouldShowAvatar(message, nextMessage, isOwn);\n                return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [showDateSeparator && /*#__PURE__*/_jsxDEV(motion.div, {\n                    initial: {\n                      opacity: 0,\n                      y: 10\n                    },\n                    animate: {\n                      opacity: 1,\n                      y: 0\n                    },\n                    className: \"flex justify-center my-6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"bg-primary-800/50 px-3 py-1 rounded-full\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-xs font-medium text-primary-300\",\n                        children: formatDateSeparator(message.timestamp)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 742,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 741,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 736,\n                    columnNumber: 27\n                  }, this), showTimeGroup && !showDateSeparator && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"h-4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 751,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n                    initial: {\n                      opacity: 0,\n                      y: 20\n                    },\n                    animate: {\n                      opacity: 1,\n                      y: 0\n                    },\n                    className: `flex ${isOwn ? 'justify-end' : 'justify-start'} ${showTimeGroup ? 'mt-2' : 'mt-0.5'}`,\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `flex items-end space-x-2 max-w-xs lg:max-w-md ${isOwn ? 'flex-row-reverse space-x-reverse' : ''}`,\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"w-8 h-8 flex-shrink-0\",\n                        children: showAvatar && !isOwn && /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"w-8 h-8 bg-primary-800/50 rounded-full flex items-center justify-center\",\n                          children: selectedConversationUser.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n                            src: selectedConversationUser.avatar,\n                            alt: selectedConversationUser.username,\n                            className: \"w-full h-full object-cover rounded-full\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 768,\n                            columnNumber: 37\n                          }, this) : /*#__PURE__*/_jsxDEV(User, {\n                            className: \"w-4 h-4 text-primary-300\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 774,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 766,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 764,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: `px-4 py-2 rounded-2xl ${isOwn ? `bg-blue-600 text-white ${isPending && pendingStatus === 'sending' ? 'opacity-70' : ''} ${isPending && pendingStatus === 'failed' ? 'bg-red-600' : ''}` : 'bg-primary-700/50 text-primary-100'} ${\n                        // Adjust border radius for grouped messages\n                        !showTimeGroup && !isOwn && !showAvatar ? 'rounded-tl-md' : ''} ${!showTimeGroup && isOwn ? 'rounded-tr-md' : ''}`,\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-sm whitespace-pre-wrap\",\n                          children: message.content\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 793,\n                          columnNumber: 31\n                        }, this), (showAvatar || index === conversationMessages.length - 1 || nextMessage && shouldShowTimeGroup(nextMessage, message)) && /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: `flex items-center justify-end mt-1 space-x-1 ${isOwn ? 'text-blue-200' : 'text-primary-400'}`,\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-xs\",\n                            children: formatMessageTime(message.timestamp)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 801,\n                            columnNumber: 35\n                          }, this), isOwn && /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"flex items-center\",\n                            children: isPending ? pendingStatus === 'sending' ? /*#__PURE__*/_jsxDEV(Clock, {\n                              className: \"w-3 h-3 animate-spin\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 808,\n                              columnNumber: 43\n                            }, this) : pendingStatus === 'failed' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"text-xs text-red-200\",\n                              children: \"Failed\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 810,\n                              columnNumber: 43\n                            }, this) : /*#__PURE__*/_jsxDEV(Check, {\n                              className: \"w-3 h-3\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 812,\n                              columnNumber: 43\n                            }, this) : message.read ? /*#__PURE__*/_jsxDEV(CheckCheck, {\n                              className: \"w-3 h-3\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 815,\n                              columnNumber: 41\n                            }, this) : /*#__PURE__*/_jsxDEV(Check, {\n                              className: \"w-3 h-3\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 817,\n                              columnNumber: 41\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 805,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 798,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 781,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 762,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 755,\n                    columnNumber: 25\n                  }, this)]\n                }, message.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 733,\n                  columnNumber: 23\n                }, this);\n              }), typingUsersInConversation.length > 0 && /*#__PURE__*/_jsxDEV(motion.div, {\n                initial: {\n                  opacity: 0,\n                  y: 10\n                },\n                animate: {\n                  opacity: 1,\n                  y: 0\n                },\n                className: \"flex items-end space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-8 h-8 bg-primary-800/50 rounded-full flex items-center justify-center\",\n                  children: /*#__PURE__*/_jsxDEV(User, {\n                    className: \"w-4 h-4 text-primary-300\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 838,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 837,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-primary-700/50 px-4 py-2 rounded-2xl\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex space-x-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"w-2 h-2 bg-primary-400 rounded-full animate-bounce\",\n                      style: {\n                        animationDelay: '0ms'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 842,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"w-2 h-2 bg-primary-400 rounded-full animate-bounce\",\n                      style: {\n                        animationDelay: '150ms'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 843,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"w-2 h-2 bg-primary-400 rounded-full animate-bounce\",\n                      style: {\n                        animationDelay: '300ms'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 844,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 841,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 840,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 832,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: messagesEndRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 850,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-full flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lg:hidden w-full h-full\",\n      children: selectedConversation ? renderChatInterface() : renderConversationsList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 863,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hidden lg:flex w-full h-full\",\n      children: [renderConversationsList(), renderChatInterface()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 868,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 861,\n    columnNumber: 5\n  }, this);\n}\n_s(MessagesView, \"FVPtTPSMwwWH8b15ACJdaBSPXLA=\", false, function () {\n  return [useApp];\n});\n_c = MessagesView;\nvar _c;\n$RefreshReg$(_c, \"MessagesView\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","motion","MessageCircle","Search","Send","User","ArrowLeft","Check","CheckCheck","Phone","Video","Info","Clock","useApp","jsxDEV","_jsxDEV","Fragment","_Fragment","MessagesView","_s","_state$currentUser5","_state$currentUser7","_state$currentUser11","_state$currentUser13","state","sendMessage","markMessagesAsRead","selectedConversation","setSelectedConversation","messageText","setMessageText","searchTerm","setSearchTerm","loading","setLoading","typingUsers","setTypingUsers","isTyping","setIsTyping","pendingMessages","setPendingMessages","initialLoad","setInitialLoad","messagesEndRef","typingTimeoutRef","textareaRef","messages","length","conversations","timeoutId","setTimeout","scrollToBottom","clearTimeout","interval","setInterval","now","Date","prev","filter","typing","timestamp","clearInterval","_state$conversations","_state$messages","_state$users","_state$conversations2","console","log","conversationsCount","messagesCount","usersCount","users","slice","map","c","_c$lastMessage","_c$lastMessage$conten","id","participants","otherUser","username","lastMessage","content","substring","current","scrollIntoView","behavior","block","inline","sort","a","b","_b$lastMessage","_a$lastMessage","updatedAt","getTime","convMap","Map","forEach","message","_state$currentUser","_state$currentUser2","otherUserId","senderId","currentUser","receiverId","conversationId","join","has","_state$currentUser3","set","unreadCount","existing","get","conversation","unreadMessages","msg","_state$currentUser4","read","Array","from","values","filteredConversations","_otherUser$username","find","p","_state$currentUser6","u","toLowerCase","includes","conversationMessages","_state$currentUser9","totalMessages","_state$currentUser8","filteredMessages","_state$currentUser0","_state$currentUser1","indexOf","senderIdType","receiverIdType","messageSenderId","messageReceiverId","matches","conversationPendingMessages","hasRealCounterpart","some","realMsg","_state$currentUser10","realMsgSenderId","Math","abs","isPending","allMessages","selectedConversationUser","_state$currentUser12","handleSendMessage","trim","tempMessage","toISOString","status","style","height","error","handleKeyPress","e","key","shiftKey","preventDefault","handleTyping","value","min","scrollHeight","handleConversationSelect","formatTime","date","diffInHours","toLocaleTimeString","hour","minute","toLocaleDateString","weekday","month","day","formatMessageTime","formatDateSeparator","today","getFullYear","getMonth","getDate","yesterday","setDate","messageDate","year","undefined","shouldShowDateSeparator","currentMessage","previousMessage","currentDate","previousDate","toDateString","shouldShowTimeGroup","currentSenderId","previousSenderId","currentTime","previousTime","timeDiff","shouldShowAvatar","nextMessage","isOwn","nextSenderId","renderConversationsList","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","target","_state$currentUser15","_state$currentUser14","isSelected","div","whileHover","scale","whileTap","onClick","avatar","src","alt","renderChatInterface","typingUsersInConversation","t","ref","onKeyPress","minHeight","maxHeight","lineHeight","rows","disabled","index","_state$currentUser16","pendingStatus","showDateSeparator","showTimeGroup","showAvatar","initial","opacity","y","animate","animationDelay","_c","$RefreshReg$"],"sources":["C:/Users/thato/Downloads/car-app/src/components/messages/MessagesView.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  MessageCircle, \n  Search, \n  Send, \n  User, \n  ArrowLeft, \n  MoreVertical,\n  Check,\n  CheckCheck,\n  Phone,\n  Video,\n  Info,\n  Clock\n} from 'lucide-react';\nimport { useApp } from '../../context/AppContext.tsx';\nimport { Message, User as UserType, Conversation } from '../../types/index.ts';\n\ninterface TypingIndicator {\n  userId: string;\n  conversationId: string;\n  timestamp: number;\n}\n\ninterface PendingMessage {\n  id: string;\n  content: string;\n  timestamp: string;\n  senderId: string;\n  receiverId: string;\n  status: 'sending' | 'sent' | 'failed';\n}\n\nexport function MessagesView() {\n  const { state, sendMessage, markMessagesAsRead } = useApp();\n  const [selectedConversation, setSelectedConversation] = useState<string | null>(null);\n  const [messageText, setMessageText] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [typingUsers, setTypingUsers] = useState<TypingIndicator[]>([]);\n  const [isTyping, setIsTyping] = useState(false);\n  const [pendingMessages, setPendingMessages] = useState<PendingMessage[]>([]);\n  const [initialLoad, setInitialLoad] = useState(true);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const typingTimeoutRef = useRef<NodeJS.Timeout>();\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n\n  // Track when messages/conversations are loaded for the first time\n  useEffect(() => {\n    if ((state.messages && state.messages.length > 0) || (state.conversations && state.conversations.length > 0)) {\n      setInitialLoad(false);\n    }\n  }, [state.messages, state.conversations]);\n\n  // Auto-scroll to bottom when new messages arrive\n  useEffect(() => {\n    // Use setTimeout to ensure DOM has been updated before scrolling\n    const timeoutId = setTimeout(() => {\n      scrollToBottom();\n    }, 100);\n\n    return () => clearTimeout(timeoutId);\n  }, [state.messages, selectedConversation, pendingMessages]);\n\n  // Scroll to bottom when conversation is first selected\n  useEffect(() => {\n    if (selectedConversation) {\n      const timeoutId = setTimeout(() => {\n        scrollToBottom();\n      }, 200); // Slightly longer delay for conversation switch\n\n      return () => clearTimeout(timeoutId);\n    }\n  }, [selectedConversation]);\n\n  // Clean up typing indicators that are too old\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = Date.now();\n      setTypingUsers(prev => prev.filter(typing => now - typing.timestamp < 3000));\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Debug logging for conversations\n  useEffect(() => {\n    console.log('📞 MessagesView Debug:', {\n      conversationsCount: state.conversations?.length || 0,\n      messagesCount: state.messages?.length || 0,\n      usersCount: state.users?.length || 0,\n      conversations: state.conversations?.slice(0, 3).map(c => ({\n        id: c.id,\n        participants: c.participants,\n        otherUser: (c as any).otherUser ? {\n          id: (c as any).otherUser.id,\n          username: (c as any).otherUser.username\n        } : null,\n        lastMessage: c.lastMessage?.content?.substring(0, 30)\n      }))\n    });\n  }, [state.conversations, state.messages, state.users]);\n\n  const scrollToBottom = () => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ \n        behavior: 'smooth',\n        block: 'end',\n        inline: 'nearest'\n      });\n    }\n  };\n\n  // Use conversations from state (loaded from API) with fallback to creating from messages\n  const conversations = useMemo(() => {\n    // If we have conversations from the API, use those\n    if (state.conversations && state.conversations.length > 0) {\n      console.log('📞 Using conversations from API:', state.conversations.length);\n      return state.conversations.sort((a, b) => \n        new Date(b.updatedAt || b.lastMessage?.timestamp || 0).getTime() - \n        new Date(a.updatedAt || a.lastMessage?.timestamp || 0).getTime()\n      );\n    }\n\n    // Fallback: Create conversations from messages if API conversations aren't available\n    console.log('📞 Fallback: Creating conversations from messages');\n    const convMap = new Map<string, Conversation>();\n    \n    state.messages.forEach(message => {\n      const otherUserId = message.senderId === state.currentUser?.id \n        ? message.receiverId \n        : message.senderId;\n      \n      const conversationId = [state.currentUser?.id, otherUserId].sort().join('-');\n      \n      if (!convMap.has(conversationId)) {\n        convMap.set(conversationId, {\n          id: conversationId,\n          participants: [state.currentUser?.id!, otherUserId],\n          lastMessage: message,\n          unreadCount: 0,\n          updatedAt: message.timestamp\n        });\n      } else {\n        const existing = convMap.get(conversationId)!;\n        if (new Date(message.timestamp) > new Date(existing.lastMessage.timestamp)) {\n          existing.lastMessage = message;\n          existing.updatedAt = message.timestamp;\n        }\n      }\n    });\n\n    // Calculate unread counts\n    convMap.forEach(conversation => {\n      const unreadMessages = state.messages.filter(msg => \n        msg.receiverId === state.currentUser?.id &&\n        !msg.read &&\n        (msg.senderId === conversation.participants[0] || msg.senderId === conversation.participants[1])\n      );\n      conversation.unreadCount = unreadMessages.length;\n    });\n\n    return Array.from(convMap.values()).sort((a, b) => \n      new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime()\n    );\n  }, [state.conversations, state.messages, state.currentUser?.id, state.users]);\n\n  // Filter conversations based on search\n  const filteredConversations = useMemo(() => {\n    if (!searchTerm) return conversations;\n    \n    return conversations.filter(conversation => {\n      // For API conversations, use embedded otherUser data; for fallback conversations, find in state.users\n      const otherUser = (conversation as any).otherUser || (() => {\n        const otherUserId = conversation.participants.find(p => p !== state.currentUser?.id);\n        return state.users.find(u => u.id === otherUserId);\n      })();\n      \n      return otherUser?.username?.toLowerCase().includes(searchTerm.toLowerCase());\n    });\n  }, [conversations, searchTerm, state.users, state.currentUser?.id]);\n\n  // Get messages for selected conversation (including pending messages)\n  const conversationMessages = useMemo(() => {\n    if (!selectedConversation) return [];\n    \n    const conversation = conversations.find(c => c.id === selectedConversation);\n    if (!conversation) {\n      console.log('🔍 No conversation found for ID:', selectedConversation);\n      return [];\n    }\n    \n    console.log('🔍 Filtering messages for conversation:', {\n      conversationId: selectedConversation,\n      participants: conversation.participants,\n      otherUser: (conversation as any).otherUser,\n      totalMessages: state.messages.length\n    });\n    \n    // For API conversations, we have otherUser data directly\n    let otherUserId: string;\n    if ((conversation as any).otherUser) {\n      otherUserId = (conversation as any).otherUser.id;\n    } else {\n      // Fallback for generated conversations\n      otherUserId = conversation.participants.find(p => p !== state.currentUser?.id) || '';\n    }\n    \n    console.log('🔍 Other user ID:', otherUserId, 'Current user ID:', state.currentUser?.id);\n    \n    const filteredMessages = state.messages\n      .filter(msg => {\n        // Debug: Log the actual message structure\n        if (state.messages.indexOf(msg) < 3) {\n          console.log('🔍 Sample message structure:', {\n            id: msg.id,\n            senderId: msg.senderId,\n            receiverId: msg.receiverId,\n            senderIdType: typeof msg.senderId,\n            receiverIdType: typeof msg.receiverId,\n            content: msg.content.substring(0, 20)\n          });\n        }\n        \n        // Ensure we're comparing strings\n        const messageSenderId = typeof msg.senderId === 'object' ? (msg.senderId as any).id : msg.senderId;\n        const messageReceiverId = typeof msg.receiverId === 'object' ? (msg.receiverId as any).id : msg.receiverId;\n        \n        // Direct conversation between current user and other user\n        const matches = (\n          (messageSenderId === state.currentUser?.id && messageReceiverId === otherUserId) ||\n          (messageSenderId === otherUserId && messageReceiverId === state.currentUser?.id)\n        );\n        \n        if (matches) {\n          console.log('🔍 Message matches:', {\n            id: msg.id,\n            senderId: messageSenderId,\n            receiverId: messageReceiverId,\n            content: msg.content.substring(0, 30)\n          });\n        }\n        \n        return matches;\n      })\n      .sort((a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime());\n\n    // Add pending messages for this conversation, but exclude ones that have real counterparts\n    const conversationPendingMessages = pendingMessages\n      .filter(msg => {\n        // Only show pending messages for this conversation\n        if (msg.receiverId !== otherUserId) return false;\n        \n        // Don't show pending messages if a real message with similar content and timestamp exists\n        const hasRealCounterpart = filteredMessages.some(realMsg => {\n          const realMsgSenderId = typeof realMsg.senderId === 'object' ? (realMsg.senderId as any).id : realMsg.senderId;\n          return realMsgSenderId === state.currentUser?.id && \n                 realMsg.content === msg.content &&\n                 Math.abs(new Date(realMsg.timestamp).getTime() - new Date(msg.timestamp).getTime()) < 5000; // Within 5 seconds\n        });\n        \n        return !hasRealCounterpart;\n      })\n      .map(msg => ({\n        ...msg,\n        read: false,\n        isPending: true\n      }));\n    \n    // Combine and sort all messages\n    const allMessages = [...filteredMessages, ...conversationPendingMessages]\n      .sort((a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime());\n    \n    console.log('🔍 Filtered messages count:', filteredMessages.length, 'Pending:', conversationPendingMessages.length);\n    return allMessages;\n  }, [selectedConversation, conversations, state.messages, state.currentUser?.id, pendingMessages]);\n\n  // Get other user in selected conversation\n  const selectedConversationUser = useMemo(() => {\n    if (!selectedConversation) return null;\n    \n    const conversation = conversations.find(c => c.id === selectedConversation);\n    if (!conversation) return null;\n    \n    // For API conversations, use embedded otherUser data; for fallback conversations, find in state.users\n    const otherUser = (conversation as any).otherUser || (() => {\n      const otherUserId = conversation.participants.find(p => p !== state.currentUser?.id);\n      return state.users.find(u => u.id === otherUserId);\n    })();\n    \n    return otherUser || null;\n  }, [selectedConversation, conversations, state.users, state.currentUser?.id]);\n\n  const handleSendMessage = async () => {\n    if (!messageText.trim() || !selectedConversationUser || loading) return;\n\n    const tempMessage: PendingMessage = {\n      id: `temp-${Date.now()}`,\n      content: messageText.trim(),\n      timestamp: new Date().toISOString(),\n      senderId: state.currentUser!.id,\n      receiverId: selectedConversationUser.id,\n      status: 'sending'\n    };\n\n    // Add to pending messages immediately\n    setPendingMessages(prev => [...prev, tempMessage]);\n    setMessageText('');\n    setIsTyping(false);\n\n    // Auto-resize textarea back to single line\n    if (textareaRef.current) {\n      textareaRef.current.style.height = '48px';\n    }\n\n    setLoading(true);\n    try {\n      await sendMessage({\n        senderId: state.currentUser!.id,\n        receiverId: selectedConversationUser.id,\n        content: tempMessage.content\n      });\n      \n      // Remove pending message immediately once sent successfully\n      // The real message will appear through state.messages and our filter will prevent duplicates\n      setPendingMessages(prev => prev.filter(msg => msg.id !== tempMessage.id));\n\n    } catch (error) {\n      console.error('Error sending message:', error);\n      // Mark as failed\n      setPendingMessages(prev => \n        prev.map(msg => \n          msg.id === tempMessage.id \n            ? { ...msg, status: 'failed' }\n            : msg\n        )\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const handleTyping = (value: string) => {\n    setMessageText(value);\n    \n    // Auto-resize textarea\n    if (textareaRef.current) {\n      textareaRef.current.style.height = '40px';\n      textareaRef.current.style.height = `${Math.min(textareaRef.current.scrollHeight, 120)}px`;\n    }\n    \n    if (value.trim() && !isTyping) {\n      setIsTyping(true);\n      // In a real app, you'd emit typing indicator to other users via WebSocket\n    }\n\n    // Clear typing indicator after 2 seconds of no typing\n    if (typingTimeoutRef.current) {\n      clearTimeout(typingTimeoutRef.current);\n    }\n    \n    typingTimeoutRef.current = setTimeout(() => {\n      setIsTyping(false);\n    }, 2000);\n  };\n\n  const handleConversationSelect = async (conversationId: string) => {\n    console.log('🔍 Selecting conversation:', conversationId);\n    \n    const conversation = conversations.find(c => c.id === conversationId);\n    console.log('🔍 Found conversation:', conversation ? {\n      id: conversation.id,\n      participants: conversation.participants,\n      otherUser: (conversation as any).otherUser ? {\n        id: (conversation as any).otherUser.id,\n        username: (conversation as any).otherUser.username\n      } : null\n    } : 'NOT FOUND');\n    \n    setSelectedConversation(conversationId);\n    \n    // Mark messages as read\n    if (conversation && conversation.unreadCount > 0) {\n      try {\n        await markMessagesAsRead(conversationId);\n      } catch (error) {\n        console.error('Error marking messages as read:', error);\n      }\n    }\n  };\n\n  const formatTime = (timestamp: string) => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffInHours = (now.getTime() - date.getTime()) / (1000 * 60 * 60);\n    \n    if (diffInHours < 24) {\n      return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    } else if (diffInHours < 168) { // 7 days\n      return date.toLocaleDateString([], { weekday: 'short' });\n    } else {\n      return date.toLocaleDateString([], { month: 'short', day: 'numeric' });\n    }\n  };\n\n  const formatMessageTime = (timestamp: string) => {\n    return new Date(timestamp).toLocaleTimeString([], { \n      hour: '2-digit', \n      minute: '2-digit' \n    });\n  };\n\n  const formatDateSeparator = (timestamp: string) => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n    const messageDate = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n    \n    if (messageDate.getTime() === today.getTime()) {\n      return 'Today';\n    } else if (messageDate.getTime() === yesterday.getTime()) {\n      return 'Yesterday';\n    } else if (now.getTime() - messageDate.getTime() < 7 * 24 * 60 * 60 * 1000) {\n      return date.toLocaleDateString([], { weekday: 'long' });\n    } else {\n      return date.toLocaleDateString([], { \n        month: 'long', \n        day: 'numeric',\n        year: date.getFullYear() !== now.getFullYear() ? 'numeric' : undefined\n      });\n    }\n  };\n\n  const shouldShowDateSeparator = (currentMessage: any, previousMessage: any) => {\n    if (!previousMessage) return true;\n    \n    const currentDate = new Date(currentMessage.timestamp);\n    const previousDate = new Date(previousMessage.timestamp);\n    \n    return currentDate.toDateString() !== previousDate.toDateString();\n  };\n\n  const shouldShowTimeGroup = (currentMessage: any, previousMessage: any) => {\n    if (!previousMessage) return true;\n    \n    const currentSenderId = typeof currentMessage.senderId === 'object' \n      ? currentMessage.senderId.id \n      : currentMessage.senderId;\n    const previousSenderId = typeof previousMessage.senderId === 'object' \n      ? previousMessage.senderId.id \n      : previousMessage.senderId;\n    \n    // Different senders\n    if (currentSenderId !== previousSenderId) return true;\n    \n    // Check if messages are more than 1 minute apart\n    const currentTime = new Date(currentMessage.timestamp);\n    const previousTime = new Date(previousMessage.timestamp);\n    const timeDiff = (currentTime.getTime() - previousTime.getTime()) / (1000 * 60); // minutes\n    \n    return timeDiff > 1;\n  };\n\n  const shouldShowAvatar = (currentMessage: any, nextMessage: any, isOwn: boolean) => {\n    if (isOwn) return false; // Don't show avatars for own messages\n    if (!nextMessage) return true; // Always show for last message in conversation\n    \n    const currentSenderId = typeof currentMessage.senderId === 'object' \n      ? currentMessage.senderId.id \n      : currentMessage.senderId;\n    const nextSenderId = typeof nextMessage.senderId === 'object' \n      ? nextMessage.senderId.id \n      : nextMessage.senderId;\n    \n    // Show avatar if next message is from different sender or if time group changes\n    return currentSenderId !== nextSenderId || shouldShowTimeGroup(nextMessage, currentMessage);\n  };\n\n  const renderConversationsList = () => (\n    <div className=\"w-full lg:w-96 border-r border-primary-700/30 flex flex-col\">\n      {/* Header */}\n      <div className=\"p-4 border-b border-primary-700/30\">\n        <h2 className=\"text-xl font-bold text-primary-100 mb-4\">Messages</h2>\n        \n        {/* Search */}\n        <div className=\"relative\">\n          <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-primary-400\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search conversations...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"input-field pl-10 text-sm\"\n          />\n        </div>\n      </div>\n\n      {/* Conversations List */}\n      <div className=\"flex-1 overflow-y-auto\">\n        {!state.conversations || state.conversations.length === 0 ? (\n          <div className=\"p-4 text-center\">\n            <MessageCircle className=\"w-12 h-12 mx-auto mb-4 text-primary-400\" />\n            <p className=\"text-primary-300\">\n              {!state.conversations ? 'Loading conversations...' : 'No conversations yet'}\n            </p>\n            <p className=\"text-sm text-primary-400 mt-1\">\n              {!state.conversations \n                ? 'Please wait while we load your messages'\n                : 'Start trading to begin messaging with other users'\n              }\n            </p>\n          </div>\n        ) : filteredConversations.length === 0 ? (\n          <div className=\"p-4 text-center\">\n            <MessageCircle className=\"w-12 h-12 mx-auto mb-4 text-primary-400\" />\n            <p className=\"text-primary-300\">No conversations match your search</p>\n            <p className=\"text-sm text-primary-400 mt-1\">\n              Try adjusting your search terms\n            </p>\n          </div>\n        ) : (\n          <div className=\"space-y-1 p-2\">\n            {filteredConversations.map((conversation) => {\n              // For API conversations, use embedded otherUser data; for fallback conversations, find in state.users\n              const otherUser = (conversation as any).otherUser || (() => {\n                const otherUserId = conversation.participants.find(p => p !== state.currentUser?.id);\n                return state.users.find(u => u.id === otherUserId);\n              })();\n              const isSelected = selectedConversation === conversation.id;\n              \n              return (\n                <motion.div\n                  key={conversation.id}\n                  whileHover={{ scale: 1.02 }}\n                  whileTap={{ scale: 0.98 }}\n                  onClick={() => handleConversationSelect(conversation.id)}\n                  className={`p-3 rounded-lg cursor-pointer transition-all ${\n                    isSelected\n                      ? 'bg-primary-600/30 border border-primary-500/50'\n                      : 'hover:bg-primary-800/30'\n                  }`}\n                >\n                  <div className=\"flex items-center space-x-3\">\n                    {/* Avatar */}\n                    <div className=\"relative\">\n                      <div className=\"w-12 h-12 bg-primary-800/50 rounded-full flex items-center justify-center\">\n                        {otherUser?.avatar ? (\n                          <img\n                            src={otherUser.avatar}\n                            alt={otherUser.username}\n                            className=\"w-full h-full object-cover rounded-full\"\n                          />\n                        ) : (\n                          <User className=\"w-6 h-6 text-primary-300\" />\n                        )}\n                      </div>\n                      {/* Online indicator could go here */}\n                    </div>\n                    \n                    {/* Content */}\n                    <div className=\"flex-1 min-w-0\">\n                      <div className=\"flex items-center justify-between\">\n                        <h4 className=\"font-medium text-primary-100 truncate\">\n                          @{otherUser?.username || 'Unknown'}\n                        </h4>\n                        <span className=\"text-xs text-primary-400\">\n                          {formatTime(conversation.lastMessage.timestamp)}\n                        </span>\n                      </div>\n                      \n                      <div className=\"flex items-center justify-between mt-1\">\n                        <p className=\"text-sm text-primary-300 truncate\">\n                          {conversation.lastMessage.senderId === state.currentUser?.id && 'You: '}\n                          {conversation.lastMessage.content}\n                        </p>\n                        {conversation.unreadCount > 0 && (\n                          <span className=\"bg-blue-500 text-white text-xs px-2 py-1 rounded-full min-w-[20px] text-center\">\n                            {conversation.unreadCount > 99 ? '99+' : conversation.unreadCount}\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </motion.div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n\n  const renderChatInterface = () => {\n    if (!selectedConversation || !selectedConversationUser) {\n      return (\n        <div className=\"flex-1 flex items-center justify-center\">\n          <div className=\"text-center\">\n            <MessageCircle className=\"w-16 h-16 mx-auto mb-4 text-primary-400\" />\n            <h3 className=\"text-xl font-semibold text-primary-100 mb-2\">Select a conversation</h3>\n            <p className=\"text-primary-300\">Choose a conversation to start messaging</p>\n          </div>\n        </div>\n      );\n    }\n\n    const typingUsersInConversation = typingUsers.filter(t => t.conversationId === selectedConversation);\n\n    return (\n      <div className=\"flex-1 relative h-full\">\n        {/* Chat Header - Fixed at top */}\n        <div className=\"absolute top-0 left-0 right-0 p-4 border-b border-primary-700/30 bg-primary-900/95 backdrop-blur-sm z-30\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <button\n                onClick={() => setSelectedConversation(null)}\n                className=\"lg:hidden p-2 hover:bg-primary-800/50 rounded-full transition-colors\"\n              >\n                <ArrowLeft className=\"w-5 h-5 text-primary-300\" />\n              </button>\n              \n              <div className=\"w-10 h-10 bg-primary-800/50 rounded-full flex items-center justify-center\">\n                {selectedConversationUser.avatar ? (\n                  <img\n                    src={selectedConversationUser.avatar}\n                    alt={selectedConversationUser.username}\n                    className=\"w-full h-full object-cover rounded-full\"\n                  />\n                ) : (\n                  <User className=\"w-5 h-5 text-primary-300\" />\n                )}\n              </div>\n              \n              <div>\n                <h3 className=\"font-semibold text-primary-100\">\n                  @{selectedConversationUser.username}\n                </h3>\n                {typingUsersInConversation.length > 0 && (\n                  <p className=\"text-sm text-blue-400\">typing...</p>\n                )}\n              </div>\n            </div>\n            \n            <div className=\"flex items-center space-x-2\">\n              <button className=\"p-2 hover:bg-primary-800/50 rounded-full transition-colors\">\n                <Phone className=\"w-5 h-5 text-primary-300\" />\n              </button>\n              <button className=\"p-2 hover:bg-primary-800/50 rounded-full transition-colors\">\n                <Video className=\"w-5 h-5 text-primary-300\" />\n              </button>\n              <button className=\"p-2 hover:bg-primary-800/50 rounded-full transition-colors\">\n                <Info className=\"w-5 h-5 text-primary-300\" />\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Message Input - Fixed at bottom */}\n        <div className=\"absolute bottom-0 left-0 right-0 p-4 border-t border-primary-700/30 bg-primary-900/95 backdrop-blur-sm z-30\">\n          <div className=\"flex items-center space-x-3 max-w-4xl mx-auto\">\n            <div className=\"flex-1\">\n              <textarea\n                ref={textareaRef}\n                value={messageText}\n                onChange={(e) => handleTyping(e.target.value)}\n                onKeyPress={handleKeyPress}\n                placeholder=\"Type a message...\"\n                className=\"w-full px-4 py-3 bg-primary-800/50 border border-primary-600/30 rounded-2xl text-primary-100 placeholder-primary-400 resize-none focus:outline-none focus:ring-2 focus:ring-blue-500/50 focus:border-transparent transition-all scrollbar-none\"\n                style={{ \n                  minHeight: '48px',\n                  maxHeight: '120px',\n                  lineHeight: '1.5'\n                }}\n                rows={1}\n                disabled={loading}\n              />\n            </div>\n            <button\n              onClick={handleSendMessage}\n              disabled={!messageText.trim() || loading}\n              className={`w-12 h-12 rounded-xl flex items-center justify-center flex-shrink-0 transition-all ${\n                messageText.trim() && !loading\n                  ? 'bg-blue-600 hover:bg-blue-700 text-white shadow-lg hover:shadow-xl'\n                  : 'bg-primary-700/50 text-primary-400 cursor-not-allowed'\n              }`}\n            >\n              <Send className=\"w-5 h-5\" />\n            </button>\n          </div>\n        </div>\n\n        {/* Messages Container - Between header and input */}\n        <div className=\"absolute top-20 bottom-20 left-0 right-0 overflow-hidden\">\n          <div className=\"h-full overflow-y-auto px-4 py-4 messages-scrollbar flex flex-col\">\n            {conversationMessages.length === 0 ? (\n              <div className=\"flex-1 flex items-center justify-center\">\n                <div className=\"text-center\">\n                  <p className=\"text-primary-300\">No messages yet</p>\n                  <p className=\"text-sm text-primary-400 mt-1\">Send a message to start the conversation</p>\n                </div>\n              </div>\n            ) : (\n              <>\n                {/* Spacer to push messages to bottom when there are few messages */}\n                <div className=\"flex-1 min-h-0\"></div>\n                \n                {/* Messages */}\n                <div className=\"space-y-1\">\n                  {conversationMessages.map((message, index) => {\n                    // Ensure we're comparing the correct sender ID (handle both string and object)\n                    const messageSenderId = typeof message.senderId === 'object' ? (message.senderId as any).id : message.senderId;\n                    const isOwn = messageSenderId === state.currentUser?.id;\n                    const isPending = (message as any).isPending;\n                    const pendingStatus = isPending ? (message as any).status : null;\n                    \n                    const previousMessage = index > 0 ? conversationMessages[index - 1] : null;\n                    const nextMessage = index < conversationMessages.length - 1 ? conversationMessages[index + 1] : null;\n                    \n                    const showDateSeparator = shouldShowDateSeparator(message, previousMessage);\n                    const showTimeGroup = shouldShowTimeGroup(message, previousMessage);\n                    const showAvatar = shouldShowAvatar(message, nextMessage, isOwn);\n                    \n                    return (\n                      <React.Fragment key={message.id}>\n                        {/* Date Separator */}\n                        {showDateSeparator && (\n                          <motion.div\n                            initial={{ opacity: 0, y: 10 }}\n                            animate={{ opacity: 1, y: 0 }}\n                            className=\"flex justify-center my-6\"\n                          >\n                            <div className=\"bg-primary-800/50 px-3 py-1 rounded-full\">\n                              <span className=\"text-xs font-medium text-primary-300\">\n                                {formatDateSeparator(message.timestamp)}\n                              </span>\n                            </div>\n                          </motion.div>\n                        )}\n                        \n                        {/* Time Group Separator */}\n                        {showTimeGroup && !showDateSeparator && (\n                          <div className=\"h-4\"></div>\n                        )}\n                        \n                        {/* Message */}\n                        <motion.div\n                          initial={{ opacity: 0, y: 20 }}\n                          animate={{ opacity: 1, y: 0 }}\n                          className={`flex ${isOwn ? 'justify-end' : 'justify-start'} ${\n                            showTimeGroup ? 'mt-2' : 'mt-0.5'\n                          }`}\n                        >\n                          <div className={`flex items-end space-x-2 max-w-xs lg:max-w-md ${isOwn ? 'flex-row-reverse space-x-reverse' : ''}`}>\n                            {/* Avatar */}\n                            <div className=\"w-8 h-8 flex-shrink-0\">\n                              {showAvatar && !isOwn && (\n                                <div className=\"w-8 h-8 bg-primary-800/50 rounded-full flex items-center justify-center\">\n                                  {selectedConversationUser.avatar ? (\n                                    <img\n                                      src={selectedConversationUser.avatar}\n                                      alt={selectedConversationUser.username}\n                                      className=\"w-full h-full object-cover rounded-full\"\n                                    />\n                                  ) : (\n                                    <User className=\"w-4 h-4 text-primary-300\" />\n                                  )}\n                                </div>\n                              )}\n                            </div>\n                            \n                            {/* Message Bubble */}\n                            <div\n                              className={`px-4 py-2 rounded-2xl ${\n                                isOwn\n                                  ? `bg-blue-600 text-white ${isPending && pendingStatus === 'sending' ? 'opacity-70' : ''} ${isPending && pendingStatus === 'failed' ? 'bg-red-600' : ''}`\n                                  : 'bg-primary-700/50 text-primary-100'\n                              } ${\n                                // Adjust border radius for grouped messages\n                                !showTimeGroup && !isOwn && !showAvatar ? 'rounded-tl-md' : ''\n                              } ${\n                                !showTimeGroup && isOwn ? 'rounded-tr-md' : ''\n                              }`}\n                            >\n                              <p className=\"text-sm whitespace-pre-wrap\">{message.content}</p>\n                              \n                              {/* Message metadata - only show on last message in time group */}\n                              {(showAvatar || index === conversationMessages.length - 1 || \n                                (nextMessage && shouldShowTimeGroup(nextMessage, message))) && (\n                                <div className={`flex items-center justify-end mt-1 space-x-1 ${\n                                  isOwn ? 'text-blue-200' : 'text-primary-400'\n                                }`}>\n                                  <span className=\"text-xs\">\n                                    {formatMessageTime(message.timestamp)}\n                                  </span>\n                                  {isOwn && (\n                                    <div className=\"flex items-center\">\n                                      {isPending ? (\n                                        pendingStatus === 'sending' ? (\n                                          <Clock className=\"w-3 h-3 animate-spin\" />\n                                        ) : pendingStatus === 'failed' ? (\n                                          <span className=\"text-xs text-red-200\">Failed</span>\n                                        ) : (\n                                          <Check className=\"w-3 h-3\" />\n                                        )\n                                      ) : message.read ? (\n                                        <CheckCheck className=\"w-3 h-3\" />\n                                      ) : (\n                                        <Check className=\"w-3 h-3\" />\n                                      )}\n                                    </div>\n                                  )}\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        </motion.div>\n                      </React.Fragment>\n                    );\n                  })}\n                  \n                  {/* Typing Indicator */}\n                  {typingUsersInConversation.length > 0 && (\n                    <motion.div\n                      initial={{ opacity: 0, y: 10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      className=\"flex items-end space-x-2\"\n                    >\n                      <div className=\"w-8 h-8 bg-primary-800/50 rounded-full flex items-center justify-center\">\n                        <User className=\"w-4 h-4 text-primary-300\" />\n                      </div>\n                      <div className=\"bg-primary-700/50 px-4 py-2 rounded-2xl\">\n                        <div className=\"flex space-x-1\">\n                          <div className=\"w-2 h-2 bg-primary-400 rounded-full animate-bounce\" style={{ animationDelay: '0ms' }} />\n                          <div className=\"w-2 h-2 bg-primary-400 rounded-full animate-bounce\" style={{ animationDelay: '150ms' }} />\n                          <div className=\"w-2 h-2 bg-primary-400 rounded-full animate-bounce\" style={{ animationDelay: '300ms' }} />\n                        </div>\n                      </div>\n                    </motion.div>\n                  )}\n                  \n                  <div ref={messagesEndRef} />\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"h-full flex\">\n      {/* Mobile: Show either conversations list or chat */}\n      <div className=\"lg:hidden w-full h-full\">\n        {selectedConversation ? renderChatInterface() : renderConversationsList()}\n      </div>\n      \n      {/* Desktop: Show both side by side */}\n      <div className=\"hidden lg:flex w-full h-full\">\n        {renderConversationsList()}\n        {renderChatInterface()}\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}