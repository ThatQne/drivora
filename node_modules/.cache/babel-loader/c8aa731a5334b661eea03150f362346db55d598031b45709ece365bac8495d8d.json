{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thato\\\\Downloads\\\\car-app\\\\src\\\\components\\\\messages\\\\MessageButton.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { MessageCircle } from 'lucide-react';\nimport { AnimatePresence } from 'framer-motion';\nimport { MessageStarter } from './MessageStarter.tsx';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function MessageButton({\n  targetUser,\n  variant = 'primary',\n  size = 'md',\n  tradeId,\n  listingId,\n  initialMessage,\n  className = ''\n}) {\n  _s();\n  const [showMessageStarter, setShowMessageStarter] = useState(false);\n  const getButtonClasses = () => {\n    const baseClasses = 'flex items-center justify-center gap-2 transition-colors';\n    const sizeClasses = {\n      sm: 'px-3 py-2 text-sm',\n      md: 'px-4 py-2',\n      lg: 'px-6 py-3 text-lg'\n    };\n    const variantClasses = {\n      primary: 'btn-primary',\n      secondary: 'btn-secondary',\n      icon: 'p-2 hover:bg-primary-800/50 rounded-full text-primary-300 hover:text-primary-100'\n    };\n    return `${baseClasses} ${sizeClasses[size]} ${variantClasses[variant]} ${className}`;\n  };\n  const getIconSize = () => {\n    switch (size) {\n      case 'sm':\n        return 'w-4 h-4';\n      case 'lg':\n        return 'w-6 h-6';\n      default:\n        return 'w-5 h-5';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowMessageStarter(true),\n      className: getButtonClasses(),\n      title: variant === 'icon' ? `Message @${targetUser.username}` : undefined,\n      children: [/*#__PURE__*/_jsxDEV(MessageCircle, {\n        className: getIconSize()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), variant !== 'icon' && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: variant === 'primary' ? `Message @${targetUser.username}` : 'Message'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: showMessageStarter && /*#__PURE__*/_jsxDEV(MessageStarter, {\n        targetUser: targetUser,\n        tradeId: tradeId,\n        listingId: listingId,\n        initialMessage: initialMessage,\n        onClose: () => setShowMessageStarter(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(MessageButton, \"wKLWExkIJyAH8i8FQ0kpYw8wRd4=\");\n_c = MessageButton;\nvar _c;\n$RefreshReg$(_c, \"MessageButton\");","map":{"version":3,"names":["React","useState","MessageCircle","AnimatePresence","MessageStarter","jsxDEV","_jsxDEV","Fragment","_Fragment","MessageButton","targetUser","variant","size","tradeId","listingId","initialMessage","className","_s","showMessageStarter","setShowMessageStarter","getButtonClasses","baseClasses","sizeClasses","sm","md","lg","variantClasses","primary","secondary","icon","getIconSize","children","onClick","title","username","undefined","fileName","_jsxFileName","lineNumber","columnNumber","onClose","_c","$RefreshReg$"],"sources":["C:/Users/thato/Downloads/car-app/src/components/messages/MessageButton.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { MessageCircle } from 'lucide-react';\r\nimport { AnimatePresence } from 'framer-motion';\r\nimport { User } from '../../types/index.ts';\r\nimport { MessageStarter } from './MessageStarter.tsx';\r\n\r\ninterface MessageButtonProps {\r\n  targetUser: User;\r\n  variant?: 'primary' | 'secondary' | 'icon';\r\n  size?: 'sm' | 'md' | 'lg';\r\n  tradeId?: string;\r\n  listingId?: string;\r\n  initialMessage?: string;\r\n  className?: string;\r\n}\r\n\r\nexport function MessageButton({ \r\n  targetUser, \r\n  variant = 'primary',\r\n  size = 'md',\r\n  tradeId,\r\n  listingId,\r\n  initialMessage,\r\n  className = ''\r\n}: MessageButtonProps) {\r\n  const [showMessageStarter, setShowMessageStarter] = useState(false);\r\n\r\n  const getButtonClasses = () => {\r\n    const baseClasses = 'flex items-center justify-center gap-2 transition-colors';\r\n    \r\n    const sizeClasses = {\r\n      sm: 'px-3 py-2 text-sm',\r\n      md: 'px-4 py-2',\r\n      lg: 'px-6 py-3 text-lg'\r\n    };\r\n\r\n    const variantClasses = {\r\n      primary: 'btn-primary',\r\n      secondary: 'btn-secondary',\r\n      icon: 'p-2 hover:bg-primary-800/50 rounded-full text-primary-300 hover:text-primary-100'\r\n    };\r\n\r\n    return `${baseClasses} ${sizeClasses[size]} ${variantClasses[variant]} ${className}`;\r\n  };\r\n\r\n  const getIconSize = () => {\r\n    switch (size) {\r\n      case 'sm': return 'w-4 h-4';\r\n      case 'lg': return 'w-6 h-6';\r\n      default: return 'w-5 h-5';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        onClick={() => setShowMessageStarter(true)}\r\n        className={getButtonClasses()}\r\n        title={variant === 'icon' ? `Message @${targetUser.username}` : undefined}\r\n      >\r\n        <MessageCircle className={getIconSize()} />\r\n        {variant !== 'icon' && (\r\n          <span>\r\n            {variant === 'primary' ? `Message @${targetUser.username}` : 'Message'}\r\n          </span>\r\n        )}\r\n      </button>\r\n\r\n      <AnimatePresence>\r\n        {showMessageStarter && (\r\n          <MessageStarter\r\n            targetUser={targetUser}\r\n            tradeId={tradeId}\r\n            listingId={listingId}\r\n            initialMessage={initialMessage}\r\n            onClose={() => setShowMessageStarter(false)}\r\n          />\r\n        )}\r\n      </AnimatePresence>\r\n    </>\r\n  );\r\n} \r\n "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,cAAc;AAC5C,SAASC,eAAe,QAAQ,eAAe;AAE/C,SAASC,cAAc,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAYtD,OAAO,SAASC,aAAaA,CAAC;EAC5BC,UAAU;EACVC,OAAO,GAAG,SAAS;EACnBC,IAAI,GAAG,IAAI;EACXC,OAAO;EACPC,SAAS;EACTC,cAAc;EACdC,SAAS,GAAG;AACM,CAAC,EAAE;EAAAC,EAAA;EACrB,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAEnE,MAAMmB,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,WAAW,GAAG,0DAA0D;IAE9E,MAAMC,WAAW,GAAG;MAClBC,EAAE,EAAE,mBAAmB;MACvBC,EAAE,EAAE,WAAW;MACfC,EAAE,EAAE;IACN,CAAC;IAED,MAAMC,cAAc,GAAG;MACrBC,OAAO,EAAE,aAAa;MACtBC,SAAS,EAAE,eAAe;MAC1BC,IAAI,EAAE;IACR,CAAC;IAED,OAAO,GAAGR,WAAW,IAAIC,WAAW,CAACV,IAAI,CAAC,IAAIc,cAAc,CAACf,OAAO,CAAC,IAAIK,SAAS,EAAE;EACtF,CAAC;EAED,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACxB,QAAQlB,IAAI;MACV,KAAK,IAAI;QAAE,OAAO,SAAS;MAC3B,KAAK,IAAI;QAAE,OAAO,SAAS;MAC3B;QAAS,OAAO,SAAS;IAC3B;EACF,CAAC;EAED,oBACEN,OAAA,CAAAE,SAAA;IAAAuB,QAAA,gBACEzB,OAAA;MACE0B,OAAO,EAAEA,CAAA,KAAMb,qBAAqB,CAAC,IAAI,CAAE;MAC3CH,SAAS,EAAEI,gBAAgB,CAAC,CAAE;MAC9Ba,KAAK,EAAEtB,OAAO,KAAK,MAAM,GAAG,YAAYD,UAAU,CAACwB,QAAQ,EAAE,GAAGC,SAAU;MAAAJ,QAAA,gBAE1EzB,OAAA,CAACJ,aAAa;QAACc,SAAS,EAAEc,WAAW,CAAC;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC1C5B,OAAO,KAAK,MAAM,iBACjBL,OAAA;QAAAyB,QAAA,EACGpB,OAAO,KAAK,SAAS,GAAG,YAAYD,UAAU,CAACwB,QAAQ,EAAE,GAAG;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE,CACP;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,eAETjC,OAAA,CAACH,eAAe;MAAA4B,QAAA,EACbb,kBAAkB,iBACjBZ,OAAA,CAACF,cAAc;QACbM,UAAU,EAAEA,UAAW;QACvBG,OAAO,EAAEA,OAAQ;QACjBC,SAAS,EAAEA,SAAU;QACrBC,cAAc,EAAEA,cAAe;QAC/ByB,OAAO,EAAEA,CAAA,KAAMrB,qBAAqB,CAAC,KAAK;MAAE;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACc,CAAC;EAAA,eAClB,CAAC;AAEP;AAACtB,EAAA,CAjEeR,aAAa;AAAAgC,EAAA,GAAbhC,aAAa;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}