{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thato\\\\Downloads\\\\car-app\\\\src\\\\components\\\\messages\\\\MessagesView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\nimport { motion } from 'framer-motion';\nimport { MessageCircle, Search, Send, User, ArrowLeft, Check, CheckCheck, Phone, Video, Info, Clock } from 'lucide-react';\nimport { useApp } from '../../context/AppContext.tsx';\nimport ApiService from '../../services/apiService.ts';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function MessagesView() {\n  _s();\n  var _state$currentUser5, _state$currentUser7, _state$currentUser0, _state$currentUser10;\n  const {\n    state,\n    sendMessage,\n    markMessagesAsRead\n  } = useApp();\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [messageText, setMessageText] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [typingUsers, setTypingUsers] = useState([]);\n  const [isTyping, setIsTyping] = useState(false);\n  const [pendingMessages, setPendingMessages] = useState([]);\n  const [initialLoad, setInitialLoad] = useState(true);\n\n  // Message pagination state\n  const [paginatedMessages, setPaginatedMessages] = useState({});\n  const [messagePagination, setMessagePagination] = useState({});\n  const messagesEndRef = useRef(null);\n  const messagesTopRef = useRef(null);\n  const messagesContainerRef = useRef(null);\n  const typingTimeoutRef = useRef();\n  const textareaRef = useRef(null);\n  const lastScrollHeight = useRef(0);\n\n  // Track when messages/conversations are loaded for the first time\n  useEffect(() => {\n    if (state.messages && state.messages.length > 0 || state.conversations && state.conversations.length > 0) {\n      setInitialLoad(false);\n    }\n  }, [state.messages, state.conversations]);\n\n  // Auto-scroll to bottom when new messages arrive\n  useEffect(() => {\n    // Use setTimeout to ensure DOM has been updated before scrolling\n    const timeoutId = setTimeout(() => {\n      scrollToBottom();\n    }, 100);\n    return () => clearTimeout(timeoutId);\n  }, [state.messages, selectedConversation, pendingMessages]);\n\n  // Scroll to bottom when conversation is first selected\n  useEffect(() => {\n    if (selectedConversation) {\n      const timeoutId = setTimeout(() => {\n        scrollToBottom();\n      }, 200); // Slightly longer delay for conversation switch\n\n      return () => clearTimeout(timeoutId);\n    }\n  }, [selectedConversation]);\n\n  // Clean up typing indicators that are too old\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = Date.now();\n      setTypingUsers(prev => prev.filter(typing => now - typing.timestamp < 3000));\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Debug logging for conversations\n  useEffect(() => {\n    var _state$conversations, _state$messages, _state$users, _state$conversations2;\n    console.log('📞 MessagesView Debug:', {\n      conversationsCount: ((_state$conversations = state.conversations) === null || _state$conversations === void 0 ? void 0 : _state$conversations.length) || 0,\n      messagesCount: ((_state$messages = state.messages) === null || _state$messages === void 0 ? void 0 : _state$messages.length) || 0,\n      usersCount: ((_state$users = state.users) === null || _state$users === void 0 ? void 0 : _state$users.length) || 0,\n      conversations: (_state$conversations2 = state.conversations) === null || _state$conversations2 === void 0 ? void 0 : _state$conversations2.slice(0, 3).map(c => {\n        var _c$lastMessage, _c$lastMessage$conten;\n        return {\n          id: c.id,\n          participants: c.participants,\n          otherUser: c.otherUser ? {\n            id: c.otherUser.id,\n            username: c.otherUser.username\n          } : null,\n          lastMessage: (_c$lastMessage = c.lastMessage) === null || _c$lastMessage === void 0 ? void 0 : (_c$lastMessage$conten = _c$lastMessage.content) === null || _c$lastMessage$conten === void 0 ? void 0 : _c$lastMessage$conten.substring(0, 30)\n        };\n      })\n    });\n  }, [state.conversations, state.messages, state.users]);\n\n  // Use conversations from state (loaded from API) with fallback to creating from messages\n  const conversations = useMemo(() => {\n    // If we have conversations from the API, use those\n    if (state.conversations && state.conversations.length > 0) {\n      console.log('📞 Using conversations from API:', state.conversations.length);\n      return state.conversations.sort((a, b) => {\n        var _b$lastMessage, _a$lastMessage;\n        return new Date(b.updatedAt || ((_b$lastMessage = b.lastMessage) === null || _b$lastMessage === void 0 ? void 0 : _b$lastMessage.timestamp) || 0).getTime() - new Date(a.updatedAt || ((_a$lastMessage = a.lastMessage) === null || _a$lastMessage === void 0 ? void 0 : _a$lastMessage.timestamp) || 0).getTime();\n      });\n    }\n\n    // Fallback: Create conversations from messages if API conversations aren't available\n    console.log('📞 Fallback: Creating conversations from messages');\n    const convMap = new Map();\n    state.messages.forEach(message => {\n      var _state$currentUser, _state$currentUser2;\n      const otherUserId = message.senderId === ((_state$currentUser = state.currentUser) === null || _state$currentUser === void 0 ? void 0 : _state$currentUser.id) ? message.receiverId : message.senderId;\n      const conversationId = [(_state$currentUser2 = state.currentUser) === null || _state$currentUser2 === void 0 ? void 0 : _state$currentUser2.id, otherUserId].sort().join('-');\n      if (!convMap.has(conversationId)) {\n        var _state$currentUser3;\n        convMap.set(conversationId, {\n          id: conversationId,\n          participants: [(_state$currentUser3 = state.currentUser) === null || _state$currentUser3 === void 0 ? void 0 : _state$currentUser3.id, otherUserId],\n          lastMessage: message,\n          unreadCount: 0,\n          updatedAt: message.timestamp\n        });\n      } else {\n        const existing = convMap.get(conversationId);\n        if (new Date(message.timestamp) > new Date(existing.lastMessage.timestamp)) {\n          existing.lastMessage = message;\n          existing.updatedAt = message.timestamp;\n        }\n      }\n    });\n\n    // Calculate unread counts\n    convMap.forEach(conversation => {\n      const unreadMessages = state.messages.filter(msg => {\n        var _state$currentUser4;\n        return msg.receiverId === ((_state$currentUser4 = state.currentUser) === null || _state$currentUser4 === void 0 ? void 0 : _state$currentUser4.id) && !msg.read && (msg.senderId === conversation.participants[0] || msg.senderId === conversation.participants[1]);\n      });\n      conversation.unreadCount = unreadMessages.length;\n    });\n    return Array.from(convMap.values()).sort((a, b) => new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime());\n  }, [state.conversations, state.messages, (_state$currentUser5 = state.currentUser) === null || _state$currentUser5 === void 0 ? void 0 : _state$currentUser5.id, state.users]);\n\n  // Filter conversations based on search\n  const filteredConversations = useMemo(() => {\n    if (!searchTerm) return conversations;\n    return conversations.filter(conversation => {\n      var _otherUser$username;\n      // For API conversations, use embedded otherUser data; for fallback conversations, find in state.users\n      const otherUser = conversation.otherUser || (() => {\n        const otherUserId = conversation.participants.find(p => {\n          var _state$currentUser6;\n          return p !== ((_state$currentUser6 = state.currentUser) === null || _state$currentUser6 === void 0 ? void 0 : _state$currentUser6.id);\n        });\n        return state.users.find(u => u.id === otherUserId);\n      })();\n      return otherUser === null || otherUser === void 0 ? void 0 : (_otherUser$username = otherUser.username) === null || _otherUser$username === void 0 ? void 0 : _otherUser$username.toLowerCase().includes(searchTerm.toLowerCase());\n    });\n  }, [conversations, searchTerm, state.users, (_state$currentUser7 = state.currentUser) === null || _state$currentUser7 === void 0 ? void 0 : _state$currentUser7.id]);\n\n  // Get current conversation messages with pending messages\n  const currentConversationMessages = useMemo(() => {\n    if (!selectedConversation) return [];\n\n    // Get paginated messages for this conversation\n    const messages = paginatedMessages[selectedConversation] || [];\n\n    // Get other user ID for pending messages\n    const conversation = conversations.find(c => c.id === selectedConversation);\n    if (!conversation) return messages;\n    let otherUserId;\n    if (conversation.otherUser) {\n      otherUserId = conversation.otherUser.id;\n    } else {\n      otherUserId = conversation.participants.find(p => {\n        var _state$currentUser8;\n        return p !== ((_state$currentUser8 = state.currentUser) === null || _state$currentUser8 === void 0 ? void 0 : _state$currentUser8.id);\n      }) || '';\n    }\n\n    // Add pending messages for this conversation\n    const conversationPendingMessages = pendingMessages.filter(msg => msg.receiverId === otherUserId).filter(msg => {\n      // Don't show pending messages if a real message with similar content and timestamp exists\n      const hasRealCounterpart = messages.some(realMsg => {\n        var _state$currentUser9;\n        const realMsgSenderId = typeof realMsg.senderId === 'object' ? realMsg.senderId.id : realMsg.senderId;\n        return realMsgSenderId === ((_state$currentUser9 = state.currentUser) === null || _state$currentUser9 === void 0 ? void 0 : _state$currentUser9.id) && realMsg.content === msg.content && Math.abs(new Date(realMsg.timestamp).getTime() - new Date(msg.timestamp).getTime()) < 5000;\n      });\n      return !hasRealCounterpart;\n    }).map(msg => ({\n      ...msg,\n      read: false,\n      isPending: true\n    }));\n\n    // Combine and sort all messages\n    const allMessages = [...messages, ...conversationPendingMessages].sort((a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime());\n    return allMessages;\n  }, [selectedConversation, paginatedMessages, pendingMessages, conversations, (_state$currentUser0 = state.currentUser) === null || _state$currentUser0 === void 0 ? void 0 : _state$currentUser0.id]);\n\n  // Get other user in selected conversation\n  const selectedConversationUser = useMemo(() => {\n    if (!selectedConversation) return null;\n    const conversation = conversations.find(c => c.id === selectedConversation);\n    if (!conversation) return null;\n\n    // For API conversations, use embedded otherUser data; for fallback conversations, find in state.users\n    const otherUser = conversation.otherUser || (() => {\n      const otherUserId = conversation.participants.find(p => {\n        var _state$currentUser1;\n        return p !== ((_state$currentUser1 = state.currentUser) === null || _state$currentUser1 === void 0 ? void 0 : _state$currentUser1.id);\n      });\n      return state.users.find(u => u.id === otherUserId);\n    })();\n    return otherUser || null;\n  }, [selectedConversation, conversations, state.users, (_state$currentUser10 = state.currentUser) === null || _state$currentUser10 === void 0 ? void 0 : _state$currentUser10.id]);\n  const handleSendMessage = async () => {\n    if (!messageText.trim() || !selectedConversationUser || loading) return;\n    const tempMessage = {\n      id: `temp-${Date.now()}`,\n      content: messageText.trim(),\n      timestamp: new Date().toISOString(),\n      senderId: state.currentUser.id,\n      receiverId: selectedConversationUser.id,\n      status: 'sending'\n    };\n\n    // Add to pending messages immediately\n    setPendingMessages(prev => [...prev, tempMessage]);\n    setMessageText('');\n    setIsTyping(false);\n\n    // Auto-resize textarea back to single line\n    if (textareaRef.current) {\n      textareaRef.current.style.height = '48px';\n    }\n    setLoading(true);\n    try {\n      await sendMessage({\n        senderId: state.currentUser.id,\n        receiverId: selectedConversationUser.id,\n        content: tempMessage.content\n      });\n\n      // Remove pending message immediately once sent successfully\n      // The real message will appear through state.messages and our filter will prevent duplicates\n      setPendingMessages(prev => prev.filter(msg => msg.id !== tempMessage.id));\n    } catch (error) {\n      console.error('Error sending message:', error);\n      // Mark as failed\n      setPendingMessages(prev => prev.map(msg => msg.id === tempMessage.id ? {\n        ...msg,\n        status: 'failed'\n      } : msg));\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const handleTyping = value => {\n    setMessageText(value);\n\n    // Auto-resize textarea\n    if (textareaRef.current) {\n      textareaRef.current.style.height = '40px';\n      textareaRef.current.style.height = `${Math.min(textareaRef.current.scrollHeight, 120)}px`;\n    }\n    if (value.trim() && !isTyping) {\n      setIsTyping(true);\n      // In a real app, you'd emit typing indicator to other users via WebSocket\n    }\n\n    // Clear typing indicator after 2 seconds of no typing\n    if (typingTimeoutRef.current) {\n      clearTimeout(typingTimeoutRef.current);\n    }\n    typingTimeoutRef.current = setTimeout(() => {\n      setIsTyping(false);\n    }, 2000);\n  };\n  const handleConversationSelect = async conversationId => {\n    const conversation = conversations.find(c => c.id === conversationId);\n    console.log('🔍 Selected conversation:', {\n      id: conversationId,\n      conversation: conversation ? {\n        id: conversation.id,\n        participants: conversation.participants,\n        otherUser: conversation.otherUser ? {\n          id: conversation.otherUser.id,\n          username: conversation.otherUser.username\n        } : null\n      } : 'NOT FOUND'\n    });\n    setSelectedConversation(conversationId);\n\n    // Load messages for this conversation if not already loaded\n    const pagination = messagePagination[conversationId];\n    if (!pagination || !pagination.initialLoaded) {\n      await loadConversationMessages(conversationId, 1, false);\n    }\n\n    // Scroll to bottom after a short delay to ensure messages are rendered\n    setTimeout(() => {\n      scrollToBottom(true);\n    }, 100);\n\n    // Mark messages as read\n    if (conversation && conversation.unreadCount > 0) {\n      try {\n        await markMessagesAsRead(conversationId);\n      } catch (error) {\n        console.error('Error marking messages as read:', error);\n      }\n    }\n  };\n  const formatTime = timestamp => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffInHours = (now.getTime() - date.getTime()) / (1000 * 60 * 60);\n    if (diffInHours < 24) {\n      return date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    } else if (diffInHours < 168) {\n      // 7 days\n      return date.toLocaleDateString([], {\n        weekday: 'short'\n      });\n    } else {\n      return date.toLocaleDateString([], {\n        month: 'short',\n        day: 'numeric'\n      });\n    }\n  };\n  const formatMessageTime = timestamp => {\n    return new Date(timestamp).toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const formatDateSeparator = timestamp => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n    const messageDate = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n    if (messageDate.getTime() === today.getTime()) {\n      return 'Today';\n    } else if (messageDate.getTime() === yesterday.getTime()) {\n      return 'Yesterday';\n    } else if (now.getTime() - messageDate.getTime() < 7 * 24 * 60 * 60 * 1000) {\n      return date.toLocaleDateString([], {\n        weekday: 'long'\n      });\n    } else {\n      return date.toLocaleDateString([], {\n        month: 'long',\n        day: 'numeric',\n        year: date.getFullYear() !== now.getFullYear() ? 'numeric' : undefined\n      });\n    }\n  };\n  const shouldShowDateSeparator = (currentMessage, previousMessage) => {\n    if (!previousMessage) return true;\n    const currentDate = new Date(currentMessage.timestamp);\n    const previousDate = new Date(previousMessage.timestamp);\n    return currentDate.toDateString() !== previousDate.toDateString();\n  };\n  const shouldShowTimeGroup = (currentMessage, previousMessage) => {\n    if (!previousMessage) return true;\n    const currentSenderId = typeof currentMessage.senderId === 'object' ? currentMessage.senderId.id : currentMessage.senderId;\n    const previousSenderId = typeof previousMessage.senderId === 'object' ? previousMessage.senderId.id : previousMessage.senderId;\n\n    // Different senders\n    if (currentSenderId !== previousSenderId) return true;\n\n    // Check if messages are more than 1 minute apart\n    const currentTime = new Date(currentMessage.timestamp);\n    const previousTime = new Date(previousMessage.timestamp);\n    const timeDiff = (currentTime.getTime() - previousTime.getTime()) / (1000 * 60); // minutes\n\n    return timeDiff > 1;\n  };\n  const shouldShowAvatar = (currentMessage, nextMessage, isOwn) => {\n    if (isOwn) return false; // Don't show avatars for own messages\n    if (!nextMessage) return true; // Always show for last message in conversation\n\n    const currentSenderId = typeof currentMessage.senderId === 'object' ? currentMessage.senderId.id : currentMessage.senderId;\n    const nextSenderId = typeof nextMessage.senderId === 'object' ? nextMessage.senderId.id : nextMessage.senderId;\n\n    // Show avatar if next message is from different sender or if time group changes\n    return currentSenderId !== nextSenderId || shouldShowTimeGroup(nextMessage, currentMessage);\n  };\n  const renderConversationsList = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full lg:w-96 border-r border-primary-700/30 flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 border-b border-primary-700/30\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold text-primary-100 mb-4\",\n        children: \"Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative\",\n        children: [/*#__PURE__*/_jsxDEV(Search, {\n          className: \"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-primary-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search conversations...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          className: \"input-field pl-10 text-sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto\",\n      children: initialLoad && (!state.conversations || state.conversations.length === 0) ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-12 h-12 mx-auto mb-4 relative\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-12 h-12 border-2 border-primary-600 border-t-blue-500 rounded-full animate-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-primary-300\",\n          children: \"Loading conversations...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-primary-400 mt-1\",\n          children: \"Please wait while we load your messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 11\n      }, this) : !state.conversations || state.conversations.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(MessageCircle, {\n          className: \"w-12 h-12 mx-auto mb-4 text-primary-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-primary-300\",\n          children: \"No conversations yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-primary-400 mt-1\",\n          children: \"Start trading to begin messaging with other users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 11\n      }, this) : filteredConversations.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(MessageCircle, {\n          className: \"w-12 h-12 mx-auto mb-4 text-primary-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-primary-300\",\n          children: \"No conversations match your search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-primary-400 mt-1\",\n          children: \"Try adjusting your search terms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-1 p-2\",\n        children: filteredConversations.map(conversation => {\n          var _state$currentUser12;\n          // For API conversations, use embedded otherUser data; for fallback conversations, find in state.users\n          const otherUser = conversation.otherUser || (() => {\n            const otherUserId = conversation.participants.find(p => {\n              var _state$currentUser11;\n              return p !== ((_state$currentUser11 = state.currentUser) === null || _state$currentUser11 === void 0 ? void 0 : _state$currentUser11.id);\n            });\n            return state.users.find(u => u.id === otherUserId);\n          })();\n          const isSelected = selectedConversation === conversation.id;\n          return /*#__PURE__*/_jsxDEV(motion.div, {\n            whileHover: {\n              scale: 1.02\n            },\n            whileTap: {\n              scale: 0.98\n            },\n            onClick: () => handleConversationSelect(conversation.id),\n            className: `p-3 rounded-lg cursor-pointer transition-all ${isSelected ? 'bg-primary-600/30 border border-primary-500/50' : 'hover:bg-primary-800/30'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"relative\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-12 h-12 bg-primary-800/50 rounded-full flex items-center justify-center\",\n                  children: otherUser !== null && otherUser !== void 0 && otherUser.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: otherUser.avatar,\n                    alt: otherUser.username,\n                    className: \"w-full h-full object-cover rounded-full\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 531,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(User, {\n                    className: \"w-6 h-6 text-primary-300\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 537,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-1 min-w-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center justify-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"font-medium text-primary-100 truncate\",\n                    children: [\"@\", (otherUser === null || otherUser === void 0 ? void 0 : otherUser.username) || 'Unknown']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 546,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-xs text-primary-400\",\n                    children: formatTime(conversation.lastMessage.timestamp)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 549,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center justify-between mt-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-primary-300 truncate\",\n                    children: [conversation.lastMessage.senderId === ((_state$currentUser12 = state.currentUser) === null || _state$currentUser12 === void 0 ? void 0 : _state$currentUser12.id) && 'You: ', conversation.lastMessage.content]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 555,\n                    columnNumber: 25\n                  }, this), conversation.unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"bg-blue-500 text-white text-xs px-2 py-1 rounded-full min-w-[20px] text-center\",\n                    children: conversation.unreadCount > 99 ? '99+' : conversation.unreadCount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 560,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 554,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 19\n            }, this)\n          }, conversation.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 458,\n    columnNumber: 5\n  }, this);\n  const renderChatInterface = () => {\n    var _messagePagination$se, _messagePagination$se2;\n    if (!selectedConversation || !selectedConversationUser) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(MessageCircle, {\n            className: \"w-16 h-16 mx-auto mb-4 text-primary-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold text-primary-100 mb-2\",\n            children: \"Select a conversation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-primary-300\",\n            children: \"Choose a conversation to start messaging\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 9\n      }, this);\n    }\n    const typingUsersInConversation = typingUsers.filter(t => t.conversationId === selectedConversation);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 relative h-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-0 left-0 right-0 p-4 border-b border-primary-700/30 bg-primary-900/95 backdrop-blur-sm z-30\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSelectedConversation(null),\n              className: \"lg:hidden p-2 hover:bg-primary-800/50 rounded-full transition-colors\",\n              children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n                className: \"w-5 h-5 text-primary-300\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-10 h-10 bg-primary-800/50 rounded-full flex items-center justify-center\",\n              children: selectedConversationUser.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: selectedConversationUser.avatar,\n                alt: selectedConversationUser.username,\n                className: \"w-full h-full object-cover rounded-full\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 606,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(User, {\n                className: \"w-5 h-5 text-primary-300\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"font-semibold text-primary-100\",\n                children: [\"@\", selectedConversationUser.username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 617,\n                columnNumber: 17\n              }, this), typingUsersInConversation.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-blue-400\",\n                children: \"typing...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 621,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"p-2 hover:bg-primary-800/50 rounded-full transition-colors\",\n              children: /*#__PURE__*/_jsxDEV(Phone, {\n                className: \"w-5 h-5 text-primary-300\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"p-2 hover:bg-primary-800/50 rounded-full transition-colors\",\n              children: /*#__PURE__*/_jsxDEV(Video, {\n                className: \"w-5 h-5 text-primary-300\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 631,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"p-2 hover:bg-primary-800/50 rounded-full transition-colors\",\n              children: /*#__PURE__*/_jsxDEV(Info, {\n                className: \"w-5 h-5 text-primary-300\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 634,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute bottom-0 left-0 right-0 p-4 border-t border-primary-700/30 bg-primary-900/95 backdrop-blur-sm z-30\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-3 max-w-4xl mx-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              ref: textareaRef,\n              value: messageText,\n              onChange: e => handleTyping(e.target.value),\n              onKeyPress: handleKeyPress,\n              placeholder: \"Type a message...\",\n              className: \"w-full px-4 py-3 bg-primary-800/50 border border-primary-600/30 rounded-2xl text-primary-100 placeholder-primary-400 resize-none focus:outline-none focus:ring-2 focus:ring-blue-500/50 focus:border-transparent transition-all scrollbar-none\",\n              style: {\n                minHeight: '48px',\n                maxHeight: '120px',\n                lineHeight: '1.5'\n              },\n              rows: 1,\n              disabled: loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendMessage,\n            disabled: !messageText.trim() || loading,\n            className: `w-12 h-12 rounded-xl flex items-center justify-center flex-shrink-0 transition-all ${messageText.trim() && !loading ? 'bg-blue-600 hover:bg-blue-700 text-white shadow-lg hover:shadow-xl' : 'bg-primary-700/50 text-primary-400 cursor-not-allowed'}`,\n            children: /*#__PURE__*/_jsxDEV(Send, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-20 bottom-20 left-0 right-0 overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesContainerRef,\n          onScroll: handleScroll,\n          className: \"h-full overflow-y-auto px-4 py-4 messages-scrollbar flex flex-col\",\n          children: [selectedConversation && ((_messagePagination$se = messagePagination[selectedConversation]) === null || _messagePagination$se === void 0 ? void 0 : _messagePagination$se.loading) && ((_messagePagination$se2 = messagePagination[selectedConversation]) === null || _messagePagination$se2 === void 0 ? void 0 : _messagePagination$se2.hasPrev) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center py-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-6 h-6 border-2 border-primary-600 border-t-blue-500 rounded-full animate-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesTopRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 13\n          }, this), currentConversationMessages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 flex items-center justify-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-primary-300\",\n                children: \"No messages yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 694,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-primary-400 mt-1\",\n                children: \"Send a message to start the conversation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 695,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1 min-h-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1\",\n              children: [currentConversationMessages.map((message, index) => {\n                var _state$currentUser13;\n                // Ensure we're comparing the correct sender ID (handle both string and object)\n                const messageSenderId = typeof message.senderId === 'object' ? message.senderId.id : message.senderId;\n                const isOwn = messageSenderId === ((_state$currentUser13 = state.currentUser) === null || _state$currentUser13 === void 0 ? void 0 : _state$currentUser13.id);\n                const isPending = message.isPending;\n                const pendingStatus = isPending ? message.status : null;\n                const previousMessage = index > 0 ? currentConversationMessages[index - 1] : null;\n                const nextMessage = index < currentConversationMessages.length - 1 ? currentConversationMessages[index + 1] : null;\n                const showDateSeparator = shouldShowDateSeparator(message, previousMessage);\n                const showTimeGroup = shouldShowTimeGroup(message, previousMessage);\n                const showAvatar = shouldShowAvatar(message, nextMessage, isOwn);\n                return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [showDateSeparator && /*#__PURE__*/_jsxDEV(motion.div, {\n                    initial: {\n                      opacity: 0,\n                      y: 10\n                    },\n                    animate: {\n                      opacity: 1,\n                      y: 0\n                    },\n                    className: \"flex justify-center my-6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"bg-primary-800/50 px-3 py-1 rounded-full\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-xs font-medium text-primary-300\",\n                        children: formatDateSeparator(message.timestamp)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 729,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 728,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 723,\n                    columnNumber: 27\n                  }, this), showTimeGroup && !showDateSeparator && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"h-4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 738,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n                    initial: {\n                      opacity: 0,\n                      y: 20\n                    },\n                    animate: {\n                      opacity: 1,\n                      y: 0\n                    },\n                    className: `flex ${isOwn ? 'justify-end' : 'justify-start'} ${showTimeGroup ? 'mt-2' : 'mt-0.5'}`,\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `flex items-end space-x-2 max-w-xs lg:max-w-md ${isOwn ? 'flex-row-reverse space-x-reverse' : ''}`,\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"w-8 h-8 flex-shrink-0\",\n                        children: showAvatar && !isOwn && /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"w-8 h-8 bg-primary-800/50 rounded-full flex items-center justify-center\",\n                          children: selectedConversationUser.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n                            src: selectedConversationUser.avatar,\n                            alt: selectedConversationUser.username,\n                            className: \"w-full h-full object-cover rounded-full\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 755,\n                            columnNumber: 37\n                          }, this) : /*#__PURE__*/_jsxDEV(User, {\n                            className: \"w-4 h-4 text-primary-300\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 761,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 753,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 751,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: `px-4 py-2 rounded-2xl ${isOwn ? `bg-blue-600 text-white ${isPending && pendingStatus === 'sending' ? 'opacity-70' : ''} ${isPending && pendingStatus === 'failed' ? 'bg-red-600' : ''}` : 'bg-primary-700/50 text-primary-100'} ${\n                        // Adjust border radius for grouped messages\n                        !showTimeGroup && !isOwn && !showAvatar ? 'rounded-tl-md' : ''} ${!showTimeGroup && isOwn ? 'rounded-tr-md' : ''}`,\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-sm whitespace-pre-wrap\",\n                          children: message.content\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 780,\n                          columnNumber: 31\n                        }, this), (showAvatar || index === currentConversationMessages.length - 1 || nextMessage && shouldShowTimeGroup(nextMessage, message)) && /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: `flex items-center justify-end mt-1 space-x-1 ${isOwn ? 'text-blue-200' : 'text-primary-400'}`,\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-xs\",\n                            children: formatMessageTime(message.timestamp)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 788,\n                            columnNumber: 35\n                          }, this), isOwn && /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"flex items-center\",\n                            children: isPending ? pendingStatus === 'sending' ? /*#__PURE__*/_jsxDEV(Clock, {\n                              className: \"w-3 h-3 animate-spin\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 795,\n                              columnNumber: 43\n                            }, this) : pendingStatus === 'failed' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"text-xs text-red-200\",\n                              children: \"Failed\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 797,\n                              columnNumber: 43\n                            }, this) : /*#__PURE__*/_jsxDEV(Check, {\n                              className: \"w-3 h-3\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 799,\n                              columnNumber: 43\n                            }, this) : message.read ? /*#__PURE__*/_jsxDEV(CheckCheck, {\n                              className: \"w-3 h-3\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 802,\n                              columnNumber: 41\n                            }, this) : /*#__PURE__*/_jsxDEV(Check, {\n                              className: \"w-3 h-3\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 804,\n                              columnNumber: 41\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 792,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 785,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 768,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 749,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 742,\n                    columnNumber: 25\n                  }, this)]\n                }, message.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 720,\n                  columnNumber: 23\n                }, this);\n              }), typingUsersInConversation.length > 0 && /*#__PURE__*/_jsxDEV(motion.div, {\n                initial: {\n                  opacity: 0,\n                  y: 10\n                },\n                animate: {\n                  opacity: 1,\n                  y: 0\n                },\n                className: \"flex items-end space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-8 h-8 bg-primary-800/50 rounded-full flex items-center justify-center\",\n                  children: /*#__PURE__*/_jsxDEV(User, {\n                    className: \"w-4 h-4 text-primary-300\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 825,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 824,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-primary-700/50 px-4 py-2 rounded-2xl\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex space-x-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"w-2 h-2 bg-primary-400 rounded-full animate-bounce\",\n                      style: {\n                        animationDelay: '0ms'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 829,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"w-2 h-2 bg-primary-400 rounded-full animate-bounce\",\n                      style: {\n                        animationDelay: '150ms'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 830,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"w-2 h-2 bg-primary-400 rounded-full animate-bounce\",\n                      style: {\n                        animationDelay: '300ms'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 831,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 828,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 827,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 819,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: messagesEndRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 837,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Function to load messages for a specific conversation with pagination\n  const loadConversationMessages = async (conversationId, page = 1, isLoadingMore = false) => {\n    const conversation = conversations.find(c => c.id === conversationId);\n    if (!conversation) return;\n\n    // Get other user ID\n    let otherUserId;\n    if (conversation.otherUser) {\n      otherUserId = conversation.otherUser.id;\n    } else {\n      otherUserId = conversation.participants.find(p => {\n        var _state$currentUser14;\n        return p !== ((_state$currentUser14 = state.currentUser) === null || _state$currentUser14 === void 0 ? void 0 : _state$currentUser14.id);\n      }) || '';\n    }\n    if (!otherUserId) return;\n\n    // Set loading state\n    setMessagePagination(prev => ({\n      ...prev,\n      [conversationId]: {\n        ...prev[conversationId],\n        loading: true\n      }\n    }));\n    try {\n      console.log(`📨 Loading messages for conversation ${conversationId}, page ${page}`);\n      const response = await ApiService.getConversationMessages(otherUserId, page, 20);\n      const newMessages = response.messages.map(msg => ({\n        ...msg,\n        id: msg.id || msg._id\n      }));\n      if (isLoadingMore) {\n        // Prepend older messages (they come in reverse chronological order from API)\n        setPaginatedMessages(prev => ({\n          ...prev,\n          [conversationId]: [...newMessages, ...(prev[conversationId] || [])]\n        }));\n      } else {\n        // Initial load - replace messages\n        setPaginatedMessages(prev => ({\n          ...prev,\n          [conversationId]: newMessages\n        }));\n      }\n\n      // Update pagination info\n      setMessagePagination(prev => ({\n        ...prev,\n        [conversationId]: {\n          current: response.pagination.current,\n          pages: response.pagination.pages,\n          total: response.pagination.total,\n          hasNext: response.pagination.hasNext,\n          hasPrev: response.pagination.hasPrev,\n          loading: false,\n          initialLoaded: true\n        }\n      }));\n      console.log(`✅ Loaded ${newMessages.length} messages for conversation ${conversationId}`);\n    } catch (error) {\n      console.error('Error loading conversation messages:', error);\n\n      // Fallback to using state.messages if API fails\n      const fallbackMessages = state.messages.filter(msg => {\n        var _state$currentUser15, _state$currentUser16;\n        const messageSenderId = typeof msg.senderId === 'object' ? msg.senderId.id : msg.senderId;\n        const messageReceiverId = typeof msg.receiverId === 'object' ? msg.receiverId.id : msg.receiverId;\n        return messageSenderId === ((_state$currentUser15 = state.currentUser) === null || _state$currentUser15 === void 0 ? void 0 : _state$currentUser15.id) && messageReceiverId === otherUserId || messageSenderId === otherUserId && messageReceiverId === ((_state$currentUser16 = state.currentUser) === null || _state$currentUser16 === void 0 ? void 0 : _state$currentUser16.id);\n      }).sort((a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime());\n      setPaginatedMessages(prev => ({\n        ...prev,\n        [conversationId]: fallbackMessages\n      }));\n      setMessagePagination(prev => ({\n        ...prev,\n        [conversationId]: {\n          current: 1,\n          pages: 1,\n          total: fallbackMessages.length,\n          hasNext: false,\n          hasPrev: false,\n          loading: false,\n          initialLoaded: true\n        }\n      }));\n    }\n  };\n\n  // Function to load more messages when scrolling up\n  const loadMoreMessages = async conversationId => {\n    const pagination = messagePagination[conversationId];\n    if (!pagination || pagination.loading || !pagination.hasPrev) return;\n    const nextPage = pagination.current + 1;\n    await loadConversationMessages(conversationId, nextPage, true);\n  };\n\n  // Infinite scroll handler\n  const handleScroll = e => {\n    const container = e.currentTarget;\n    const {\n      scrollTop,\n      scrollHeight,\n      clientHeight\n    } = container;\n\n    // Load more messages when scrolled near the top\n    if (scrollTop < 100 && selectedConversation) {\n      loadMoreMessages(selectedConversation);\n    }\n  };\n\n  // Auto-scroll to bottom when new messages arrive (but preserve scroll position when loading more)\n  const scrollToBottom = (force = false) => {\n    if (messagesEndRef.current) {\n      const container = messagesContainerRef.current;\n      if (!container) return;\n      const {\n        scrollTop,\n        scrollHeight,\n        clientHeight\n      } = container;\n      const isNearBottom = scrollHeight - scrollTop - clientHeight < 100;\n\n      // Only auto-scroll if user is near bottom or it's forced\n      if (force || isNearBottom) {\n        messagesEndRef.current.scrollIntoView({\n          behavior: 'smooth',\n          block: 'end',\n          inline: 'nearest'\n        });\n      }\n    }\n  };\n\n  // Preserve scroll position when loading more messages\n  const preserveScrollPosition = () => {\n    if (messagesContainerRef.current) {\n      const container = messagesContainerRef.current;\n      const newScrollHeight = container.scrollHeight;\n      const heightDifference = newScrollHeight - lastScrollHeight.current;\n      if (heightDifference > 0) {\n        container.scrollTop += heightDifference;\n      }\n      lastScrollHeight.current = newScrollHeight;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-full flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lg:hidden w-full h-full\",\n      children: selectedConversation ? renderChatInterface() : renderConversationsList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1004,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hidden lg:flex w-full h-full\",\n      children: [renderConversationsList(), renderChatInterface()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1009,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1002,\n    columnNumber: 5\n  }, this);\n}\n_s(MessagesView, \"cBouClsruWZk+HrCKD0wOXxW8m4=\", false, function () {\n  return [useApp];\n});\n_c = MessagesView;\nvar _c;\n$RefreshReg$(_c, \"MessagesView\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","motion","MessageCircle","Search","Send","User","ArrowLeft","Check","CheckCheck","Phone","Video","Info","Clock","useApp","ApiService","jsxDEV","_jsxDEV","Fragment","_Fragment","MessagesView","_s","_state$currentUser5","_state$currentUser7","_state$currentUser0","_state$currentUser10","state","sendMessage","markMessagesAsRead","selectedConversation","setSelectedConversation","messageText","setMessageText","searchTerm","setSearchTerm","loading","setLoading","typingUsers","setTypingUsers","isTyping","setIsTyping","pendingMessages","setPendingMessages","initialLoad","setInitialLoad","paginatedMessages","setPaginatedMessages","messagePagination","setMessagePagination","messagesEndRef","messagesTopRef","messagesContainerRef","typingTimeoutRef","textareaRef","lastScrollHeight","messages","length","conversations","timeoutId","setTimeout","scrollToBottom","clearTimeout","interval","setInterval","now","Date","prev","filter","typing","timestamp","clearInterval","_state$conversations","_state$messages","_state$users","_state$conversations2","console","log","conversationsCount","messagesCount","usersCount","users","slice","map","c","_c$lastMessage","_c$lastMessage$conten","id","participants","otherUser","username","lastMessage","content","substring","sort","a","b","_b$lastMessage","_a$lastMessage","updatedAt","getTime","convMap","Map","forEach","message","_state$currentUser","_state$currentUser2","otherUserId","senderId","currentUser","receiverId","conversationId","join","has","_state$currentUser3","set","unreadCount","existing","get","conversation","unreadMessages","msg","_state$currentUser4","read","Array","from","values","filteredConversations","_otherUser$username","find","p","_state$currentUser6","u","toLowerCase","includes","currentConversationMessages","_state$currentUser8","conversationPendingMessages","hasRealCounterpart","some","realMsg","_state$currentUser9","realMsgSenderId","Math","abs","isPending","allMessages","selectedConversationUser","_state$currentUser1","handleSendMessage","trim","tempMessage","toISOString","status","current","style","height","error","handleKeyPress","e","key","shiftKey","preventDefault","handleTyping","value","min","scrollHeight","handleConversationSelect","pagination","initialLoaded","loadConversationMessages","formatTime","date","diffInHours","toLocaleTimeString","hour","minute","toLocaleDateString","weekday","month","day","formatMessageTime","formatDateSeparator","today","getFullYear","getMonth","getDate","yesterday","setDate","messageDate","year","undefined","shouldShowDateSeparator","currentMessage","previousMessage","currentDate","previousDate","toDateString","shouldShowTimeGroup","currentSenderId","previousSenderId","currentTime","previousTime","timeDiff","shouldShowAvatar","nextMessage","isOwn","nextSenderId","renderConversationsList","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","target","_state$currentUser12","_state$currentUser11","isSelected","div","whileHover","scale","whileTap","onClick","avatar","src","alt","renderChatInterface","_messagePagination$se","_messagePagination$se2","typingUsersInConversation","t","ref","onKeyPress","minHeight","maxHeight","lineHeight","rows","disabled","onScroll","handleScroll","hasPrev","index","_state$currentUser13","messageSenderId","pendingStatus","showDateSeparator","showTimeGroup","showAvatar","initial","opacity","y","animate","animationDelay","page","isLoadingMore","_state$currentUser14","response","getConversationMessages","newMessages","_id","pages","total","hasNext","fallbackMessages","_state$currentUser15","_state$currentUser16","messageReceiverId","loadMoreMessages","nextPage","container","currentTarget","scrollTop","clientHeight","force","isNearBottom","scrollIntoView","behavior","block","inline","preserveScrollPosition","newScrollHeight","heightDifference","_c","$RefreshReg$"],"sources":["C:/Users/thato/Downloads/car-app/src/components/messages/MessagesView.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  MessageCircle, \n  Search, \n  Send, \n  User, \n  ArrowLeft, \n  MoreVertical,\n  Check,\n  CheckCheck,\n  Phone,\n  Video,\n  Info,\n  Clock\n} from 'lucide-react';\nimport { useApp } from '../../context/AppContext.tsx';\nimport { Message, User as UserType, Conversation } from '../../types/index.ts';\nimport ApiService from '../../services/apiService.ts';\n\ninterface TypingIndicator {\n  userId: string;\n  conversationId: string;\n  timestamp: number;\n}\n\ninterface PendingMessage {\n  id: string;\n  content: string;\n  timestamp: string;\n  senderId: string;\n  receiverId: string;\n  status: 'sending' | 'sent' | 'failed';\n}\n\nexport function MessagesView() {\n  const { state, sendMessage, markMessagesAsRead } = useApp();\n  const [selectedConversation, setSelectedConversation] = useState<string | null>(null);\n  const [messageText, setMessageText] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [typingUsers, setTypingUsers] = useState<TypingIndicator[]>([]);\n  const [isTyping, setIsTyping] = useState(false);\n  const [pendingMessages, setPendingMessages] = useState<PendingMessage[]>([]);\n  const [initialLoad, setInitialLoad] = useState(true);\n  \n  // Message pagination state\n  const [paginatedMessages, setPaginatedMessages] = useState<{ [conversationId: string]: Message[] }>({});\n  const [messagePagination, setMessagePagination] = useState<{ [conversationId: string]: {\n    current: number;\n    pages: number;\n    total: number;\n    hasNext: boolean;\n    hasPrev: boolean;\n    loading: boolean;\n    initialLoaded: boolean;\n  } }>({});\n  \n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const messagesTopRef = useRef<HTMLDivElement>(null);\n  const messagesContainerRef = useRef<HTMLDivElement>(null);\n  const typingTimeoutRef = useRef<NodeJS.Timeout>();\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  const lastScrollHeight = useRef<number>(0);\n\n  // Track when messages/conversations are loaded for the first time\n  useEffect(() => {\n    if ((state.messages && state.messages.length > 0) || (state.conversations && state.conversations.length > 0)) {\n      setInitialLoad(false);\n    }\n  }, [state.messages, state.conversations]);\n\n  // Auto-scroll to bottom when new messages arrive\n  useEffect(() => {\n    // Use setTimeout to ensure DOM has been updated before scrolling\n    const timeoutId = setTimeout(() => {\n      scrollToBottom();\n    }, 100);\n\n    return () => clearTimeout(timeoutId);\n  }, [state.messages, selectedConversation, pendingMessages]);\n\n  // Scroll to bottom when conversation is first selected\n  useEffect(() => {\n    if (selectedConversation) {\n      const timeoutId = setTimeout(() => {\n        scrollToBottom();\n      }, 200); // Slightly longer delay for conversation switch\n\n      return () => clearTimeout(timeoutId);\n    }\n  }, [selectedConversation]);\n\n  // Clean up typing indicators that are too old\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = Date.now();\n      setTypingUsers(prev => prev.filter(typing => now - typing.timestamp < 3000));\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Debug logging for conversations\n  useEffect(() => {\n    console.log('📞 MessagesView Debug:', {\n      conversationsCount: state.conversations?.length || 0,\n      messagesCount: state.messages?.length || 0,\n      usersCount: state.users?.length || 0,\n      conversations: state.conversations?.slice(0, 3).map(c => ({\n        id: c.id,\n        participants: c.participants,\n        otherUser: (c as any).otherUser ? {\n          id: (c as any).otherUser.id,\n          username: (c as any).otherUser.username\n        } : null,\n        lastMessage: c.lastMessage?.content?.substring(0, 30)\n      }))\n    });\n  }, [state.conversations, state.messages, state.users]);\n\n  // Use conversations from state (loaded from API) with fallback to creating from messages\n  const conversations = useMemo(() => {\n    // If we have conversations from the API, use those\n    if (state.conversations && state.conversations.length > 0) {\n      console.log('📞 Using conversations from API:', state.conversations.length);\n      return state.conversations.sort((a, b) => \n        new Date(b.updatedAt || b.lastMessage?.timestamp || 0).getTime() - \n        new Date(a.updatedAt || a.lastMessage?.timestamp || 0).getTime()\n      );\n    }\n\n    // Fallback: Create conversations from messages if API conversations aren't available\n    console.log('📞 Fallback: Creating conversations from messages');\n    const convMap = new Map<string, Conversation>();\n    \n    state.messages.forEach(message => {\n      const otherUserId = message.senderId === state.currentUser?.id \n        ? message.receiverId \n        : message.senderId;\n      \n      const conversationId = [state.currentUser?.id, otherUserId].sort().join('-');\n      \n      if (!convMap.has(conversationId)) {\n        convMap.set(conversationId, {\n          id: conversationId,\n          participants: [state.currentUser?.id!, otherUserId],\n          lastMessage: message,\n          unreadCount: 0,\n          updatedAt: message.timestamp\n        });\n      } else {\n        const existing = convMap.get(conversationId)!;\n        if (new Date(message.timestamp) > new Date(existing.lastMessage.timestamp)) {\n          existing.lastMessage = message;\n          existing.updatedAt = message.timestamp;\n        }\n      }\n    });\n\n    // Calculate unread counts\n    convMap.forEach(conversation => {\n      const unreadMessages = state.messages.filter(msg => \n        msg.receiverId === state.currentUser?.id &&\n        !msg.read &&\n        (msg.senderId === conversation.participants[0] || msg.senderId === conversation.participants[1])\n      );\n      conversation.unreadCount = unreadMessages.length;\n    });\n\n    return Array.from(convMap.values()).sort((a, b) => \n      new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime()\n    );\n  }, [state.conversations, state.messages, state.currentUser?.id, state.users]);\n\n  // Filter conversations based on search\n  const filteredConversations = useMemo(() => {\n    if (!searchTerm) return conversations;\n    \n    return conversations.filter(conversation => {\n      // For API conversations, use embedded otherUser data; for fallback conversations, find in state.users\n      const otherUser = (conversation as any).otherUser || (() => {\n        const otherUserId = conversation.participants.find(p => p !== state.currentUser?.id);\n        return state.users.find(u => u.id === otherUserId);\n      })();\n      \n      return otherUser?.username?.toLowerCase().includes(searchTerm.toLowerCase());\n    });\n  }, [conversations, searchTerm, state.users, state.currentUser?.id]);\n\n  // Get current conversation messages with pending messages\n  const currentConversationMessages = useMemo(() => {\n    if (!selectedConversation) return [];\n    \n    // Get paginated messages for this conversation\n    const messages = paginatedMessages[selectedConversation] || [];\n    \n    // Get other user ID for pending messages\n    const conversation = conversations.find(c => c.id === selectedConversation);\n    if (!conversation) return messages;\n    \n    let otherUserId: string;\n    if ((conversation as any).otherUser) {\n      otherUserId = (conversation as any).otherUser.id;\n    } else {\n      otherUserId = conversation.participants.find(p => p !== state.currentUser?.id) || '';\n    }\n    \n    // Add pending messages for this conversation\n    const conversationPendingMessages = pendingMessages\n      .filter(msg => msg.receiverId === otherUserId)\n      .filter(msg => {\n        // Don't show pending messages if a real message with similar content and timestamp exists\n        const hasRealCounterpart = messages.some(realMsg => {\n          const realMsgSenderId = typeof realMsg.senderId === 'object' ? (realMsg.senderId as any).id : realMsg.senderId;\n          return realMsgSenderId === state.currentUser?.id && \n                 realMsg.content === msg.content &&\n                 Math.abs(new Date(realMsg.timestamp).getTime() - new Date(msg.timestamp).getTime()) < 5000;\n        });\n        return !hasRealCounterpart;\n      })\n      .map(msg => ({\n        ...msg,\n        read: false,\n        isPending: true\n      }));\n    \n    // Combine and sort all messages\n    const allMessages = [...messages, ...conversationPendingMessages]\n      .sort((a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime());\n    \n    return allMessages;\n  }, [selectedConversation, paginatedMessages, pendingMessages, conversations, state.currentUser?.id]);\n\n  // Get other user in selected conversation\n  const selectedConversationUser = useMemo(() => {\n    if (!selectedConversation) return null;\n    \n    const conversation = conversations.find(c => c.id === selectedConversation);\n    if (!conversation) return null;\n    \n    // For API conversations, use embedded otherUser data; for fallback conversations, find in state.users\n    const otherUser = (conversation as any).otherUser || (() => {\n      const otherUserId = conversation.participants.find(p => p !== state.currentUser?.id);\n      return state.users.find(u => u.id === otherUserId);\n    })();\n    \n    return otherUser || null;\n  }, [selectedConversation, conversations, state.users, state.currentUser?.id]);\n\n  const handleSendMessage = async () => {\n    if (!messageText.trim() || !selectedConversationUser || loading) return;\n\n    const tempMessage: PendingMessage = {\n      id: `temp-${Date.now()}`,\n      content: messageText.trim(),\n      timestamp: new Date().toISOString(),\n      senderId: state.currentUser!.id,\n      receiverId: selectedConversationUser.id,\n      status: 'sending'\n    };\n\n    // Add to pending messages immediately\n    setPendingMessages(prev => [...prev, tempMessage]);\n    setMessageText('');\n    setIsTyping(false);\n\n    // Auto-resize textarea back to single line\n    if (textareaRef.current) {\n      textareaRef.current.style.height = '48px';\n    }\n\n    setLoading(true);\n    try {\n      await sendMessage({\n        senderId: state.currentUser!.id,\n        receiverId: selectedConversationUser.id,\n        content: tempMessage.content\n      });\n      \n      // Remove pending message immediately once sent successfully\n      // The real message will appear through state.messages and our filter will prevent duplicates\n      setPendingMessages(prev => prev.filter(msg => msg.id !== tempMessage.id));\n\n    } catch (error) {\n      console.error('Error sending message:', error);\n      // Mark as failed\n      setPendingMessages(prev => \n        prev.map(msg => \n          msg.id === tempMessage.id \n            ? { ...msg, status: 'failed' }\n            : msg\n        )\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const handleTyping = (value: string) => {\n    setMessageText(value);\n    \n    // Auto-resize textarea\n    if (textareaRef.current) {\n      textareaRef.current.style.height = '40px';\n      textareaRef.current.style.height = `${Math.min(textareaRef.current.scrollHeight, 120)}px`;\n    }\n    \n    if (value.trim() && !isTyping) {\n      setIsTyping(true);\n      // In a real app, you'd emit typing indicator to other users via WebSocket\n    }\n\n    // Clear typing indicator after 2 seconds of no typing\n    if (typingTimeoutRef.current) {\n      clearTimeout(typingTimeoutRef.current);\n    }\n    \n    typingTimeoutRef.current = setTimeout(() => {\n      setIsTyping(false);\n    }, 2000);\n  };\n\n  const handleConversationSelect = async (conversationId: string) => {\n    const conversation = conversations.find(c => c.id === conversationId);\n    console.log('🔍 Selected conversation:', {\n      id: conversationId,\n      conversation: conversation ? {\n        id: conversation.id,\n        participants: conversation.participants,\n        otherUser: (conversation as any).otherUser ? {\n          id: (conversation as any).otherUser.id,\n          username: (conversation as any).otherUser.username\n        } : null\n      } : 'NOT FOUND'\n    });\n    \n    setSelectedConversation(conversationId);\n    \n    // Load messages for this conversation if not already loaded\n    const pagination = messagePagination[conversationId];\n    if (!pagination || !pagination.initialLoaded) {\n      await loadConversationMessages(conversationId, 1, false);\n    }\n    \n    // Scroll to bottom after a short delay to ensure messages are rendered\n    setTimeout(() => {\n      scrollToBottom(true);\n    }, 100);\n    \n    // Mark messages as read\n    if (conversation && conversation.unreadCount > 0) {\n      try {\n        await markMessagesAsRead(conversationId);\n      } catch (error) {\n        console.error('Error marking messages as read:', error);\n      }\n    }\n  };\n\n  const formatTime = (timestamp: string) => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffInHours = (now.getTime() - date.getTime()) / (1000 * 60 * 60);\n    \n    if (diffInHours < 24) {\n      return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    } else if (diffInHours < 168) { // 7 days\n      return date.toLocaleDateString([], { weekday: 'short' });\n    } else {\n      return date.toLocaleDateString([], { month: 'short', day: 'numeric' });\n    }\n  };\n\n  const formatMessageTime = (timestamp: string) => {\n    return new Date(timestamp).toLocaleTimeString([], { \n      hour: '2-digit', \n      minute: '2-digit' \n    });\n  };\n\n  const formatDateSeparator = (timestamp: string) => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n    const messageDate = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n    \n    if (messageDate.getTime() === today.getTime()) {\n      return 'Today';\n    } else if (messageDate.getTime() === yesterday.getTime()) {\n      return 'Yesterday';\n    } else if (now.getTime() - messageDate.getTime() < 7 * 24 * 60 * 60 * 1000) {\n      return date.toLocaleDateString([], { weekday: 'long' });\n    } else {\n      return date.toLocaleDateString([], { \n        month: 'long', \n        day: 'numeric',\n        year: date.getFullYear() !== now.getFullYear() ? 'numeric' : undefined\n      });\n    }\n  };\n\n  const shouldShowDateSeparator = (currentMessage: any, previousMessage: any) => {\n    if (!previousMessage) return true;\n    \n    const currentDate = new Date(currentMessage.timestamp);\n    const previousDate = new Date(previousMessage.timestamp);\n    \n    return currentDate.toDateString() !== previousDate.toDateString();\n  };\n\n  const shouldShowTimeGroup = (currentMessage: any, previousMessage: any) => {\n    if (!previousMessage) return true;\n    \n    const currentSenderId = typeof currentMessage.senderId === 'object' \n      ? currentMessage.senderId.id \n      : currentMessage.senderId;\n    const previousSenderId = typeof previousMessage.senderId === 'object' \n      ? previousMessage.senderId.id \n      : previousMessage.senderId;\n    \n    // Different senders\n    if (currentSenderId !== previousSenderId) return true;\n    \n    // Check if messages are more than 1 minute apart\n    const currentTime = new Date(currentMessage.timestamp);\n    const previousTime = new Date(previousMessage.timestamp);\n    const timeDiff = (currentTime.getTime() - previousTime.getTime()) / (1000 * 60); // minutes\n    \n    return timeDiff > 1;\n  };\n\n  const shouldShowAvatar = (currentMessage: any, nextMessage: any, isOwn: boolean) => {\n    if (isOwn) return false; // Don't show avatars for own messages\n    if (!nextMessage) return true; // Always show for last message in conversation\n    \n    const currentSenderId = typeof currentMessage.senderId === 'object' \n      ? currentMessage.senderId.id \n      : currentMessage.senderId;\n    const nextSenderId = typeof nextMessage.senderId === 'object' \n      ? nextMessage.senderId.id \n      : nextMessage.senderId;\n    \n    // Show avatar if next message is from different sender or if time group changes\n    return currentSenderId !== nextSenderId || shouldShowTimeGroup(nextMessage, currentMessage);\n  };\n\n  const renderConversationsList = () => (\n    <div className=\"w-full lg:w-96 border-r border-primary-700/30 flex flex-col\">\n      {/* Header */}\n      <div className=\"p-4 border-b border-primary-700/30\">\n        <h2 className=\"text-xl font-bold text-primary-100 mb-4\">Messages</h2>\n        \n        {/* Search */}\n        <div className=\"relative\">\n          <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-primary-400\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search conversations...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"input-field pl-10 text-sm\"\n          />\n        </div>\n      </div>\n\n      {/* Conversations List */}\n      <div className=\"flex-1 overflow-y-auto\">\n        {initialLoad && (!state.conversations || state.conversations.length === 0) ? (\n          <div className=\"p-4 text-center\">\n            <div className=\"w-12 h-12 mx-auto mb-4 relative\">\n              <div className=\"w-12 h-12 border-2 border-primary-600 border-t-blue-500 rounded-full animate-spin\"></div>\n            </div>\n            <p className=\"text-primary-300\">Loading conversations...</p>\n            <p className=\"text-sm text-primary-400 mt-1\">\n              Please wait while we load your messages\n            </p>\n          </div>\n        ) : !state.conversations || state.conversations.length === 0 ? (\n          <div className=\"p-4 text-center\">\n            <MessageCircle className=\"w-12 h-12 mx-auto mb-4 text-primary-400\" />\n            <p className=\"text-primary-300\">No conversations yet</p>\n            <p className=\"text-sm text-primary-400 mt-1\">\n              Start trading to begin messaging with other users\n            </p>\n          </div>\n        ) : filteredConversations.length === 0 ? (\n          <div className=\"p-4 text-center\">\n            <MessageCircle className=\"w-12 h-12 mx-auto mb-4 text-primary-400\" />\n            <p className=\"text-primary-300\">No conversations match your search</p>\n            <p className=\"text-sm text-primary-400 mt-1\">\n              Try adjusting your search terms\n            </p>\n          </div>\n        ) : (\n          <div className=\"space-y-1 p-2\">\n            {filteredConversations.map((conversation) => {\n              // For API conversations, use embedded otherUser data; for fallback conversations, find in state.users\n              const otherUser = (conversation as any).otherUser || (() => {\n                const otherUserId = conversation.participants.find(p => p !== state.currentUser?.id);\n                return state.users.find(u => u.id === otherUserId);\n              })();\n              const isSelected = selectedConversation === conversation.id;\n              \n              return (\n                <motion.div\n                  key={conversation.id}\n                  whileHover={{ scale: 1.02 }}\n                  whileTap={{ scale: 0.98 }}\n                  onClick={() => handleConversationSelect(conversation.id)}\n                  className={`p-3 rounded-lg cursor-pointer transition-all ${\n                    isSelected\n                      ? 'bg-primary-600/30 border border-primary-500/50'\n                      : 'hover:bg-primary-800/30'\n                  }`}\n                >\n                  <div className=\"flex items-center space-x-3\">\n                    {/* Avatar */}\n                    <div className=\"relative\">\n                      <div className=\"w-12 h-12 bg-primary-800/50 rounded-full flex items-center justify-center\">\n                        {otherUser?.avatar ? (\n                          <img\n                            src={otherUser.avatar}\n                            alt={otherUser.username}\n                            className=\"w-full h-full object-cover rounded-full\"\n                          />\n                        ) : (\n                          <User className=\"w-6 h-6 text-primary-300\" />\n                        )}\n                      </div>\n                      {/* Online indicator could go here */}\n                    </div>\n                    \n                    {/* Content */}\n                    <div className=\"flex-1 min-w-0\">\n                      <div className=\"flex items-center justify-between\">\n                        <h4 className=\"font-medium text-primary-100 truncate\">\n                          @{otherUser?.username || 'Unknown'}\n                        </h4>\n                        <span className=\"text-xs text-primary-400\">\n                          {formatTime(conversation.lastMessage.timestamp)}\n                        </span>\n                      </div>\n                      \n                      <div className=\"flex items-center justify-between mt-1\">\n                        <p className=\"text-sm text-primary-300 truncate\">\n                          {conversation.lastMessage.senderId === state.currentUser?.id && 'You: '}\n                          {conversation.lastMessage.content}\n                        </p>\n                        {conversation.unreadCount > 0 && (\n                          <span className=\"bg-blue-500 text-white text-xs px-2 py-1 rounded-full min-w-[20px] text-center\">\n                            {conversation.unreadCount > 99 ? '99+' : conversation.unreadCount}\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </motion.div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n\n  const renderChatInterface = () => {\n    if (!selectedConversation || !selectedConversationUser) {\n      return (\n        <div className=\"flex-1 flex items-center justify-center\">\n          <div className=\"text-center\">\n            <MessageCircle className=\"w-16 h-16 mx-auto mb-4 text-primary-400\" />\n            <h3 className=\"text-xl font-semibold text-primary-100 mb-2\">Select a conversation</h3>\n            <p className=\"text-primary-300\">Choose a conversation to start messaging</p>\n          </div>\n        </div>\n      );\n    }\n\n    const typingUsersInConversation = typingUsers.filter(t => t.conversationId === selectedConversation);\n\n    return (\n      <div className=\"flex-1 relative h-full\">\n        {/* Chat Header - Fixed at top */}\n        <div className=\"absolute top-0 left-0 right-0 p-4 border-b border-primary-700/30 bg-primary-900/95 backdrop-blur-sm z-30\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <button\n                onClick={() => setSelectedConversation(null)}\n                className=\"lg:hidden p-2 hover:bg-primary-800/50 rounded-full transition-colors\"\n              >\n                <ArrowLeft className=\"w-5 h-5 text-primary-300\" />\n              </button>\n              \n              <div className=\"w-10 h-10 bg-primary-800/50 rounded-full flex items-center justify-center\">\n                {selectedConversationUser.avatar ? (\n                  <img\n                    src={selectedConversationUser.avatar}\n                    alt={selectedConversationUser.username}\n                    className=\"w-full h-full object-cover rounded-full\"\n                  />\n                ) : (\n                  <User className=\"w-5 h-5 text-primary-300\" />\n                )}\n              </div>\n              \n              <div>\n                <h3 className=\"font-semibold text-primary-100\">\n                  @{selectedConversationUser.username}\n                </h3>\n                {typingUsersInConversation.length > 0 && (\n                  <p className=\"text-sm text-blue-400\">typing...</p>\n                )}\n              </div>\n            </div>\n            \n            <div className=\"flex items-center space-x-2\">\n              <button className=\"p-2 hover:bg-primary-800/50 rounded-full transition-colors\">\n                <Phone className=\"w-5 h-5 text-primary-300\" />\n              </button>\n              <button className=\"p-2 hover:bg-primary-800/50 rounded-full transition-colors\">\n                <Video className=\"w-5 h-5 text-primary-300\" />\n              </button>\n              <button className=\"p-2 hover:bg-primary-800/50 rounded-full transition-colors\">\n                <Info className=\"w-5 h-5 text-primary-300\" />\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Message Input - Fixed at bottom */}\n        <div className=\"absolute bottom-0 left-0 right-0 p-4 border-t border-primary-700/30 bg-primary-900/95 backdrop-blur-sm z-30\">\n          <div className=\"flex items-center space-x-3 max-w-4xl mx-auto\">\n            <div className=\"flex-1\">\n              <textarea\n                ref={textareaRef}\n                value={messageText}\n                onChange={(e) => handleTyping(e.target.value)}\n                onKeyPress={handleKeyPress}\n                placeholder=\"Type a message...\"\n                className=\"w-full px-4 py-3 bg-primary-800/50 border border-primary-600/30 rounded-2xl text-primary-100 placeholder-primary-400 resize-none focus:outline-none focus:ring-2 focus:ring-blue-500/50 focus:border-transparent transition-all scrollbar-none\"\n                style={{ \n                  minHeight: '48px',\n                  maxHeight: '120px',\n                  lineHeight: '1.5'\n                }}\n                rows={1}\n                disabled={loading}\n              />\n            </div>\n            <button\n              onClick={handleSendMessage}\n              disabled={!messageText.trim() || loading}\n              className={`w-12 h-12 rounded-xl flex items-center justify-center flex-shrink-0 transition-all ${\n                messageText.trim() && !loading\n                  ? 'bg-blue-600 hover:bg-blue-700 text-white shadow-lg hover:shadow-xl'\n                  : 'bg-primary-700/50 text-primary-400 cursor-not-allowed'\n              }`}\n            >\n              <Send className=\"w-5 h-5\" />\n            </button>\n          </div>\n        </div>\n\n        {/* Messages Container - Between header and input */}\n        <div className=\"absolute top-20 bottom-20 left-0 right-0 overflow-hidden\">\n          <div \n            ref={messagesContainerRef}\n            onScroll={handleScroll}\n            className=\"h-full overflow-y-auto px-4 py-4 messages-scrollbar flex flex-col\"\n          >\n            {/* Loading indicator for pagination */}\n            {selectedConversation && messagePagination[selectedConversation]?.loading && messagePagination[selectedConversation]?.hasPrev && (\n              <div className=\"flex justify-center py-2\">\n                <div className=\"w-6 h-6 border-2 border-primary-600 border-t-blue-500 rounded-full animate-spin\"></div>\n              </div>\n            )}\n            \n            {/* Top ref for infinite scroll */}\n            <div ref={messagesTopRef} />\n            \n            {currentConversationMessages.length === 0 ? (\n              <div className=\"flex-1 flex items-center justify-center\">\n                <div className=\"text-center\">\n                  <p className=\"text-primary-300\">No messages yet</p>\n                  <p className=\"text-sm text-primary-400 mt-1\">Send a message to start the conversation</p>\n                </div>\n              </div>\n            ) : (\n              <>\n                {/* Spacer to push messages to bottom when there are few messages */}\n                <div className=\"flex-1 min-h-0\"></div>\n                \n                {/* Messages */}\n                <div className=\"space-y-1\">\n                  {currentConversationMessages.map((message, index) => {\n                    // Ensure we're comparing the correct sender ID (handle both string and object)\n                    const messageSenderId = typeof message.senderId === 'object' ? (message.senderId as any).id : message.senderId;\n                    const isOwn = messageSenderId === state.currentUser?.id;\n                    const isPending = (message as any).isPending;\n                    const pendingStatus = isPending ? (message as any).status : null;\n                    \n                    const previousMessage = index > 0 ? currentConversationMessages[index - 1] : null;\n                    const nextMessage = index < currentConversationMessages.length - 1 ? currentConversationMessages[index + 1] : null;\n                    \n                    const showDateSeparator = shouldShowDateSeparator(message, previousMessage);\n                    const showTimeGroup = shouldShowTimeGroup(message, previousMessage);\n                    const showAvatar = shouldShowAvatar(message, nextMessage, isOwn);\n                    \n                    return (\n                      <React.Fragment key={message.id}>\n                        {/* Date Separator */}\n                        {showDateSeparator && (\n                          <motion.div\n                            initial={{ opacity: 0, y: 10 }}\n                            animate={{ opacity: 1, y: 0 }}\n                            className=\"flex justify-center my-6\"\n                          >\n                            <div className=\"bg-primary-800/50 px-3 py-1 rounded-full\">\n                              <span className=\"text-xs font-medium text-primary-300\">\n                                {formatDateSeparator(message.timestamp)}\n                              </span>\n                            </div>\n                          </motion.div>\n                        )}\n                        \n                        {/* Time Group Separator */}\n                        {showTimeGroup && !showDateSeparator && (\n                          <div className=\"h-4\"></div>\n                        )}\n                        \n                        {/* Message */}\n                        <motion.div\n                          initial={{ opacity: 0, y: 20 }}\n                          animate={{ opacity: 1, y: 0 }}\n                          className={`flex ${isOwn ? 'justify-end' : 'justify-start'} ${\n                            showTimeGroup ? 'mt-2' : 'mt-0.5'\n                          }`}\n                        >\n                          <div className={`flex items-end space-x-2 max-w-xs lg:max-w-md ${isOwn ? 'flex-row-reverse space-x-reverse' : ''}`}>\n                            {/* Avatar */}\n                            <div className=\"w-8 h-8 flex-shrink-0\">\n                              {showAvatar && !isOwn && (\n                                <div className=\"w-8 h-8 bg-primary-800/50 rounded-full flex items-center justify-center\">\n                                  {selectedConversationUser.avatar ? (\n                                    <img\n                                      src={selectedConversationUser.avatar}\n                                      alt={selectedConversationUser.username}\n                                      className=\"w-full h-full object-cover rounded-full\"\n                                    />\n                                  ) : (\n                                    <User className=\"w-4 h-4 text-primary-300\" />\n                                  )}\n                                </div>\n                              )}\n                            </div>\n                            \n                            {/* Message Bubble */}\n                            <div\n                              className={`px-4 py-2 rounded-2xl ${\n                                isOwn\n                                  ? `bg-blue-600 text-white ${isPending && pendingStatus === 'sending' ? 'opacity-70' : ''} ${isPending && pendingStatus === 'failed' ? 'bg-red-600' : ''}`\n                                  : 'bg-primary-700/50 text-primary-100'\n                              } ${\n                                // Adjust border radius for grouped messages\n                                !showTimeGroup && !isOwn && !showAvatar ? 'rounded-tl-md' : ''\n                              } ${\n                                !showTimeGroup && isOwn ? 'rounded-tr-md' : ''\n                              }`}\n                            >\n                              <p className=\"text-sm whitespace-pre-wrap\">{message.content}</p>\n                              \n                              {/* Message metadata - only show on last message in time group */}\n                              {(showAvatar || index === currentConversationMessages.length - 1 || \n                                (nextMessage && shouldShowTimeGroup(nextMessage, message))) && (\n                                <div className={`flex items-center justify-end mt-1 space-x-1 ${\n                                  isOwn ? 'text-blue-200' : 'text-primary-400'\n                                }`}>\n                                  <span className=\"text-xs\">\n                                    {formatMessageTime(message.timestamp)}\n                                  </span>\n                                  {isOwn && (\n                                    <div className=\"flex items-center\">\n                                      {isPending ? (\n                                        pendingStatus === 'sending' ? (\n                                          <Clock className=\"w-3 h-3 animate-spin\" />\n                                        ) : pendingStatus === 'failed' ? (\n                                          <span className=\"text-xs text-red-200\">Failed</span>\n                                        ) : (\n                                          <Check className=\"w-3 h-3\" />\n                                        )\n                                      ) : message.read ? (\n                                        <CheckCheck className=\"w-3 h-3\" />\n                                      ) : (\n                                        <Check className=\"w-3 h-3\" />\n                                      )}\n                                    </div>\n                                  )}\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        </motion.div>\n                      </React.Fragment>\n                    );\n                  })}\n                  \n                  {/* Typing Indicator */}\n                  {typingUsersInConversation.length > 0 && (\n                    <motion.div\n                      initial={{ opacity: 0, y: 10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      className=\"flex items-end space-x-2\"\n                    >\n                      <div className=\"w-8 h-8 bg-primary-800/50 rounded-full flex items-center justify-center\">\n                        <User className=\"w-4 h-4 text-primary-300\" />\n                      </div>\n                      <div className=\"bg-primary-700/50 px-4 py-2 rounded-2xl\">\n                        <div className=\"flex space-x-1\">\n                          <div className=\"w-2 h-2 bg-primary-400 rounded-full animate-bounce\" style={{ animationDelay: '0ms' }} />\n                          <div className=\"w-2 h-2 bg-primary-400 rounded-full animate-bounce\" style={{ animationDelay: '150ms' }} />\n                          <div className=\"w-2 h-2 bg-primary-400 rounded-full animate-bounce\" style={{ animationDelay: '300ms' }} />\n                        </div>\n                      </div>\n                    </motion.div>\n                  )}\n                  \n                  <div ref={messagesEndRef} />\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  // Function to load messages for a specific conversation with pagination\n  const loadConversationMessages = async (conversationId: string, page: number = 1, isLoadingMore: boolean = false) => {\n    const conversation = conversations.find(c => c.id === conversationId);\n    if (!conversation) return;\n\n    // Get other user ID\n    let otherUserId: string;\n    if ((conversation as any).otherUser) {\n      otherUserId = (conversation as any).otherUser.id;\n    } else {\n      otherUserId = conversation.participants.find(p => p !== state.currentUser?.id) || '';\n    }\n\n    if (!otherUserId) return;\n\n    // Set loading state\n    setMessagePagination(prev => ({\n      ...prev,\n      [conversationId]: {\n        ...prev[conversationId],\n        loading: true\n      }\n    }));\n\n    try {\n      console.log(`📨 Loading messages for conversation ${conversationId}, page ${page}`);\n      const response = await ApiService.getConversationMessages(otherUserId, page, 20);\n      \n      const newMessages = response.messages.map(msg => ({\n        ...msg,\n        id: msg.id || (msg as any)._id\n      }));\n\n      if (isLoadingMore) {\n        // Prepend older messages (they come in reverse chronological order from API)\n        setPaginatedMessages(prev => ({\n          ...prev,\n          [conversationId]: [...newMessages, ...(prev[conversationId] || [])]\n        }));\n      } else {\n        // Initial load - replace messages\n        setPaginatedMessages(prev => ({\n          ...prev,\n          [conversationId]: newMessages\n        }));\n      }\n\n      // Update pagination info\n      setMessagePagination(prev => ({\n        ...prev,\n        [conversationId]: {\n          current: response.pagination.current,\n          pages: response.pagination.pages,\n          total: response.pagination.total,\n          hasNext: response.pagination.hasNext,\n          hasPrev: response.pagination.hasPrev,\n          loading: false,\n          initialLoaded: true\n        }\n      }));\n\n      console.log(`✅ Loaded ${newMessages.length} messages for conversation ${conversationId}`);\n      \n    } catch (error) {\n      console.error('Error loading conversation messages:', error);\n      \n      // Fallback to using state.messages if API fails\n      const fallbackMessages = state.messages\n        .filter(msg => {\n          const messageSenderId = typeof msg.senderId === 'object' ? (msg.senderId as any).id : msg.senderId;\n          const messageReceiverId = typeof msg.receiverId === 'object' ? (msg.receiverId as any).id : msg.receiverId;\n          \n          return (\n            (messageSenderId === state.currentUser?.id && messageReceiverId === otherUserId) ||\n            (messageSenderId === otherUserId && messageReceiverId === state.currentUser?.id)\n          );\n        })\n        .sort((a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime());\n\n      setPaginatedMessages(prev => ({\n        ...prev,\n        [conversationId]: fallbackMessages\n      }));\n\n      setMessagePagination(prev => ({\n        ...prev,\n        [conversationId]: {\n          current: 1,\n          pages: 1,\n          total: fallbackMessages.length,\n          hasNext: false,\n          hasPrev: false,\n          loading: false,\n          initialLoaded: true\n        }\n      }));\n    }\n  };\n\n  // Function to load more messages when scrolling up\n  const loadMoreMessages = async (conversationId: string) => {\n    const pagination = messagePagination[conversationId];\n    if (!pagination || pagination.loading || !pagination.hasPrev) return;\n\n    const nextPage = pagination.current + 1;\n    await loadConversationMessages(conversationId, nextPage, true);\n  };\n\n  // Infinite scroll handler\n  const handleScroll = (e: React.UIEvent<HTMLDivElement>) => {\n    const container = e.currentTarget;\n    const { scrollTop, scrollHeight, clientHeight } = container;\n    \n    // Load more messages when scrolled near the top\n    if (scrollTop < 100 && selectedConversation) {\n      loadMoreMessages(selectedConversation);\n    }\n  };\n\n  // Auto-scroll to bottom when new messages arrive (but preserve scroll position when loading more)\n  const scrollToBottom = (force: boolean = false) => {\n    if (messagesEndRef.current) {\n      const container = messagesContainerRef.current;\n      if (!container) return;\n\n      const { scrollTop, scrollHeight, clientHeight } = container;\n      const isNearBottom = scrollHeight - scrollTop - clientHeight < 100;\n      \n      // Only auto-scroll if user is near bottom or it's forced\n      if (force || isNearBottom) {\n        messagesEndRef.current.scrollIntoView({ \n          behavior: 'smooth',\n          block: 'end',\n          inline: 'nearest'\n        });\n      }\n    }\n  };\n\n  // Preserve scroll position when loading more messages\n  const preserveScrollPosition = () => {\n    if (messagesContainerRef.current) {\n      const container = messagesContainerRef.current;\n      const newScrollHeight = container.scrollHeight;\n      const heightDifference = newScrollHeight - lastScrollHeight.current;\n      \n      if (heightDifference > 0) {\n        container.scrollTop += heightDifference;\n      }\n      \n      lastScrollHeight.current = newScrollHeight;\n    }\n  };\n\n  return (\n    <div className=\"h-full flex\">\n      {/* Mobile: Show either conversations list or chat */}\n      <div className=\"lg:hidden w-full h-full\">\n        {selectedConversation ? renderChatInterface() : renderConversationsList()}\n      </div>\n      \n      {/* Desktop: Show both side by side */}\n      <div className=\"hidden lg:flex w-full h-full\">\n        {renderConversationsList()}\n        {renderChatInterface()}\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}